
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND ASTERISCO AUTO BACKSLASH BOOL CHAR CHARACTER CIRCUNFLEJO CLASS COMADOBLE COMASIMPLE COMENTARIO COMMA CORCHETEL CORCHETER COUT DOBLEPUNTO ELSE ENTERO EXCLAMACION FALSE FLOAT FLOTANTE FOR IDENTIFICADOR IF IGUAL INT INTERROGACION LLAVEL LLAVER LONG LPAR MAS MAYOR MENOR MENOS NEW NULLPOINTER NUMERAL PIPE PORCENTAJE PRINT PRIVATE PROTECTED PUBLIC PUNTERO PUNTO PUNTOCOMA RETURN RPAR SLASH STATIC STRING STRUCT THEN TRUE VIRGUILA VOID WHILEbody : variable\n            | while\n            | expresionif\n            | claseimplementacion\n            | for\n            | arraydeclaration\n            | funcionclaseimpl\n            | creacionobjeto\n            | asignarvalorobjeto\n            | usarfuncionobjeto\n            | struct\n            | imprimir\n            |tipo : INT \n            | FLOAT\n            | LONG\n            | AUTO\n            | CHAR\n            | VOIDimprimir : PRINT LPAR valor RPAR \n                | COUT MENOR MENOR valor bodyblock : bodyblock variable\n                    | bodyblock while\n                    | bodyblock expresionif\n                    | bodyblock for\n                    | bodyblock imprimir\n                    |  funcionblock : bodyblock variable\n                    |  bodyblock while\n                    | bodyblock expresionif\n                    | bodyblock for\n                    | bodyblock imprimir\n                    | RETURN statement\n                    | varblock : varblock variable\n                | variable : AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA\n                | AUTO IDENTIFICADOR PUNTOCOMAvariable : numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA\n                | numerotipo IDENTIFICADOR PUNTOCOMAvariable : CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMAnumerotipo : INT\n              | FLOAT\n              | LONGnumero : ENTERO\n              | FLOTANTEvalor : ENTERO \n            | FLOTANTE\n            | CHARACTER\n            | STRING\n            | TRUE\n            | FALSE\n            | IDENTIFICADORwhile : WHILE LPAR statement RPAR LLAVEL bodyblock LLAVERexpresion : expresion comparador expresionstruct : STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMAexpresionif : IF LPAR condicionif RPAR conllaves expresionpos\n                    | IF LPAR condicionif RPAR sinllaves expresionpos\n                    expresionpos : else\n                    | elseif\n                    |  elseif : ELSE IF LPAR condicionif RPAR conllaves else\n                | ELSE IF LPAR condicionif RPAR sinllaves else\n                | else : ELSE conllaves\n            | ELSE sinllavessinllaves : while\n                | variableconllaves : LLAVEL bodyblock LLAVERcondicionif : initcondicion\n                | statementinitcondicion : varblock statementstatement : expresion\n                | EXCLAMACION boolean\n                | EXCLAMACION LPAR expresion RPAR\n                | EXCLAMACION IDENTIFICADORboolean : TRUE\n                | FALSEexpresion : valorcomparador : IGUAL IGUAL\n                | MENOR\n                | MAYOR\n                | MENOR IGUAL\n                | MAYOR IGUAL\n                | EXCLAMACION IGUALinitfor : tipo IDENTIFICADOR IGUAL valorcondfor : IDENTIFICADOR comparador valorloopfor : asign \n        | unaryexpasign : IDENTIFICADOR MAS valor \n        | IDENTIFICADOR MENOS valor \n        | IDENTIFICADOR ASTERISCO valor \n        | IDENTIFICADOR SLASH valorunaryexp : IDENTIFICADOR MAS MAS \n        | IDENTIFICADOR MENOS MENOSfor : FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVERarraydeclaration : tipo IDENTIFICADOR CORCHETEL ENTERO CORCHETER PUNTOCOMA\n    | tipo IDENTIFICADOR CORCHETEL ENTERO CORCHETER IGUAL LLAVEL arraydata LLAVER PUNTOCOMA\n    | tipo IDENTIFICADOR CORCHETEL ENTERO CORCHETER IGUAL LLAVEL LLAVER PUNTOCOMAarraydata : arraydata COMMA  valor \n        | valor claseimplementacion : CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER bloqueclase : bloqueclase definicion\n                    |  bloqueclase funcionclaseimpl\n                    | definicion : tipo IDENTIFICADOR PUNTOCOMA\n                    |  funcionclaseimpl : tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER\n                        | VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER\n                        |parametrosimplementacion :  tipo IDENTIFICADOR masparametrosimplementacion\n                                |  parametrosfuncion : IDENTIFICADOR masparametrosfuncion\n                            | masparametrosimplementacion :  COMMA parametrosimplementacion\n                                    |  masparametrosfuncion : COMMA parametrosfuncion\n                            |  creacionobjeto : IDENTIFICADOR IDENTIFICADOR PUNTOCOMA asignarvalorobjeto : IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor\n                            | LPAR expresion RPAR\n                            | LPAR statement RPAR\n                            | EXCLAMACION  LPAR statement RPAR usarfuncionobjeto : IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA '
    
_lr_action_items = {'$end':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,42,43,44,45,46,47,48,59,60,63,67,73,128,130,131,132,133,136,137,140,141,143,144,145,161,162,163,165,171,179,180,186,187,189,200,211,222,226,231,232,234,235,],[-13,0,-1,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-53,-47,-48,-49,-50,-51,-52,-38,-119,-40,-121,-122,-123,-20,-21,-37,-120,-39,-41,-61,-61,-67,-68,-102,-57,-59,-60,-58,-97,-124,-54,-65,-66,-69,-56,-109,-99,-98,-96,-108,-62,-63,]),'AUTO':([0,42,43,44,45,46,47,48,49,51,59,63,82,83,93,94,96,113,115,121,129,130,131,132,136,137,138,140,141,142,143,144,146,147,160,161,162,163,164,165,166,174,175,176,180,181,182,183,184,185,186,187,189,190,198,199,201,211,213,224,225,231,232,233,234,235,],[14,-53,-47,-48,-49,-50,-51,-52,-36,89,-38,-40,116,-105,89,89,-36,116,-35,89,116,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,-103,-104,116,-57,-59,-60,116,-58,116,89,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,-106,116,116,-36,-109,-27,116,116,-96,-108,116,-62,-63,]),'CHAR':([0,42,43,44,45,46,47,48,49,51,59,63,82,83,93,94,96,113,115,121,129,130,131,132,136,137,138,140,141,142,143,144,146,147,160,161,162,163,164,165,166,174,175,176,180,181,182,183,184,185,186,187,189,190,198,199,201,211,213,224,225,231,232,233,234,235,],[17,-53,-47,-48,-49,-50,-51,-52,-36,90,-38,-40,117,-105,90,90,-36,117,-35,90,117,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,-103,-104,117,-57,-59,-60,117,-58,117,90,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,-106,117,117,-36,-109,-27,117,117,-96,-108,117,-62,-63,]),'WHILE':([0,42,43,44,45,46,47,48,59,63,113,130,131,132,136,137,138,140,141,142,143,144,160,161,162,163,164,165,166,175,176,180,181,182,183,184,185,186,187,189,198,199,213,224,225,231,233,234,235,],[18,-53,-47,-48,-49,-50,-51,-52,-38,-40,18,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,18,-57,-59,-60,18,-58,18,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,18,18,-27,18,18,-96,18,-62,-63,]),'IF':([0,42,43,44,45,46,47,48,59,63,130,131,132,136,137,138,140,141,142,143,144,160,161,162,163,164,165,166,175,176,180,181,182,183,184,185,186,187,189,198,199,213,225,231,234,235,],[20,-53,-47,-48,-49,-50,-51,-52,-38,-40,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,20,-57,-59,-60,188,-58,20,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,20,20,-27,20,-96,-62,-63,]),'CLASS':([0,],[21,]),'FOR':([0,42,43,44,45,46,47,48,59,63,130,131,132,136,137,138,140,141,142,143,144,160,161,162,163,165,166,175,176,180,181,182,183,184,185,186,187,189,198,199,213,225,231,234,235,],[22,-53,-47,-48,-49,-50,-51,-52,-38,-40,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,22,-57,-59,-60,-58,22,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,22,22,-27,22,-96,-62,-63,]),'VOID':([0,51,83,93,94,121,146,147,174,190,211,232,],[24,91,-105,91,91,24,-103,-104,91,-106,-109,-108,]),'IDENTIFICADOR':([0,14,15,16,17,19,21,23,24,26,29,30,31,34,37,41,49,54,56,58,59,63,68,70,71,75,82,85,86,87,88,89,90,91,98,100,101,108,109,110,111,115,116,117,118,119,120,122,125,132,136,137,148,151,156,158,168,169,196,201,203,204,205,206,210,221,],[15,32,33,35,36,42,50,52,53,55,-14,-15,-16,61,42,76,42,42,42,42,-38,-40,42,-81,-82,42,42,123,-14,-15,-16,-17,-18,-19,42,42,134,-80,-83,-84,-85,-35,32,36,-42,-43,-44,150,153,-37,-39,-41,167,42,177,134,194,42,42,42,42,42,42,42,42,42,]),'LPAR':([0,18,20,22,25,27,41,52,53,61,167,188,],[19,37,49,51,54,56,75,93,94,101,93,201,]),'EXCLAMACION':([0,19,37,38,40,42,43,44,45,46,47,48,49,54,59,63,66,82,107,112,115,132,136,137,150,201,],[25,41,41,72,-79,-53,-47,-48,-49,-50,-51,-52,41,41,-38,-40,72,41,72,72,-35,-37,-39,-41,72,41,]),'STRUCT':([0,],[26,]),'PRINT':([0,42,43,44,45,46,47,48,59,63,130,131,132,136,137,138,140,141,142,143,144,160,161,162,163,165,166,175,176,180,181,182,183,184,185,186,187,189,198,199,213,225,231,234,235,],[27,-53,-47,-48,-49,-50,-51,-52,-38,-40,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,27,-57,-59,-60,-58,27,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,27,27,-27,27,-96,-62,-63,]),'COUT':([0,42,43,44,45,46,47,48,59,63,130,131,132,136,137,138,140,141,142,143,144,160,161,162,163,165,166,175,176,180,181,182,183,184,185,186,187,189,198,199,213,225,231,234,235,],[28,-53,-47,-48,-49,-50,-51,-52,-38,-40,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,28,-57,-59,-60,-58,28,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,28,28,-27,28,-96,-62,-63,]),'INT':([0,42,43,44,45,46,47,48,49,51,59,63,82,83,93,94,96,113,115,121,129,130,131,132,136,137,138,140,141,142,143,144,146,147,160,161,162,163,164,165,166,174,175,176,180,181,182,183,184,185,186,187,189,190,198,199,201,211,213,224,225,231,232,233,234,235,],[29,-53,-47,-48,-49,-50,-51,-52,-36,86,-38,-40,118,-105,86,86,-36,118,-35,86,118,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,-103,-104,118,-57,-59,-60,118,-58,118,86,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,-106,118,118,-36,-109,-27,118,118,-96,-108,118,-62,-63,]),'FLOAT':([0,42,43,44,45,46,47,48,49,51,59,63,82,83,93,94,96,113,115,121,129,130,131,132,136,137,138,140,141,142,143,144,146,147,160,161,162,163,164,165,166,174,175,176,180,181,182,183,184,185,186,187,189,190,198,199,201,211,213,224,225,231,232,233,234,235,],[30,-53,-47,-48,-49,-50,-51,-52,-36,87,-38,-40,119,-105,87,87,-36,119,-35,87,119,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,-103,-104,119,-57,-59,-60,119,-58,119,87,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,-106,119,119,-36,-109,-27,119,119,-96,-108,119,-62,-63,]),'LONG':([0,42,43,44,45,46,47,48,49,51,59,63,82,83,93,94,96,113,115,121,129,130,131,132,136,137,138,140,141,142,143,144,146,147,160,161,162,163,164,165,166,174,175,176,180,181,182,183,184,185,186,187,189,190,198,199,201,211,213,224,225,231,232,233,234,235,],[31,-53,-47,-48,-49,-50,-51,-52,-36,88,-38,-40,120,-105,88,88,-36,120,-35,88,120,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,-103,-104,120,-57,-59,-60,120,-58,120,88,-27,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,-106,120,120,-36,-109,-27,120,120,-96,-108,120,-62,-63,]),'PUNTO':([15,],[34,]),'ENTERO':([19,37,49,54,56,58,59,62,63,68,70,71,75,82,92,98,100,108,109,110,111,115,132,136,137,151,169,196,201,203,204,205,206,210,221,],[43,43,43,43,43,43,-38,103,-40,43,-81,-82,43,43,124,43,43,-80,-83,-84,-85,-35,-37,-39,-41,43,43,43,43,43,43,43,43,43,43,]),'FLOTANTE':([19,37,49,54,56,58,59,62,63,68,70,71,75,82,98,100,108,109,110,111,115,132,136,137,151,169,196,201,203,204,205,206,210,221,],[44,44,44,44,44,44,-38,104,-40,44,-81,-82,44,44,44,44,-80,-83,-84,-85,-35,-37,-39,-41,44,44,44,44,44,44,44,44,44,44,]),'CHARACTER':([19,37,49,54,56,58,59,63,64,68,70,71,75,82,98,100,108,109,110,111,115,132,136,137,151,169,196,201,203,204,205,206,210,221,],[45,45,45,45,45,45,-38,-40,105,45,-81,-82,45,45,45,45,-80,-83,-84,-85,-35,-37,-39,-41,45,45,45,45,45,45,45,45,45,45,]),'STRING':([19,37,49,54,56,58,59,63,68,70,71,75,82,98,100,108,109,110,111,115,132,136,137,151,169,196,201,203,204,205,206,210,221,],[46,46,46,46,46,46,-38,-40,46,-81,-82,46,46,46,46,-80,-83,-84,-85,-35,-37,-39,-41,46,46,46,46,46,46,46,46,46,46,]),'TRUE':([19,37,41,49,54,56,58,59,63,68,70,71,75,82,98,100,108,109,110,111,115,132,136,137,151,169,196,201,203,204,205,206,210,221,],[47,47,77,47,47,47,47,-38,-40,47,-81,-82,47,47,47,47,-80,-83,-84,-85,-35,-37,-39,-41,47,47,47,47,47,47,47,47,47,47,]),'FALSE':([19,37,41,49,54,56,58,59,63,68,70,71,75,82,98,100,108,109,110,111,115,132,136,137,151,169,196,201,203,204,205,206,210,221,],[48,48,78,48,48,48,48,-38,-40,48,-81,-82,48,48,48,48,-80,-83,-84,-85,-35,-37,-39,-41,48,48,48,48,48,48,48,48,48,48,]),'MENOR':([28,38,40,42,43,44,45,46,47,48,57,66,107,112,150,],[57,70,-79,-53,-47,-48,-49,-50,-51,-52,98,70,70,70,70,]),'IGUAL':([32,35,36,38,40,42,43,44,45,46,47,48,61,66,69,70,71,72,107,112,123,150,152,],[58,62,64,69,-79,-53,-47,-48,-49,-50,-51,-52,100,69,108,109,110,111,69,69,151,69,172,]),'PUNTOCOMA':([32,33,35,42,43,44,45,46,47,48,84,99,102,103,104,105,149,152,159,167,170,177,195,208,220,223,],[59,60,63,-53,-47,-48,-49,-50,-51,-52,122,132,136,-45,-46,137,168,171,179,190,-86,200,-87,222,226,228,]),'RPAR':([38,39,40,42,43,44,45,46,47,48,65,66,74,76,77,78,79,80,81,93,94,95,97,101,107,112,114,126,127,134,135,139,153,157,158,173,174,178,191,192,193,197,212,214,215,216,217,218,219,],[67,73,-79,-53,-47,-48,-49,-50,-51,-52,106,-73,-74,-76,-77,-78,113,-70,-71,-112,-112,128,130,-114,-55,139,-72,154,155,-118,159,-75,-116,-113,-114,-111,-112,-117,202,-88,-89,-115,224,-94,-90,-95,-91,-92,-93,]),'MAYOR':([38,40,42,43,44,45,46,47,48,66,107,112,150,],[71,-79,-53,-47,-48,-49,-50,-51,-52,71,71,71,71,]),'LLAVER':([42,43,44,45,46,47,48,59,63,83,96,115,121,129,130,131,132,136,137,138,140,141,142,143,144,146,147,160,161,162,163,165,166,176,180,181,182,183,184,185,186,187,189,190,196,199,207,209,211,213,225,227,228,231,232,234,235,],[-53,-47,-48,-49,-50,-51,-52,-38,-40,-105,-36,-35,145,156,-20,-21,-37,-39,-41,-27,-61,-61,-27,-67,-68,-103,-104,180,-57,-59,-60,-58,189,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,-106,208,211,220,-101,-109,-27,231,-100,232,-96,-108,-62,-63,]),'RETURN':([42,43,44,45,46,47,48,59,63,130,131,132,136,137,140,141,143,144,161,162,163,165,175,180,181,182,183,184,185,186,187,189,198,231,234,235,],[-53,-47,-48,-49,-50,-51,-52,-38,-40,-20,-21,-37,-39,-41,-61,-61,-67,-68,-57,-59,-60,-58,-27,-54,-22,-23,-24,-25,-26,-65,-66,-69,210,-96,-62,-63,]),'COMMA':([42,43,44,45,46,47,48,134,153,207,209,227,],[-53,-47,-48,-49,-50,-51,-52,158,174,221,-101,-100,]),'LLAVEL':([50,55,106,113,154,155,164,172,202,224,233,],[83,96,138,142,175,176,142,196,213,142,142,]),'CORCHETEL':([52,],[92,]),'ELSE':([59,63,132,136,137,140,141,143,144,180,189,229,230,],[-38,-40,-37,-39,-41,164,164,-67,-68,-54,-69,233,233,]),'CORCHETER':([124,],[152,]),'MAS':([194,203,],[203,214,]),'MENOS':([194,204,],[204,216,]),'ASTERISCO':([194,],[205,]),'SLASH':([194,],[206,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,],[1,]),'variable':([0,82,113,129,160,164,166,198,199,224,225,233,],[2,115,144,115,181,144,181,181,181,144,181,144,]),'while':([0,113,160,164,166,198,199,224,225,233,],[3,143,182,143,182,182,182,143,182,143,]),'expresionif':([0,160,166,198,199,225,],[4,183,183,183,183,183,]),'claseimplementacion':([0,],[5,]),'for':([0,160,166,198,199,225,],[6,184,184,184,184,184,]),'arraydeclaration':([0,],[7,]),'funcionclaseimpl':([0,121,],[8,147,]),'creacionobjeto':([0,],[9,]),'asignarvalorobjeto':([0,],[10,]),'usarfuncionobjeto':([0,],[11,]),'struct':([0,],[12,]),'imprimir':([0,160,166,198,199,225,],[13,185,185,185,185,185,]),'numerotipo':([0,82,113,129,160,164,166,198,199,224,225,233,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'tipo':([0,51,93,94,121,174,],[23,85,125,125,148,125,]),'expresion':([19,37,49,54,68,75,82,201,],[38,66,66,66,107,112,66,66,]),'statement':([19,37,49,54,82,201,],[39,65,81,95,114,81,]),'valor':([19,37,49,54,56,58,68,75,82,98,100,151,169,196,201,203,204,205,206,210,221,],[40,40,40,40,97,99,40,40,40,131,133,170,195,209,40,215,217,218,219,223,227,]),'comparador':([38,66,107,112,150,],[68,68,68,68,169,]),'boolean':([41,],[74,]),'condicionif':([49,201,],[79,212,]),'initcondicion':([49,201,],[80,80,]),'varblock':([49,96,201,],[82,129,82,]),'initfor':([51,],[84,]),'numero':([62,],[102,]),'bloqueclase':([83,],[121,]),'parametrosimplementacion':([93,94,174,],[126,127,197,]),'parametrosfuncion':([101,158,],[135,178,]),'conllaves':([113,164,224,233,],[140,186,229,186,]),'sinllaves':([113,164,224,233,],[141,187,230,187,]),'definicion':([121,],[146,]),'condfor':([122,],[149,]),'masparametrosfuncion':([134,],[157,]),'bodyblock':([138,142,175,176,213,],[160,166,198,199,225,]),'expresionpos':([140,141,],[161,165,]),'else':([140,141,229,230,],[162,162,234,235,]),'elseif':([140,141,],[163,163,]),'masparametrosimplementacion':([153,],[173,]),'loopfor':([168,],[191,]),'asign':([168,],[192,]),'unaryexp':([168,],[193,]),'arraydata':([196,],[207,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> variable','body',1,'p_body','sintactico.py',6),
  ('body -> while','body',1,'p_body','sintactico.py',7),
  ('body -> expresionif','body',1,'p_body','sintactico.py',8),
  ('body -> claseimplementacion','body',1,'p_body','sintactico.py',9),
  ('body -> for','body',1,'p_body','sintactico.py',10),
  ('body -> arraydeclaration','body',1,'p_body','sintactico.py',11),
  ('body -> funcionclaseimpl','body',1,'p_body','sintactico.py',12),
  ('body -> creacionobjeto','body',1,'p_body','sintactico.py',13),
  ('body -> asignarvalorobjeto','body',1,'p_body','sintactico.py',14),
  ('body -> usarfuncionobjeto','body',1,'p_body','sintactico.py',15),
  ('body -> struct','body',1,'p_body','sintactico.py',16),
  ('body -> imprimir','body',1,'p_body','sintactico.py',17),
  ('body -> <empty>','body',0,'p_body','sintactico.py',18),
  ('tipo -> INT','tipo',1,'p_tipo','sintactico.py',23),
  ('tipo -> FLOAT','tipo',1,'p_tipo','sintactico.py',24),
  ('tipo -> LONG','tipo',1,'p_tipo','sintactico.py',25),
  ('tipo -> AUTO','tipo',1,'p_tipo','sintactico.py',26),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintactico.py',27),
  ('tipo -> VOID','tipo',1,'p_tipo','sintactico.py',28),
  ('imprimir -> PRINT LPAR valor RPAR','imprimir',4,'p_impirmir','sintactico.py',32),
  ('imprimir -> COUT MENOR MENOR valor','imprimir',4,'p_impirmir','sintactico.py',33),
  ('bodyblock -> bodyblock variable','bodyblock',2,'p_bodyblock','sintactico.py',37),
  ('bodyblock -> bodyblock while','bodyblock',2,'p_bodyblock','sintactico.py',38),
  ('bodyblock -> bodyblock expresionif','bodyblock',2,'p_bodyblock','sintactico.py',39),
  ('bodyblock -> bodyblock for','bodyblock',2,'p_bodyblock','sintactico.py',40),
  ('bodyblock -> bodyblock imprimir','bodyblock',2,'p_bodyblock','sintactico.py',41),
  ('bodyblock -> <empty>','bodyblock',0,'p_bodyblock','sintactico.py',42),
  ('funcionblock -> bodyblock variable','funcionblock',2,'p_funcionblock','sintactico.py',44),
  ('funcionblock -> bodyblock while','funcionblock',2,'p_funcionblock','sintactico.py',45),
  ('funcionblock -> bodyblock expresionif','funcionblock',2,'p_funcionblock','sintactico.py',46),
  ('funcionblock -> bodyblock for','funcionblock',2,'p_funcionblock','sintactico.py',47),
  ('funcionblock -> bodyblock imprimir','funcionblock',2,'p_funcionblock','sintactico.py',48),
  ('funcionblock -> RETURN statement','funcionblock',2,'p_funcionblock','sintactico.py',49),
  ('funcionblock -> <empty>','funcionblock',0,'p_funcionblock','sintactico.py',50),
  ('varblock -> varblock variable','varblock',2,'p_varblock','sintactico.py',53),
  ('varblock -> <empty>','varblock',0,'p_varblock','sintactico.py',54),
  ('variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA','variable',5,'p_variable','sintactico.py',56),
  ('variable -> AUTO IDENTIFICADOR PUNTOCOMA','variable',3,'p_variable','sintactico.py',57),
  ('variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA','variable',5,'p_variable_numero','sintactico.py',60),
  ('variable -> numerotipo IDENTIFICADOR PUNTOCOMA','variable',3,'p_variable_numero','sintactico.py',61),
  ('variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA','variable',5,'p_variable_char','sintactico.py',64),
  ('numerotipo -> INT','numerotipo',1,'p_numero_tipo','sintactico.py',67),
  ('numerotipo -> FLOAT','numerotipo',1,'p_numero_tipo','sintactico.py',68),
  ('numerotipo -> LONG','numerotipo',1,'p_numero_tipo','sintactico.py',69),
  ('numero -> ENTERO','numero',1,'p_numero','sintactico.py',72),
  ('numero -> FLOTANTE','numero',1,'p_numero','sintactico.py',73),
  ('valor -> ENTERO','valor',1,'p_valor','sintactico.py',78),
  ('valor -> FLOTANTE','valor',1,'p_valor','sintactico.py',79),
  ('valor -> CHARACTER','valor',1,'p_valor','sintactico.py',80),
  ('valor -> STRING','valor',1,'p_valor','sintactico.py',81),
  ('valor -> TRUE','valor',1,'p_valor','sintactico.py',82),
  ('valor -> FALSE','valor',1,'p_valor','sintactico.py',83),
  ('valor -> IDENTIFICADOR','valor',1,'p_valor','sintactico.py',84),
  ('while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER','while',7,'p_while','sintactico.py',89),
  ('expresion -> expresion comparador expresion','expresion',3,'p_expresion_comparacion','sintactico.py',93),
  ('struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA','struct',7,'p_struct','sintactico.py',99),
  ('expresionif -> IF LPAR condicionif RPAR conllaves expresionpos','expresionif',6,'p_expresionif','sintactico.py',105),
  ('expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos','expresionif',6,'p_expresionif','sintactico.py',106),
  ('expresionpos -> else','expresionpos',1,'p_expresionpos','sintactico.py',109),
  ('expresionpos -> elseif','expresionpos',1,'p_expresionpos','sintactico.py',110),
  ('expresionpos -> <empty>','expresionpos',0,'p_expresionpos','sintactico.py',111),
  ('elseif -> ELSE IF LPAR condicionif RPAR conllaves else','elseif',7,'p_elseif','sintactico.py',113),
  ('elseif -> ELSE IF LPAR condicionif RPAR sinllaves else','elseif',7,'p_elseif','sintactico.py',114),
  ('elseif -> <empty>','elseif',0,'p_elseif','sintactico.py',115),
  ('else -> ELSE conllaves','else',2,'p_else','sintactico.py',117),
  ('else -> ELSE sinllaves','else',2,'p_else','sintactico.py',118),
  ('sinllaves -> while','sinllaves',1,'p_sinLlaves','sintactico.py',120),
  ('sinllaves -> variable','sinllaves',1,'p_sinLlaves','sintactico.py',121),
  ('conllaves -> LLAVEL bodyblock LLAVER','conllaves',3,'p_conLlaves','sintactico.py',123),
  ('condicionif -> initcondicion','condicionif',1,'p_condicionif','sintactico.py',125),
  ('condicionif -> statement','condicionif',1,'p_condicionif','sintactico.py',126),
  ('initcondicion -> varblock statement','initcondicion',2,'p_initcondicion','sintactico.py',129),
  ('statement -> expresion','statement',1,'p_statement','sintactico.py',132),
  ('statement -> EXCLAMACION boolean','statement',2,'p_statement','sintactico.py',133),
  ('statement -> EXCLAMACION LPAR expresion RPAR','statement',4,'p_statement','sintactico.py',134),
  ('statement -> EXCLAMACION IDENTIFICADOR','statement',2,'p_statement','sintactico.py',135),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',137),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',138),
  ('expresion -> valor','expresion',1,'p_expresion','sintactico.py',141),
  ('comparador -> IGUAL IGUAL','comparador',2,'p_comparacion','sintactico.py',144),
  ('comparador -> MENOR','comparador',1,'p_comparacion','sintactico.py',145),
  ('comparador -> MAYOR','comparador',1,'p_comparacion','sintactico.py',146),
  ('comparador -> MENOR IGUAL','comparador',2,'p_comparacion','sintactico.py',147),
  ('comparador -> MAYOR IGUAL','comparador',2,'p_comparacion','sintactico.py',148),
  ('comparador -> EXCLAMACION IGUAL','comparador',2,'p_comparacion','sintactico.py',149),
  ('initfor -> tipo IDENTIFICADOR IGUAL valor','initfor',4,'p_initfor','sintactico.py',156),
  ('condfor -> IDENTIFICADOR comparador valor','condfor',3,'p_condfor','sintactico.py',159),
  ('loopfor -> asign','loopfor',1,'p_loopfor','sintactico.py',162),
  ('loopfor -> unaryexp','loopfor',1,'p_loopfor','sintactico.py',163),
  ('asign -> IDENTIFICADOR MAS valor','asign',3,'p_mathasign','sintactico.py',166),
  ('asign -> IDENTIFICADOR MENOS valor','asign',3,'p_mathasign','sintactico.py',167),
  ('asign -> IDENTIFICADOR ASTERISCO valor','asign',3,'p_mathasign','sintactico.py',168),
  ('asign -> IDENTIFICADOR SLASH valor','asign',3,'p_mathasign','sintactico.py',169),
  ('unaryexp -> IDENTIFICADOR MAS MAS','unaryexp',3,'p_unaryexp','sintactico.py',172),
  ('unaryexp -> IDENTIFICADOR MENOS MENOS','unaryexp',3,'p_unaryexp','sintactico.py',173),
  ('for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER','for',11,'p_for','sintactico.py',176),
  ('arraydeclaration -> tipo IDENTIFICADOR CORCHETEL ENTERO CORCHETER PUNTOCOMA','arraydeclaration',6,'p_array','sintactico.py',181),
  ('arraydeclaration -> tipo IDENTIFICADOR CORCHETEL ENTERO CORCHETER IGUAL LLAVEL arraydata LLAVER PUNTOCOMA','arraydeclaration',10,'p_array','sintactico.py',182),
  ('arraydeclaration -> tipo IDENTIFICADOR CORCHETEL ENTERO CORCHETER IGUAL LLAVEL LLAVER PUNTOCOMA','arraydeclaration',9,'p_array','sintactico.py',183),
  ('arraydata -> arraydata COMMA valor','arraydata',3,'p_arraydata','sintactico.py',187),
  ('arraydata -> valor','arraydata',1,'p_arraydata','sintactico.py',188),
  ('claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER','claseimplementacion',5,'p_claseimplementacion','sintactico.py',193),
  ('bloqueclase -> bloqueclase definicion','bloqueclase',2,'p_bloqueclase','sintactico.py',195),
  ('bloqueclase -> bloqueclase funcionclaseimpl','bloqueclase',2,'p_bloqueclase','sintactico.py',196),
  ('bloqueclase -> <empty>','bloqueclase',0,'p_bloqueclase','sintactico.py',197),
  ('definicion -> tipo IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',199),
  ('definicion -> <empty>','definicion',0,'p_definicion','sintactico.py',200),
  ('funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER','funcionclaseimpl',11,'p_funcionclaseimpl','sintactico.py',203),
  ('funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER','funcionclaseimpl',8,'p_funcionclaseimpl','sintactico.py',204),
  ('funcionclaseimpl -> <empty>','funcionclaseimpl',0,'p_funcionclaseimpl','sintactico.py',205),
  ('parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion','parametrosimplementacion',3,'p_parametrosimplementacion','sintactico.py',207),
  ('parametrosimplementacion -> <empty>','parametrosimplementacion',0,'p_parametrosimplementacion','sintactico.py',208),
  ('parametrosfuncion -> IDENTIFICADOR masparametrosfuncion','parametrosfuncion',2,'p_parametrosfuncion','sintactico.py',210),
  ('parametrosfuncion -> <empty>','parametrosfuncion',0,'p_parametrosfuncion','sintactico.py',211),
  ('masparametrosimplementacion -> COMMA parametrosimplementacion','masparametrosimplementacion',2,'p_masparametrosimplementacion','sintactico.py',213),
  ('masparametrosimplementacion -> <empty>','masparametrosimplementacion',0,'p_masparametrosimplementacion','sintactico.py',214),
  ('masparametrosfuncion -> COMMA parametrosfuncion','masparametrosfuncion',2,'p_masparametrosfuncion','sintactico.py',216),
  ('masparametrosfuncion -> <empty>','masparametrosfuncion',0,'p_masparametrosfuncion','sintactico.py',217),
  ('creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA','creacionobjeto',3,'p_creacionobjeto','sintactico.py',219),
  ('asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor','asignarvalorobjeto',5,'p_asignarvalores','sintactico.py',221),
  ('asignarvalorobjeto -> LPAR expresion RPAR','asignarvalorobjeto',3,'p_asignarvalores','sintactico.py',222),
  ('asignarvalorobjeto -> LPAR statement RPAR','asignarvalorobjeto',3,'p_asignarvalores','sintactico.py',223),
  ('asignarvalorobjeto -> EXCLAMACION LPAR statement RPAR','asignarvalorobjeto',4,'p_asignarvalores','sintactico.py',224),
  ('usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA','usarfuncionobjeto',7,'p_usarfuncionesobjeto','sintactico.py',226),
]
