
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND ASTERISCO AUTO BACKSLASH BOOL CADENA CHAR CHARACTER CIRCUNFLEJO CLASS COMADOBLE COMASIMPLE COMENTARIO COMMA CORCHETEL CORCHETER COUT DOBLEPUNTO ELSE ENTERO EXCLAMACION FALSE FINDELEMENT FLOAT FLOTANTE FOR IDENTIFICADOR IF IGUAL INT INTERROGACION LLAVEL LLAVER LONG LPAR MAS MAYOR MENOR MENOS NEW NULLPOINTER NUMERAL PIPE PORCENTAJE PRINT PRIVATE PROTECTED PUBLIC PUNTERO PUNTO PUNTOCOMA RETURN RPAR SLASH STATIC STRING STRUCT THEN TRUE VIRGUILA VOID WHILE\n    body : comparar PUNTOCOMA\n         | variable\n         | imprimir\n         | while\n         | for\n         | struct\n         | claseimplementacion\n         | funcionclaseimpl\n         | expresionif\n         | mathoperationempty :  bodyblock : empty\n      bodyblock : bodyblock while\n                | bodyblock variable\n                | bodyblock for\n                | bodyblock struct\n                | bodyblock imprimir\n                | bodyblock expresionif\n                | bodyblock mathoperation\n                | bodyblock operacionbool\n\n  expresionif : IF LPAR condicionif RPAR conllaves expresionpos\n                    | IF LPAR condicionif RPAR sinllaves expresionpos\n                    | IF LPAR condicionif RPAR conllaves \n                    | IF LPAR condicionif RPAR sinllaves PUNTOCOMA\n                    expresionpos : else\n                    | elseif elseif : ELSE IF LPAR condicionif RPAR conllaves else\n                | ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else \n                | ELSE IF LPAR condicionif RPAR conllaves \n                | ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMAelse : ELSE conllaves\n            | ELSE sinllaves PUNTOCOMAsinllaves : while\n                | variableconllaves : LLAVEL bodyblock LLAVERcondicionif : initcondicion\n                | statementinitcondicion : varblock statement claseimplementacion : CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA\n                            | CLASS IDENTIFICADOR LLAVEL  LLAVER PUNTOCOMA\n                            | CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA \n    acceso : PUBLIC DOBLEPUNTO\n          | PRIVATE DOBLEPUNTO\n          | PROTECTED DOBLEPUNTO\n   \n    bloqueclase : bloqueclase atributoclase\n                    | atributoclase  \n    atributoclase : definicion\n                  | funcionclaseimpl\n                  \n  definicion : numerotipo IDENTIFICADOR PUNTOCOMA\n                  | STRING IDENTIFICADOR PUNTOCOMA\n                  | CHAR IDENTIFICADOR PUNTOCOMA\n                  | BOOL IDENTIFICADOR PUNTOCOMA \n      funcionclaseimpl :  funcionimplvoid\n                        | funcionimplnumero\n                        | funcionimplstring\n                        | funcionimplbool\n    \n    funcionimplstring : STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER\n                    | CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER\n                    | CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER\n   funcionimplvoid : VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER\n  \n    funcionimplnumero : numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER \n                      | numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER\n                      | numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA\n  \n    funcionimplbool : BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER \n                      | BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER\n                      | BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA\n  \n    parametrosimpl : LPAR RPAR\n                  | LPAR parametros RPAR\n   parametros : tipo IDENTIFICADOR\n                  | tipo IDENTIFICADOR masparametros \n  \n    masparametros : COMMA parametros \n  imprimir : PRINT LPAR concat RPAR PUNTOCOMA \n                | COUT MENOR MENOR concat PUNTOCOMAwhile : WHILE LPAR statement RPAR LLAVEL bodyblock LLAVERfor : FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVERvarblock : varblock variable\n                | variablestruct : STRUCT IDENTIFICADOR LLAVEL  LLAVER IDENTIFICADOR PUNTOCOMA\n              | STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMAunaryexp : IDENTIFICADOR MAS MAS \n        | IDENTIFICADOR MENOS MENOSstatement : expresion\n                | EXCLAMACION boolean\n                | EXCLAMACION LPAR expresion RPAR\n                | EXCLAMACION IDENTIFICADOR\n                | boolean\n                | numerovariable : variableauto \n                | variablenumero\n                | variablechar\n                | variablestring\n                | variablearraynumero\n                | variablearraychar\n                | variableboolean\n                  variablenumero : numerotipo id IGUAL mathoperation PUNTOCOMA\n                        | numerotipo id PUNTOCOMA\n                        | numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA \n    variableauto : AUTO id IGUAL valor PUNTOCOMA\n                | AUTO id PUNTOCOMA\n                \n   \n    variablechar : CHAR id IGUAL CHARACTER PUNTOCOMA\n                  | CHAR id PUNTOCOMA\n                  | CHAR id IGUAL IDENTIFICADOR PUNTOCOMA\n   \n    variableboolean : BOOL id IGUAL operacionbool PUNTOCOMA\n                  | BOOL id PUNTOCOMA\n                  | BOOL id IGUAL IDENTIFICADOR PUNTOCOMA\n  \n    variablestring : STRING id IGUAL stringappend PUNTOCOMA\n                | STRING id IGUAL concat PUNTOCOMA\n                | STRING id PUNTOCOMA\n   variablearraynumero : numerotipo idarray PUNTOCOMA\n                    | numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA\n                    | numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMAarraydatanumero : arraydatanumero COMMA  numero\n                | numero variablearraychar : CHAR idarray PUNTOCOMA\n                        | CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA\n                        | CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA\n                        | CHAR idarray IGUAL CADENA  PUNTOCOMA\n   datachar : CHARACTER\n                | datachar COMMA CHARACTER\n  \n  stringappend : IDENTIFICADOR PUNTO APPEND LPAR stringdata RPARconcat : stringdata MAS concat\n              | stringdataexpresion : valor comparador valor\n                | LPAR valor comparador valor  RPAR \n    comparar : expresion\n            | expresion comparador comparar\n    mathoperation : numero operation \n        | numero\n        operation : MAS mathoperation\n        |  MENOS mathoperation\n        | ASTERISCO mathoperation\n        |  SLASH mathoperation operacionbool : boolean comparador boolean \n                      | booleanboolean : TRUE\n                | FALSEcomparador : IGUAL IGUAL\n                | MENOR\n                | MAYOR\n                | MENOR IGUAL\n                | MAYOR IGUAL\n                | EXCLAMACION IGUALid : IDENTIFICADOR idarray : IDENTIFICADOR CORCHETEL ENTERO CORCHETER numero : ENTERO\n              | FLOTANTE\n              numerotipo : INT\n              | FLOAT\n              | LONGstringdata : CADENA\n                | IDENTIFICADORtipo : numerotipo\n            | STRING\n            | CHARvalor : numero\n            | CHARACTER\n            | boolean\n            | stringdata'
    
_lr_action_items = {'PRINT':([0,13,14,15,16,17,18,19,44,45,50,51,67,102,106,108,109,110,111,112,126,128,130,133,136,150,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,276,277,278,280,285,288,293,295,297,300,303,312,336,340,342,343,344,345,346,],[20,-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-11,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,20,-12,-23,-11,-98,-100,-102,20,-117,-106,-107,20,-103,-105,20,20,20,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,-22,-24,20,-115,-133,-74,-110,-79,-31,-35,-116,-32,-29,-11,-27,-30,20,-28,-75,]),'COUT':([0,13,14,15,16,17,18,19,44,45,50,51,67,102,106,108,109,110,111,112,126,128,130,133,136,150,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,276,277,278,280,285,288,293,295,297,300,303,312,336,340,342,343,344,345,346,],[22,-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-11,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,22,-12,-23,-11,-98,-100,-102,22,-117,-106,-107,22,-103,-105,22,22,22,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,-22,-24,22,-115,-133,-74,-110,-79,-31,-35,-116,-32,-29,-11,-27,-30,22,-28,-75,]),'WHILE':([0,13,14,15,16,17,18,19,44,45,50,51,67,102,106,108,109,110,111,112,126,128,130,133,136,150,175,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,275,276,277,278,280,285,288,293,295,297,300,303,312,332,336,340,341,342,343,344,345,346,],[23,-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-11,23,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,23,-12,-23,-11,-98,-100,-102,23,-117,-106,-107,23,-103,-105,23,23,23,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,23,-22,-24,23,-115,-133,-74,-110,-79,-31,-35,-116,-32,23,-29,-11,23,-27,-30,23,-28,-75,]),'FOR':([0,13,14,15,16,17,18,19,44,45,50,51,67,102,106,108,109,110,111,112,126,128,130,133,136,150,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,276,277,278,280,285,288,293,295,297,300,303,312,336,340,342,343,344,345,346,],[24,-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-11,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,24,-12,-23,-11,-98,-100,-102,24,-117,-106,-107,24,-103,-105,24,24,24,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,-22,-24,24,-115,-133,-74,-110,-79,-31,-35,-116,-32,-29,-11,-27,-30,24,-28,-75,]),'STRUCT':([0,13,14,15,16,17,18,19,44,45,50,51,67,102,106,108,109,110,111,112,126,128,130,133,136,150,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,276,277,278,280,285,288,293,295,297,300,303,312,336,340,342,343,344,345,346,],[28,-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-11,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,28,-12,-23,-11,-98,-100,-102,28,-117,-106,-107,28,-103,-105,28,28,28,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,-22,-24,28,-115,-133,-74,-110,-79,-31,-35,-116,-32,-29,-11,-27,-30,28,-28,-75,]),'CLASS':([0,],[29,]),'IF':([0,13,14,15,16,17,18,19,44,45,50,51,67,102,106,108,109,110,111,112,126,128,130,133,136,150,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,275,276,277,278,280,285,288,293,295,297,300,303,312,336,340,342,343,344,345,346,],[34,-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-11,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,34,-12,-23,-11,-98,-100,-102,34,-117,-106,-107,34,-103,-105,34,34,34,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,299,-22,-24,34,-115,-133,-74,-110,-79,-31,-35,-116,-32,-29,-11,-27,-30,34,-28,-75,]),'LPAR':([0,13,14,15,16,17,18,19,20,23,24,34,53,55,56,62,65,74,79,82,84,85,87,88,89,90,97,102,106,118,119,126,128,130,133,136,145,177,202,203,221,222,223,224,230,231,232,237,238,239,242,243,263,280,283,289,293,299,303,313,],[21,-88,-89,-90,-91,-92,-93,-94,58,62,63,74,21,-138,-139,21,105,21,105,105,105,105,-137,-140,-141,-142,145,-96,-109,21,-77,-99,-101,-114,-108,-104,21,-76,-95,-97,105,105,105,105,-98,-100,-102,-117,-106,-107,-103,-105,-111,-115,305,21,-110,313,-116,21,]),'AUTO':([0,13,14,15,16,17,18,19,44,45,50,51,67,74,102,106,108,109,110,111,112,113,118,119,126,128,130,133,136,150,161,175,177,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,275,276,277,278,280,285,288,293,295,297,300,303,312,313,332,336,340,341,342,343,344,345,346,],[36,-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,36,-96,-109,-129,-128,-130,-131,-132,36,36,-77,-99,-101,-114,-108,-104,-11,36,36,-76,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,36,-12,-23,-11,-98,-100,-102,36,-117,-106,-107,36,-103,-105,36,36,36,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,36,-22,-24,36,-115,-133,-74,-110,-79,-31,-35,-116,-32,36,36,-29,-11,36,-27,-30,36,-28,-75,]),'CHAR':([0,13,14,15,16,17,18,19,30,31,32,33,44,45,50,51,67,74,102,105,106,108,109,110,111,112,113,114,118,119,126,128,130,133,136,150,151,161,162,164,165,169,170,175,177,182,188,191,192,193,194,195,198,199,202,203,204,205,215,217,218,219,220,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,260,263,264,268,269,270,271,272,273,274,275,276,277,278,280,285,287,288,293,295,297,300,303,312,313,321,322,324,325,327,328,329,332,336,340,341,342,343,344,345,346,],[37,-88,-89,-90,-91,-92,-93,-94,-53,-54,-55,-56,-145,-146,-135,-136,-127,121,-96,158,-109,-129,-128,-130,-131,-132,121,173,121,-77,-99,-101,-114,-108,-104,-11,-63,121,173,173,-46,-47,-48,121,-76,-11,-11,-134,-11,-66,-11,-72,-73,-11,-95,-97,121,-12,-45,173,-42,-43,-44,-23,-11,-98,-100,-102,121,-117,-106,-107,121,-103,-105,121,121,121,-13,-14,-15,-16,-17,-18,-19,-20,158,-111,-78,-49,-50,-51,-52,-21,-25,-26,121,-22,-24,121,-115,-133,-60,-74,-110,-79,-31,-35,-116,-32,121,-62,-61,-59,-58,-57,-65,-64,121,-29,-11,121,-27,-30,121,-28,-75,]),'STRING':([0,13,14,15,16,17,18,19,30,31,32,33,44,45,50,51,67,74,102,105,106,108,109,110,111,112,113,114,118,119,126,128,130,133,136,150,151,161,162,164,165,169,170,175,177,182,188,191,192,193,194,195,198,199,202,203,204,205,215,217,218,219,220,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,260,263,264,268,269,270,271,272,273,274,275,276,277,278,280,285,287,288,293,295,297,300,303,312,313,321,322,324,325,327,328,329,332,336,340,341,342,343,344,345,346,],[39,-88,-89,-90,-91,-92,-93,-94,-53,-54,-55,-56,-145,-146,-135,-136,-127,122,-96,157,-109,-129,-128,-130,-131,-132,122,172,122,-77,-99,-101,-114,-108,-104,-11,-63,122,172,172,-46,-47,-48,122,-76,-11,-11,-134,-11,-66,-11,-72,-73,-11,-95,-97,122,-12,-45,172,-42,-43,-44,-23,-11,-98,-100,-102,122,-117,-106,-107,122,-103,-105,122,122,122,-13,-14,-15,-16,-17,-18,-19,-20,157,-111,-78,-49,-50,-51,-52,-21,-25,-26,122,-22,-24,122,-115,-133,-60,-74,-110,-79,-31,-35,-116,-32,122,-62,-61,-59,-58,-57,-65,-64,122,-29,-11,122,-27,-30,122,-28,-75,]),'BOOL':([0,13,14,15,16,17,18,19,30,31,32,33,44,45,50,51,67,74,102,106,108,109,110,111,112,113,114,118,119,126,128,130,133,136,150,151,161,162,164,165,169,170,175,177,182,188,191,192,193,194,195,198,199,202,203,204,205,215,217,218,219,220,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,263,264,268,269,270,271,272,273,274,275,276,277,278,280,285,287,288,293,295,297,300,303,312,313,321,322,324,325,327,328,329,332,336,340,341,342,343,344,345,346,],[41,-88,-89,-90,-91,-92,-93,-94,-53,-54,-55,-56,-145,-146,-135,-136,-127,123,-96,-109,-129,-128,-130,-131,-132,123,174,123,-77,-99,-101,-114,-108,-104,-11,-63,123,174,174,-46,-47,-48,123,-76,-11,-11,-134,-11,-66,-11,-72,-73,-11,-95,-97,123,-12,-45,174,-42,-43,-44,-23,-11,-98,-100,-102,123,-117,-106,-107,123,-103,-105,123,123,123,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-49,-50,-51,-52,-21,-25,-26,123,-22,-24,123,-115,-133,-60,-74,-110,-79,-31,-35,-116,-32,123,-62,-61,-59,-58,-57,-65,-64,123,-29,-11,123,-27,-30,123,-28,-75,]),'VOID':([0,30,31,32,33,114,151,162,164,165,169,170,193,215,217,218,219,220,268,269,270,271,287,321,322,324,325,327,328,329,],[42,-53,-54,-55,-56,42,-63,42,42,-46,-47,-48,-66,-45,42,-42,-43,-44,-49,-50,-51,-52,-60,-62,-61,-59,-58,-57,-65,-64,]),'ENTERO':([0,13,14,15,16,17,18,19,21,44,45,50,51,53,55,56,62,67,68,69,70,71,74,75,87,88,89,90,93,101,102,104,106,108,109,110,111,112,118,119,125,126,128,130,133,136,145,150,159,177,182,188,191,192,194,195,198,199,201,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,250,251,252,253,254,255,256,257,258,262,263,264,272,273,274,276,277,278,280,285,288,289,293,295,297,300,303,312,313,336,340,342,343,344,345,346,],[44,-88,-89,-90,-91,-92,-93,-94,44,-145,-146,-135,-136,44,-138,-139,44,-127,44,44,44,44,44,44,-137,-140,-141,-142,44,44,-96,152,-109,-129,-128,-130,-131,-132,44,-77,44,-99,-101,-114,-108,-104,44,-11,44,-76,-11,-11,-134,-11,-11,-72,-73,-11,44,-95,-97,44,-12,-23,-11,-98,-100,-102,44,-117,-106,-107,44,-103,-105,44,44,44,44,-13,-14,-15,-16,-17,-18,-19,-20,44,-111,-78,-21,-25,-26,-22,-24,44,-115,-133,-74,44,-110,-79,-31,-35,-116,-32,44,-29,-11,-27,-30,44,-28,-75,]),'FLOTANTE':([0,13,14,15,16,17,18,19,21,44,45,50,51,53,55,56,62,67,68,69,70,71,74,75,87,88,89,90,93,101,102,106,108,109,110,111,112,118,119,125,126,128,130,133,136,145,150,159,177,182,188,191,192,194,195,198,199,201,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,250,251,252,253,254,255,256,257,258,262,263,264,272,273,274,276,277,278,280,285,288,289,293,295,297,300,303,312,313,336,340,342,343,344,345,346,],[45,-88,-89,-90,-91,-92,-93,-94,45,-145,-146,-135,-136,45,-138,-139,45,-127,45,45,45,45,45,45,-137,-140,-141,-142,45,45,-96,-109,-129,-128,-130,-131,-132,45,-77,45,-99,-101,-114,-108,-104,45,-11,45,-76,-11,-11,-134,-11,-11,-72,-73,-11,45,-95,-97,45,-12,-23,-11,-98,-100,-102,45,-117,-106,-107,45,-103,-105,45,45,45,45,-13,-14,-15,-16,-17,-18,-19,-20,45,-111,-78,-21,-25,-26,-22,-24,45,-115,-133,-74,45,-110,-79,-31,-35,-116,-32,45,-29,-11,-27,-30,45,-28,-75,]),'CHARACTER':([0,13,14,15,16,17,18,19,21,53,55,56,62,74,75,87,88,89,90,93,102,106,118,119,125,126,127,128,130,133,136,145,177,183,202,203,230,231,232,237,238,239,242,243,263,279,280,282,289,293,303,313,],[38,-88,-89,-90,-91,-92,-93,-94,38,38,-138,-139,38,38,38,-137,-140,-141,-142,38,-96,-109,38,-77,38,-99,180,-101,-114,-108,-104,38,-76,236,-95,-97,-98,-100,-102,-117,-106,-107,-103,-105,-111,302,-115,304,38,-110,-116,38,]),'INT':([0,13,14,15,16,17,18,19,30,31,32,33,44,45,50,51,63,67,74,102,105,106,108,109,110,111,112,113,114,118,119,126,128,130,133,136,150,151,161,162,164,165,169,170,175,177,182,188,191,192,193,194,195,198,199,202,203,204,205,215,217,218,219,220,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,260,263,264,268,269,270,271,272,273,274,275,276,277,278,280,285,287,288,293,295,297,300,303,312,313,321,322,324,325,327,328,329,332,336,340,341,342,343,344,345,346,],[47,-88,-89,-90,-91,-92,-93,-94,-53,-54,-55,-56,-145,-146,-135,-136,47,-127,47,-96,47,-109,-129,-128,-130,-131,-132,47,47,47,-77,-99,-101,-114,-108,-104,-11,-63,47,47,47,-46,-47,-48,47,-76,-11,-11,-134,-11,-66,-11,-72,-73,-11,-95,-97,47,-12,-45,47,-42,-43,-44,-23,-11,-98,-100,-102,47,-117,-106,-107,47,-103,-105,47,47,47,-13,-14,-15,-16,-17,-18,-19,-20,47,-111,-78,-49,-50,-51,-52,-21,-25,-26,47,-22,-24,47,-115,-133,-60,-74,-110,-79,-31,-35,-116,-32,47,-62,-61,-59,-58,-57,-65,-64,47,-29,-11,47,-27,-30,47,-28,-75,]),'FLOAT':([0,13,14,15,16,17,18,19,30,31,32,33,44,45,50,51,63,67,74,102,105,106,108,109,110,111,112,113,114,118,119,126,128,130,133,136,150,151,161,162,164,165,169,170,175,177,182,188,191,192,193,194,195,198,199,202,203,204,205,215,217,218,219,220,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,260,263,264,268,269,270,271,272,273,274,275,276,277,278,280,285,287,288,293,295,297,300,303,312,313,321,322,324,325,327,328,329,332,336,340,341,342,343,344,345,346,],[48,-88,-89,-90,-91,-92,-93,-94,-53,-54,-55,-56,-145,-146,-135,-136,48,-127,48,-96,48,-109,-129,-128,-130,-131,-132,48,48,48,-77,-99,-101,-114,-108,-104,-11,-63,48,48,48,-46,-47,-48,48,-76,-11,-11,-134,-11,-66,-11,-72,-73,-11,-95,-97,48,-12,-45,48,-42,-43,-44,-23,-11,-98,-100,-102,48,-117,-106,-107,48,-103,-105,48,48,48,-13,-14,-15,-16,-17,-18,-19,-20,48,-111,-78,-49,-50,-51,-52,-21,-25,-26,48,-22,-24,48,-115,-133,-60,-74,-110,-79,-31,-35,-116,-32,48,-62,-61,-59,-58,-57,-65,-64,48,-29,-11,48,-27,-30,48,-28,-75,]),'LONG':([0,13,14,15,16,17,18,19,30,31,32,33,44,45,50,51,63,67,74,102,105,106,108,109,110,111,112,113,114,118,119,126,128,130,133,136,150,151,161,162,164,165,169,170,175,177,182,188,191,192,193,194,195,198,199,202,203,204,205,215,217,218,219,220,225,227,230,231,232,233,237,238,239,241,242,243,245,246,247,251,252,253,254,255,256,257,258,260,263,264,268,269,270,271,272,273,274,275,276,277,278,280,285,287,288,293,295,297,300,303,312,313,321,322,324,325,327,328,329,332,336,340,341,342,343,344,345,346,],[49,-88,-89,-90,-91,-92,-93,-94,-53,-54,-55,-56,-145,-146,-135,-136,49,-127,49,-96,49,-109,-129,-128,-130,-131,-132,49,49,49,-77,-99,-101,-114,-108,-104,-11,-63,49,49,49,-46,-47,-48,49,-76,-11,-11,-134,-11,-66,-11,-72,-73,-11,-95,-97,49,-12,-45,49,-42,-43,-44,-23,-11,-98,-100,-102,49,-117,-106,-107,49,-103,-105,49,49,49,-13,-14,-15,-16,-17,-18,-19,-20,49,-111,-78,-49,-50,-51,-52,-21,-25,-26,49,-22,-24,49,-115,-133,-60,-74,-110,-79,-31,-35,-116,-32,49,-62,-61,-59,-58,-57,-65,-64,49,-29,-11,49,-27,-30,49,-28,-75,]),'TRUE':([0,13,14,15,16,17,18,19,21,44,45,50,51,53,55,56,62,67,74,75,87,88,89,90,93,97,102,106,108,109,110,111,112,118,119,125,126,128,130,133,135,136,145,150,177,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,244,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,276,277,278,280,285,286,288,289,293,295,297,300,303,312,313,336,340,342,343,344,345,346,],[50,-88,-89,-90,-91,-92,-93,-94,50,-145,-146,-135,-136,50,-138,-139,50,-127,50,50,-137,-140,-141,-142,50,50,-96,-109,-129,-128,-130,-131,-132,50,-77,50,-99,-101,-114,-108,50,-104,50,-11,-76,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,50,-12,-23,-11,-98,-100,-102,50,-117,-106,-107,50,-103,-105,50,50,50,50,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,-22,-24,50,-115,-133,50,-74,50,-110,-79,-31,-35,-116,-32,50,-29,-11,-27,-30,50,-28,-75,]),'FALSE':([0,13,14,15,16,17,18,19,21,44,45,50,51,53,55,56,62,67,74,75,87,88,89,90,93,97,102,106,108,109,110,111,112,118,119,125,126,128,130,133,135,136,145,150,177,182,188,191,192,194,195,198,199,202,203,204,205,225,227,230,231,232,233,237,238,239,241,242,243,244,245,246,247,251,252,253,254,255,256,257,258,263,264,272,273,274,276,277,278,280,285,286,288,289,293,295,297,300,303,312,313,336,340,342,343,344,345,346,],[51,-88,-89,-90,-91,-92,-93,-94,51,-145,-146,-135,-136,51,-138,-139,51,-127,51,51,-137,-140,-141,-142,51,51,-96,-109,-129,-128,-130,-131,-132,51,-77,51,-99,-101,-114,-108,51,-104,51,-11,-76,-11,-11,-134,-11,-11,-72,-73,-11,-95,-97,51,-12,-23,-11,-98,-100,-102,51,-117,-106,-107,51,-103,-105,51,51,51,51,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,-22,-24,51,-115,-133,51,-74,51,-110,-79,-31,-35,-116,-32,51,-29,-11,-27,-30,51,-28,-75,]),'CADENA':([0,13,14,15,16,17,18,19,21,53,55,56,58,62,74,75,87,88,89,90,93,94,102,106,118,119,125,126,128,130,131,132,133,136,140,145,177,202,203,230,231,232,237,238,239,242,243,263,280,284,289,293,303,305,313,],[40,-88,-89,-90,-91,-92,-93,-94,40,40,-138,-139,40,40,40,40,-137,-140,-141,-142,40,40,-96,-109,40,-77,40,-99,-101,-114,184,40,-108,-104,40,40,-76,-95,-97,-98,-100,-102,-117,-106,-107,-103,-105,-111,-115,40,40,-110,-116,40,40,]),'IDENTIFICADOR':([0,13,14,15,16,17,18,19,21,25,28,29,36,37,39,41,42,47,48,49,53,55,56,58,62,74,75,87,88,89,90,93,94,97,100,101,102,106,118,119,120,121,122,123,125,126,127,128,130,132,133,135,136,140,145,155,156,157,158,160,171,172,173,174,177,202,203,213,230,231,232,237,238,239,242,243,250,263,279,280,284,286,289,293,303,305,313,320,],[26,-88,-89,-90,-91,-92,-93,-94,26,65,72,73,77,79,82,84,85,-147,-148,-149,26,-138,-139,26,26,26,26,-137,-140,-141,-142,26,26,146,147,149,-96,-109,26,-77,178,178,77,77,26,-99,181,-101,-114,187,-108,190,-104,26,26,208,-152,-153,-154,212,221,222,223,224,-76,-95,-97,265,-98,-100,-102,-117,-106,-107,-103,-105,290,-111,301,-115,26,307,26,-110,-116,26,26,330,]),'$end':([1,3,4,5,6,7,8,9,10,11,13,14,15,16,17,18,19,27,30,31,32,33,44,45,52,67,102,106,108,109,110,111,112,126,128,130,133,136,151,193,195,198,202,203,216,225,230,231,232,237,238,239,242,243,263,264,266,272,273,274,276,277,280,287,288,293,295,296,297,300,303,312,321,322,324,325,327,328,329,336,342,343,345,346,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-88,-89,-90,-91,-92,-93,-94,-128,-53,-54,-55,-56,-145,-146,-1,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-63,-66,-72,-73,-95,-97,-40,-23,-98,-100,-102,-117,-106,-107,-103,-105,-111,-78,-39,-21,-25,-26,-22,-24,-115,-60,-74,-110,-79,-41,-31,-35,-116,-32,-62,-61,-59,-58,-57,-65,-64,-29,-27,-30,-28,-75,]),'PUNTOCOMA':([2,12,13,14,15,16,17,18,19,26,38,40,43,44,45,46,50,51,60,64,65,66,67,76,77,78,79,80,81,82,83,84,86,92,102,103,106,108,109,110,111,112,124,126,128,130,133,136,137,139,142,148,149,153,163,178,179,180,181,184,185,186,187,189,190,191,196,197,202,203,206,207,210,212,214,221,222,223,224,226,228,229,230,231,232,234,237,238,239,242,243,249,261,263,265,267,280,281,285,288,290,291,293,298,301,302,303,306,307,308,309,326,337,],[52,-125,-88,-89,-90,-91,-92,-93,-94,-151,-156,-150,-157,-145,-146,-158,-135,-136,-155,102,-143,106,-127,126,-143,128,-143,130,133,-143,136,-143,-126,-122,-96,151,-109,-129,-128,-130,-131,-132,-123,-99,-101,-114,-108,-104,193,195,198,202,203,-67,216,-143,230,231,232,237,238,239,-151,242,243,-134,-121,-124,-95,-97,-144,-68,263,264,266,268,269,270,271,277,-33,-34,-98,-100,-102,280,-117,-106,-107,-103,-105,289,293,-111,295,296,-115,303,-133,-74,310,311,-110,312,314,315,-116,317,318,319,320,-120,343,]),'IGUAL':([12,26,27,35,38,40,43,44,45,46,50,51,54,55,56,57,59,60,64,65,66,76,77,78,79,80,81,82,83,84,98,99,124,147,178,191,197,206,],[54,-151,-155,54,-156,-150,-157,-145,-146,-158,-135,-136,87,88,89,90,54,-155,101,-143,107,125,-143,127,-143,131,132,-143,135,-143,-157,-155,-123,201,-143,54,-124,-144,]),'MENOR':([12,22,26,27,35,38,40,43,44,45,46,50,51,59,60,61,98,99,124,191,197,],[55,61,-151,-155,55,-156,-150,-157,-145,-146,-158,-135,-136,55,-155,94,-157,-155,-123,55,-124,]),'MAYOR':([12,26,27,35,38,40,43,44,45,46,50,51,59,60,98,99,124,191,197,],[56,-151,-155,56,-156,-150,-157,-145,-146,-158,-135,-136,56,-155,-157,-155,-123,56,-124,]),'EXCLAMACION':([12,13,14,15,16,17,18,19,26,27,35,38,40,43,44,45,46,50,51,59,60,62,74,98,99,102,106,118,119,124,126,128,130,133,136,177,191,197,202,203,230,231,232,237,238,239,242,243,263,280,293,303,313,],[57,-88,-89,-90,-91,-92,-93,-94,-151,-155,57,-156,-150,-157,-145,-146,-158,-135,-136,57,-155,97,97,-157,-155,-96,-109,97,-77,-123,-99,-101,-114,-108,-104,-76,57,-124,-95,-97,-98,-100,-102,-117,-106,-107,-103,-105,-111,-115,-110,-116,97,]),'LLAVER':([13,14,15,16,17,18,19,30,31,32,33,44,45,50,51,67,102,106,108,109,110,111,112,113,114,119,126,128,130,133,136,151,159,161,162,165,169,170,177,183,191,193,194,195,198,199,202,203,205,209,211,215,217,225,227,230,231,232,235,236,237,238,239,242,243,246,247,251,252,253,254,255,256,257,258,263,264,268,269,270,271,272,273,274,276,277,278,280,285,287,288,293,294,295,297,300,303,304,310,311,312,314,315,317,318,319,321,322,324,325,327,328,329,336,340,342,343,344,345,346,],[-88,-89,-90,-91,-92,-93,-94,-53,-54,-55,-56,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,160,163,-77,-99,-101,-114,-108,-104,-63,210,213,214,-46,-47,-48,-76,234,-134,-66,-11,-72,-73,-11,-95,-97,-12,261,-113,-45,267,-23,-11,-98,-100,-102,281,-118,-117,-106,-107,-103,-105,287,288,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-49,-50,-51,-52,-21,-25,-26,-22,-24,300,-115,-133,-60,-74,-110,-112,-79,-31,-35,-116,-119,321,322,-32,324,325,327,328,329,-62,-61,-59,-58,-57,-65,-64,-29,-11,-27,-30,346,-28,-75,]),'ELSE':([13,14,15,16,17,18,19,102,106,126,128,130,133,136,202,203,225,226,228,229,230,231,232,237,238,239,242,243,263,280,288,293,300,303,336,343,],[-88,-89,-90,-91,-92,-93,-94,-96,-109,-99,-101,-114,-108,-104,-95,-97,275,275,-33,-34,-98,-100,-102,-117,-106,-107,-103,-105,-111,-115,-74,-110,-35,-116,341,341,]),'RETURN':([13,14,15,16,17,18,19,44,45,50,51,67,102,106,108,109,110,111,112,126,128,130,133,136,150,182,188,191,192,195,198,202,203,204,205,225,230,231,232,233,237,238,239,241,242,243,245,251,252,253,254,255,256,257,258,263,264,272,273,274,276,277,280,285,288,293,295,297,300,303,312,336,342,343,345,346,],[-88,-89,-90,-91,-92,-93,-94,-145,-146,-135,-136,-127,-96,-109,-129,-128,-130,-131,-132,-99,-101,-114,-108,-104,-11,-11,-11,-134,-11,-72,-73,-95,-97,250,-12,-23,-98,-100,-102,279,-117,-106,-107,284,-103,-105,286,-13,-14,-15,-16,-17,-18,-19,-20,-111,-78,-21,-25,-26,-22,-24,-115,-133,-74,-110,-79,-31,-35,-116,-32,-29,-27,-30,-28,-75,]),'MAS':([26,27,40,44,45,92,109,187,330,333,],[-151,68,-150,-145,-146,140,68,-151,333,338,]),'RPAR':([26,38,40,43,44,45,46,50,51,60,91,92,95,96,98,99,105,115,116,117,124,141,144,146,154,176,196,197,200,208,248,259,292,316,323,331,338,339,],[-151,-156,-150,-157,-145,-146,-158,-135,-136,-155,139,-122,143,-82,-86,-87,153,175,-36,-37,-123,197,-83,-85,207,-38,-121,-124,248,-69,-84,-70,-71,326,332,335,-80,-81,]),'MENOS':([27,44,45,109,330,334,],[69,-145,-146,69,334,339,]),'ASTERISCO':([27,44,45,109,],[70,-145,-146,70,]),'SLASH':([27,44,45,109,],[71,-145,-146,71,]),'COMMA':([44,45,208,209,211,235,236,294,304,],[-145,-146,260,262,-113,282,-118,-112,-119,]),'CORCHETEL':([65,79,178,],[104,104,104,]),'LLAVEL':([72,73,103,107,129,131,134,137,138,143,153,175,207,275,332,335,341,],[113,114,150,159,182,183,188,192,194,199,-67,227,-68,227,227,340,227,]),'PUBLIC':([114,],[166,]),'PRIVATE':([114,],[167,]),'PROTECTED':([114,],[168,]),'CORCHETER':([152,],[206,]),'DOBLEPUNTO':([166,167,168,],[218,219,220,]),'PUNTO':([187,],[240,]),'APPEND':([240,],[283,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,],[1,]),'comparar':([0,53,],[2,86,]),'variable':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[3,119,119,177,177,229,252,252,252,252,252,252,229,252,119,229,229,252,]),'imprimir':([0,204,233,241,245,246,247,278,344,],[4,255,255,255,255,255,255,255,255,]),'while':([0,175,204,233,241,245,246,247,275,278,332,341,344,],[5,228,251,251,251,251,251,251,228,251,228,228,251,]),'for':([0,204,233,241,245,246,247,278,344,],[6,253,253,253,253,253,253,253,253,]),'struct':([0,204,233,241,245,246,247,278,344,],[7,254,254,254,254,254,254,254,254,]),'claseimplementacion':([0,],[8,]),'funcionclaseimpl':([0,114,162,164,217,],[9,170,170,170,170,]),'expresionif':([0,204,233,241,245,246,247,278,344,],[10,256,256,256,256,256,256,256,256,]),'mathoperation':([0,68,69,70,71,101,204,233,241,245,246,247,278,344,],[11,108,110,111,112,148,257,257,257,257,257,257,257,257,]),'expresion':([0,53,62,74,118,145,289,313,],[12,12,96,96,96,200,309,96,]),'variableauto':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'variablenumero':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'variablechar':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'variablestring':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'variablearraynumero':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'variablearraychar':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,]),'variableboolean':([0,74,113,118,161,175,204,233,241,245,246,247,275,278,313,332,341,344,],[19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'numerotipo':([0,63,74,105,113,114,118,161,162,164,175,204,217,233,241,245,246,247,260,275,278,313,332,341,344,],[25,100,120,156,120,171,120,120,171,171,120,120,171,120,120,120,120,120,156,120,120,120,120,120,120,]),'numero':([0,21,53,62,68,69,70,71,74,75,93,101,118,125,145,159,201,204,233,241,245,246,247,250,262,278,289,313,344,],[27,60,60,99,109,109,109,109,99,60,60,109,99,60,60,211,249,109,109,109,109,109,109,291,294,109,60,99,109,]),'funcionimplvoid':([0,114,162,164,217,],[30,30,30,30,30,]),'funcionimplnumero':([0,114,162,164,217,],[31,31,31,31,31,]),'funcionimplstring':([0,114,162,164,217,],[32,32,32,32,32,]),'funcionimplbool':([0,114,162,164,217,],[33,33,33,33,33,]),'valor':([0,21,53,62,74,75,93,118,125,145,289,313,],[35,59,35,35,35,124,141,35,179,35,35,35,]),'boolean':([0,21,53,62,74,75,93,97,118,125,135,145,204,233,241,244,245,246,247,278,286,289,313,344,],[43,43,43,98,98,43,43,144,98,43,191,43,191,191,191,285,191,191,191,191,308,43,98,191,]),'stringdata':([0,21,53,58,62,74,75,93,94,118,125,132,140,145,284,289,305,313,],[46,46,46,92,46,46,46,46,92,46,46,92,92,46,92,46,316,46,]),'comparador':([12,35,59,191,],[53,75,93,244,]),'id':([25,36,37,39,41,120,121,122,123,],[64,76,78,81,83,64,78,81,83,]),'idarray':([25,37,120,121,],[66,80,66,80,]),'operation':([27,109,],[67,67,]),'concat':([58,94,132,140,284,],[91,142,186,196,306,]),'statement':([62,74,118,313,],[95,117,176,117,]),'parametrosimpl':([65,79,82,84,85,221,222,223,224,],[103,129,134,137,138,103,134,129,137,]),'condicionif':([74,313,],[115,323,]),'initcondicion':([74,313,],[116,116,]),'varblock':([74,113,313,],[118,161,118,]),'parametros':([105,260,],[154,292,]),'tipo':([105,260,],[155,155,]),'bloqueclase':([114,164,],[162,217,]),'acceso':([114,],[164,]),'atributoclase':([114,162,164,217,],[165,215,165,215,]),'definicion':([114,162,164,217,],[169,169,169,169,]),'stringappend':([132,],[185,]),'operacionbool':([135,204,233,241,245,246,247,278,344,],[189,258,258,258,258,258,258,258,258,]),'bodyblock':([150,182,188,192,194,199,227,340,],[204,233,241,245,246,247,278,344,]),'empty':([150,182,188,192,194,199,227,340,],[205,205,205,205,205,205,205,205,]),'arraydatanumero':([159,],[209,]),'conllaves':([175,275,332,341,],[225,297,336,297,]),'sinllaves':([175,275,332,341,],[226,298,337,298,]),'datachar':([183,],[235,]),'masparametros':([208,],[259,]),'expresionpos':([225,226,],[272,276,]),'else':([225,226,336,343,],[273,273,342,345,]),'elseif':([225,226,],[274,274,]),'unaryexp':([320,],[331,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> comparar PUNTOCOMA','body',2,'p_body','sintactico.py',7),
  ('body -> variable','body',1,'p_body','sintactico.py',8),
  ('body -> imprimir','body',1,'p_body','sintactico.py',9),
  ('body -> while','body',1,'p_body','sintactico.py',10),
  ('body -> for','body',1,'p_body','sintactico.py',11),
  ('body -> struct','body',1,'p_body','sintactico.py',12),
  ('body -> claseimplementacion','body',1,'p_body','sintactico.py',13),
  ('body -> funcionclaseimpl','body',1,'p_body','sintactico.py',14),
  ('body -> expresionif','body',1,'p_body','sintactico.py',15),
  ('body -> mathoperation','body',1,'p_body','sintactico.py',16),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',19),
  ('bodyblock -> empty','bodyblock',1,'p_bodyblock','sintactico.py',23),
  ('bodyblock -> bodyblock while','bodyblock',2,'p_bodyblock','sintactico.py',24),
  ('bodyblock -> bodyblock variable','bodyblock',2,'p_bodyblock','sintactico.py',25),
  ('bodyblock -> bodyblock for','bodyblock',2,'p_bodyblock','sintactico.py',26),
  ('bodyblock -> bodyblock struct','bodyblock',2,'p_bodyblock','sintactico.py',27),
  ('bodyblock -> bodyblock imprimir','bodyblock',2,'p_bodyblock','sintactico.py',28),
  ('bodyblock -> bodyblock expresionif','bodyblock',2,'p_bodyblock','sintactico.py',29),
  ('bodyblock -> bodyblock mathoperation','bodyblock',2,'p_bodyblock','sintactico.py',30),
  ('bodyblock -> bodyblock operacionbool','bodyblock',2,'p_bodyblock','sintactico.py',31),
  ('expresionif -> IF LPAR condicionif RPAR conllaves expresionpos','expresionif',6,'p_expresionif','sintactico.py',36),
  ('expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos','expresionif',6,'p_expresionif','sintactico.py',37),
  ('expresionif -> IF LPAR condicionif RPAR conllaves','expresionif',5,'p_expresionif','sintactico.py',38),
  ('expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA','expresionif',6,'p_expresionif','sintactico.py',39),
  ('expresionpos -> else','expresionpos',1,'p_expresionpos','sintactico.py',42),
  ('expresionpos -> elseif','expresionpos',1,'p_expresionpos','sintactico.py',43),
  ('elseif -> ELSE IF LPAR condicionif RPAR conllaves else','elseif',7,'p_elseif','sintactico.py',45),
  ('elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else','elseif',8,'p_elseif','sintactico.py',46),
  ('elseif -> ELSE IF LPAR condicionif RPAR conllaves','elseif',6,'p_elseif','sintactico.py',47),
  ('elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA','elseif',7,'p_elseif','sintactico.py',48),
  ('else -> ELSE conllaves','else',2,'p_else','sintactico.py',50),
  ('else -> ELSE sinllaves PUNTOCOMA','else',3,'p_else','sintactico.py',51),
  ('sinllaves -> while','sinllaves',1,'p_sinLlaves','sintactico.py',54),
  ('sinllaves -> variable','sinllaves',1,'p_sinLlaves','sintactico.py',55),
  ('conllaves -> LLAVEL bodyblock LLAVER','conllaves',3,'p_conLlaves','sintactico.py',58),
  ('condicionif -> initcondicion','condicionif',1,'p_condicionif','sintactico.py',60),
  ('condicionif -> statement','condicionif',1,'p_condicionif','sintactico.py',61),
  ('initcondicion -> varblock statement','initcondicion',2,'p_initcondicion','sintactico.py',64),
  ('claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA','claseimplementacion',6,'p_claseimplementacion','sintactico.py',68),
  ('claseimplementacion -> CLASS IDENTIFICADOR LLAVEL LLAVER PUNTOCOMA','claseimplementacion',5,'p_claseimplementacion','sintactico.py',69),
  ('claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA','claseimplementacion',7,'p_claseimplementacion','sintactico.py',70),
  ('acceso -> PUBLIC DOBLEPUNTO','acceso',2,'p_claseacceso','sintactico.py',73),
  ('acceso -> PRIVATE DOBLEPUNTO','acceso',2,'p_claseacceso','sintactico.py',74),
  ('acceso -> PROTECTED DOBLEPUNTO','acceso',2,'p_claseacceso','sintactico.py',75),
  ('bloqueclase -> bloqueclase atributoclase','bloqueclase',2,'p_bloqueclase','sintactico.py',79),
  ('bloqueclase -> atributoclase','bloqueclase',1,'p_bloqueclase','sintactico.py',80),
  ('atributoclase -> definicion','atributoclase',1,'p_atributoclase','sintactico.py',83),
  ('atributoclase -> funcionclaseimpl','atributoclase',1,'p_atributoclase','sintactico.py',84),
  ('definicion -> numerotipo IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',89),
  ('definicion -> STRING IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',90),
  ('definicion -> CHAR IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',91),
  ('definicion -> BOOL IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',92),
  ('funcionclaseimpl -> funcionimplvoid','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',96),
  ('funcionclaseimpl -> funcionimplnumero','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',97),
  ('funcionclaseimpl -> funcionimplstring','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',98),
  ('funcionclaseimpl -> funcionimplbool','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',99),
  ('funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER','funcionimplstring',9,'p_funcionimplstring','sintactico.py',104),
  ('funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER','funcionimplstring',9,'p_funcionimplstring','sintactico.py',105),
  ('funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER','funcionimplstring',9,'p_funcionimplstring','sintactico.py',106),
  ('funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER','funcionimplvoid',6,'p_funcionimplvoid','sintactico.py',110),
  ('funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER','funcionimplnumero',9,'p_funcionimplnumero','sintactico.py',114),
  ('funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER','funcionimplnumero',9,'p_funcionimplnumero','sintactico.py',115),
  ('funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA','funcionimplnumero',4,'p_funcionimplnumero','sintactico.py',116),
  ('funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER','funcionimplbool',9,'p_funcionimplbool','sintactico.py',120),
  ('funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER','funcionimplbool',9,'p_funcionimplbool','sintactico.py',121),
  ('funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA','funcionimplbool',4,'p_funcionimplbool','sintactico.py',122),
  ('parametrosimpl -> LPAR RPAR','parametrosimpl',2,'p_parametrosimpl','sintactico.py',126),
  ('parametrosimpl -> LPAR parametros RPAR','parametrosimpl',3,'p_parametrosimpl','sintactico.py',127),
  ('parametros -> tipo IDENTIFICADOR','parametros',2,'p_parametros','sintactico.py',131),
  ('parametros -> tipo IDENTIFICADOR masparametros','parametros',3,'p_parametros','sintactico.py',132),
  ('masparametros -> COMMA parametros','masparametros',2,'p_masparametros','sintactico.py',136),
  ('imprimir -> PRINT LPAR concat RPAR PUNTOCOMA','imprimir',5,'p_imprimir','sintactico.py',140),
  ('imprimir -> COUT MENOR MENOR concat PUNTOCOMA','imprimir',5,'p_imprimir','sintactico.py',141),
  ('while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER','while',7,'p_while','sintactico.py',148),
  ('for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER','for',14,'p_for','sintactico.py',151),
  ('varblock -> varblock variable','varblock',2,'p_varblock','sintactico.py',154),
  ('varblock -> variable','varblock',1,'p_varblock','sintactico.py',155),
  ('struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA','struct',6,'p_struct','sintactico.py',157),
  ('struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA','struct',7,'p_struct','sintactico.py',158),
  ('unaryexp -> IDENTIFICADOR MAS MAS','unaryexp',3,'p_unaryexp','sintactico.py',161),
  ('unaryexp -> IDENTIFICADOR MENOS MENOS','unaryexp',3,'p_unaryexp','sintactico.py',162),
  ('statement -> expresion','statement',1,'p_statement','sintactico.py',165),
  ('statement -> EXCLAMACION boolean','statement',2,'p_statement','sintactico.py',166),
  ('statement -> EXCLAMACION LPAR expresion RPAR','statement',4,'p_statement','sintactico.py',167),
  ('statement -> EXCLAMACION IDENTIFICADOR','statement',2,'p_statement','sintactico.py',168),
  ('statement -> boolean','statement',1,'p_statement','sintactico.py',169),
  ('statement -> numero','statement',1,'p_statement','sintactico.py',170),
  ('variable -> variableauto','variable',1,'p_variable','sintactico.py',173),
  ('variable -> variablenumero','variable',1,'p_variable','sintactico.py',174),
  ('variable -> variablechar','variable',1,'p_variable','sintactico.py',175),
  ('variable -> variablestring','variable',1,'p_variable','sintactico.py',176),
  ('variable -> variablearraynumero','variable',1,'p_variable','sintactico.py',177),
  ('variable -> variablearraychar','variable',1,'p_variable','sintactico.py',178),
  ('variable -> variableboolean','variable',1,'p_variable','sintactico.py',179),
  ('variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA','variablenumero',5,'p_variablenumero','sintactico.py',186),
  ('variablenumero -> numerotipo id PUNTOCOMA','variablenumero',3,'p_variablenumero','sintactico.py',187),
  ('variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA','variablenumero',5,'p_variablenumero','sintactico.py',188),
  ('variableauto -> AUTO id IGUAL valor PUNTOCOMA','variableauto',5,'p_variableauto','sintactico.py',191),
  ('variableauto -> AUTO id PUNTOCOMA','variableauto',3,'p_variableauto','sintactico.py',192),
  ('variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA','variablechar',5,'p_variablechar','sintactico.py',197),
  ('variablechar -> CHAR id PUNTOCOMA','variablechar',3,'p_variablechar','sintactico.py',198),
  ('variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA','variablechar',5,'p_variablechar','sintactico.py',199),
  ('variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA','variableboolean',5,'p_variableboolean','sintactico.py',203),
  ('variableboolean -> BOOL id PUNTOCOMA','variableboolean',3,'p_variableboolean','sintactico.py',204),
  ('variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA','variableboolean',5,'p_variableboolean','sintactico.py',205),
  ('variablestring -> STRING id IGUAL stringappend PUNTOCOMA','variablestring',5,'p_variablestring','sintactico.py',209),
  ('variablestring -> STRING id IGUAL concat PUNTOCOMA','variablestring',5,'p_variablestring','sintactico.py',210),
  ('variablestring -> STRING id PUNTOCOMA','variablestring',3,'p_variablestring','sintactico.py',211),
  ('variablearraynumero -> numerotipo idarray PUNTOCOMA','variablearraynumero',3,'p_variable_array_numero','sintactico.py',214),
  ('variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA','variablearraynumero',7,'p_variable_array_numero','sintactico.py',215),
  ('variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA','variablearraynumero',6,'p_variable_array_numero','sintactico.py',216),
  ('arraydatanumero -> arraydatanumero COMMA numero','arraydatanumero',3,'p_arraydata_numero','sintactico.py',219),
  ('arraydatanumero -> numero','arraydatanumero',1,'p_arraydata_numero','sintactico.py',220),
  ('variablearraychar -> CHAR idarray PUNTOCOMA','variablearraychar',3,'p_variable_array_char','sintactico.py',223),
  ('variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA','variablearraychar',6,'p_variable_array_char','sintactico.py',224),
  ('variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA','variablearraychar',7,'p_variable_array_char','sintactico.py',225),
  ('variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA','variablearraychar',5,'p_variable_array_char','sintactico.py',226),
  ('datachar -> CHARACTER','datachar',1,'p_arraydata_char','sintactico.py',229),
  ('datachar -> datachar COMMA CHARACTER','datachar',3,'p_arraydata_char','sintactico.py',230),
  ('stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR','stringappend',6,'p_string_append','sintactico.py',238),
  ('concat -> stringdata MAS concat','concat',3,'p_string_concat','sintactico.py',241),
  ('concat -> stringdata','concat',1,'p_string_concat','sintactico.py',242),
  ('expresion -> valor comparador valor','expresion',3,'p_expresion_comparacion','sintactico.py',252),
  ('expresion -> LPAR valor comparador valor RPAR','expresion',5,'p_expresion_comparacion','sintactico.py',253),
  ('comparar -> expresion','comparar',1,'p_comparar','sintactico.py',257),
  ('comparar -> expresion comparador comparar','comparar',3,'p_comparar','sintactico.py',258),
  ('mathoperation -> numero operation','mathoperation',2,'p_mathoperation','sintactico.py',265),
  ('mathoperation -> numero','mathoperation',1,'p_mathoperation','sintactico.py',266),
  ('operation -> MAS mathoperation','operation',2,'p_operation','sintactico.py',270),
  ('operation -> MENOS mathoperation','operation',2,'p_operation','sintactico.py',271),
  ('operation -> ASTERISCO mathoperation','operation',2,'p_operation','sintactico.py',272),
  ('operation -> SLASH mathoperation','operation',2,'p_operation','sintactico.py',273),
  ('operacionbool -> boolean comparador boolean','operacionbool',3,'p_operacionboolean','sintactico.py',276),
  ('operacionbool -> boolean','operacionbool',1,'p_operacionboolean','sintactico.py',277),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',281),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',282),
  ('comparador -> IGUAL IGUAL','comparador',2,'p_comparacion','sintactico.py',284),
  ('comparador -> MENOR','comparador',1,'p_comparacion','sintactico.py',285),
  ('comparador -> MAYOR','comparador',1,'p_comparacion','sintactico.py',286),
  ('comparador -> MENOR IGUAL','comparador',2,'p_comparacion','sintactico.py',287),
  ('comparador -> MAYOR IGUAL','comparador',2,'p_comparacion','sintactico.py',288),
  ('comparador -> EXCLAMACION IGUAL','comparador',2,'p_comparacion','sintactico.py',289),
  ('id -> IDENTIFICADOR','id',1,'p_id','sintactico.py',291),
  ('idarray -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER','idarray',4,'p_id_array','sintactico.py',294),
  ('numero -> ENTERO','numero',1,'p_numero','sintactico.py',297),
  ('numero -> FLOTANTE','numero',1,'p_numero','sintactico.py',298),
  ('numerotipo -> INT','numerotipo',1,'p_numero_tipo','sintactico.py',302),
  ('numerotipo -> FLOAT','numerotipo',1,'p_numero_tipo','sintactico.py',303),
  ('numerotipo -> LONG','numerotipo',1,'p_numero_tipo','sintactico.py',304),
  ('stringdata -> CADENA','stringdata',1,'p_string_append_data','sintactico.py',306),
  ('stringdata -> IDENTIFICADOR','stringdata',1,'p_string_append_data','sintactico.py',307),
  ('tipo -> numerotipo','tipo',1,'p_tipo','sintactico.py',310),
  ('tipo -> STRING','tipo',1,'p_tipo','sintactico.py',311),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintactico.py',312),
  ('valor -> numero','valor',1,'p_valor','sintactico.py',315),
  ('valor -> CHARACTER','valor',1,'p_valor','sintactico.py',316),
  ('valor -> boolean','valor',1,'p_valor','sintactico.py',317),
  ('valor -> stringdata','valor',1,'p_valor','sintactico.py',318),
]
