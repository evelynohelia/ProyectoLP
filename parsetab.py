
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'AND APPEND ASTERISCO AUTO BOOL CADENA CHAR CHARACTER CLASS COMMA CORCHETEL CORCHETER COUT DOBLEPUNTO ELSE ENTERO EXCLAMACION FALSE FLOAT FLOTANTE FOR IDENTIFICADOR IF IGUAL INT LLAVEL LLAVER LONG LPAR MAS MAYOR MENOR MENOS OR PRINT PRIVATE PROTECTED PUBLIC PUNTO PUNTOCOMA RETURN RPAR SLASH STRING STRUCT TRUE VOID WHILE\n    body : comparar PUNTOCOMA\n         | variable\n         | imprimir\n         | while\n         | for\n         | struct\n         | claseimplementacion\n         | funcionclaseimpl\n         | expresionif\n         | mathoperation\n         | creacionobjeto\n         | asignarvalorobjeto\n         | usarfuncionobjeto\n         | usarfuncionempty :  bodyblock : empty\n      bodyblock : bodyblock while\n                | bodyblock variable\n                | bodyblock for\n                | bodyblock struct\n                | bodyblock imprimir\n                | bodyblock expresionif\n                | bodyblock mathoperation\n                | bodyblock operacionbool\n                | bodyblock asignarvalorobjeto\n                | bodyblock creacionobjeto\n                | bodyblock usarfuncionobjeto\n                | bodyblock usarfuncion\n\n  expresionif : IF LPAR condicionif RPAR conllaves expresionpos\n                    | IF LPAR condicionif RPAR sinllaves expresionpos\n                    | IF LPAR condicionif RPAR conllaves \n                    | IF LPAR condicionif RPAR sinllaves PUNTOCOMA\n                    expresionpos : else\n                    | elseif elseif : ELSE IF LPAR condicionif RPAR conllaves else\n                | ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else \n                | ELSE IF LPAR condicionif RPAR conllaves \n                | ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMAelse : ELSE conllaves\n            | ELSE sinllaves PUNTOCOMAsinllaves : while\n                | variableconllaves : LLAVEL bodyblock LLAVERcondicionif : initcondicion\n                | statementstatement : valorstatement\n                | valorstatement masstatement\n    masstatement : OR statement\n                  | AND statement\n  \n    valorstatement : comparar\n                | EXCLAMACION boolean\n                \n                | id\n                | LPAR id RPAR\n                | EXCLAMACION LPAR id RPAR\n                | boolean\n                | numero\n                | LPAR boolean RPAR\n                | LPAR numero RPAR\n                \n  initcondicion : varblock statement claseimplementacion : CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA\n                            | CLASS IDENTIFICADOR LLAVEL  LLAVER PUNTOCOMA\n                            | CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA \n    acceso : PUBLIC DOBLEPUNTO\n          | PRIVATE DOBLEPUNTO\n          | PROTECTED DOBLEPUNTO\n   \n    bloqueclase : bloqueclase atributoclase\n                    | atributoclase  \n    atributoclase : definicion\n                  | funcionclaseimpl\n                  \n  definicion : numerotipo IDENTIFICADOR PUNTOCOMA\n                  | STRING IDENTIFICADOR PUNTOCOMA\n                  | CHAR IDENTIFICADOR PUNTOCOMA\n                  | BOOL IDENTIFICADOR PUNTOCOMA \n      funcionclaseimpl :  funcionimplvoid\n                        | funcionimplnumero\n                        | funcionimplstring\n                        | funcionimplbool\n    \n    funcionimplstring : STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER\n                    | CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER\n                    | CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER\n   funcionimplvoid : VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER\n  \n    funcionimplnumero : numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN mathoperation PUNTOCOMA LLAVER\n                      | numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER\n                      | numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA\n  \n    funcionimplbool : BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN operacionbool PUNTOCOMA LLAVER\n                      | BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER\n                      | BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA\n  \n    parametrosimpl : LPAR RPAR\n                  | LPAR parametros RPAR\n   parametros : tipo IDENTIFICADOR\n                  | tipo IDENTIFICADOR masparametros \n  \n    masparametros : COMMA parametros \n  imprimir : PRINT LPAR concat RPAR PUNTOCOMA \n                | COUT MENOR MENOR concat PUNTOCOMAwhile : WHILE LPAR statement RPAR LLAVEL bodyblock LLAVERfor : FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVERvarblock : varblock variable\n                | variablestruct : STRUCT IDENTIFICADOR LLAVEL  LLAVER IDENTIFICADOR PUNTOCOMA\n              | STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMAunaryexp : IDENTIFICADOR MAS MAS \n        | IDENTIFICADOR MENOS MENOSvariable : variableauto \n                | variablenumero\n                | variablechar\n                | variablestring\n                | variablearraynumero\n                | variablearraychar\n                | variableboolean\n                  variablenumero : numerotipo id IGUAL mathoperation PUNTOCOMA\n                        | numerotipo id PUNTOCOMA\n                        | numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA \n    variableauto : AUTO id IGUAL valor PUNTOCOMA\n                | AUTO id PUNTOCOMA\n                \n   \n    variablechar : CHAR id IGUAL CHARACTER PUNTOCOMA\n                  | CHAR id PUNTOCOMA\n                  | CHAR id IGUAL IDENTIFICADOR PUNTOCOMA\n   \n    variableboolean : BOOL id IGUAL operacionbool PUNTOCOMA\n                  | BOOL id PUNTOCOMA\n                  | BOOL id IGUAL IDENTIFICADOR PUNTOCOMA\n  \n    variablestring : STRING id IGUAL stringappend PUNTOCOMA\n                | STRING id IGUAL concat PUNTOCOMA\n                | STRING id PUNTOCOMA\n   variablearraynumero : numerotipo idarray PUNTOCOMA\n                    | numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA\n                    | numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMAarraydatanumero : arraydatanumero COMMA  numero\n                | numero variablearraychar : CHAR idarray PUNTOCOMA\n                        | CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA\n                        | CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA\n                        | CHAR idarray IGUAL CADENA  PUNTOCOMA\n   datachar : CHARACTER\n                | datachar COMMA CHARACTER\n  \n  stringappend : IDENTIFICADOR PUNTO APPEND LPAR stringdata RPARconcat : stringdata MAS concat\n              | stringdata creacionobjeto : IDENTIFICADOR IDENTIFICADOR PUNTOCOMA asignarvalorobjeto : IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA  usarfuncionobjeto : IDENTIFICADOR PUNTO IDENTIFICADOR funcparentesis PUNTOCOMA \n    usarfuncion : IDENTIFICADOR funcparentesis PUNTOCOMA\n  \n    funcparentesis : LPAR RPAR\n                  | LPAR argumentosfuncion RPAR\n   argumentosfuncion : valor\n                  | valor masargumentosfuncion \n  \n    masargumentosfuncion : COMMA argumentosfuncion \n  expresion : valor comparador valor\n                | LPAR valor comparador valor  RPAR\n                | EXCLAMACION LPAR valor comparador valor  RPAR\n                 \n    comparar : expresion\n            |  mascomparaciones expresion  \n            | LPAR  mascomparaciones expresion  RPAR\n            | EXCLAMACION LPAR  mascomparaciones expresion  RPAR\n            | LPAR  mascomparaciones RPAR\n            \n            \n    \n    mascomparaciones :   comparar comparador\n                      |    comparar  LPAR comparador RPAR \n                      \n  mathoperation : numero operation \n        | numero\n        operation : MAS mathoperation\n        |  MENOS mathoperation\n        | ASTERISCO mathoperation\n        |  SLASH mathoperation operacionbool : boolean comparador boolean \n                      | booleanboolean : TRUE\n                | FALSEcomparador : IGUAL IGUAL\n                | MENOR\n                | MAYOR\n                | MENOR IGUAL\n                | MAYOR IGUAL\n                | EXCLAMACION IGUALid : IDENTIFICADOR idarray : IDENTIFICADOR CORCHETEL ENTERO CORCHETER numero : ENTERO\n              | FLOTANTE\n              numerotipo : INT\n              | FLOAT\n              | LONGstringdata : CADENA\n                | IDENTIFICADORtipo : numerotipo\n            | STRING\n            | CHARvalor : numero\n            | CHARACTER\n            | boolean\n            | stringdata'
    
_lr_action_items = {'LPAR':([0,2,16,17,18,19,20,21,22,23,24,25,26,27,29,30,32,40,44,46,49,50,51,52,56,57,59,62,63,65,67,68,69,70,72,73,76,79,92,97,100,102,103,105,106,107,108,111,112,114,119,122,123,130,134,137,152,153,158,160,162,164,167,170,173,176,177,178,188,189,191,227,247,248,249,261,262,283,284,285,286,292,293,294,299,300,301,304,305,310,314,332,350,353,359,363,369,373,383,],[18,60,-150,66,18,73,-103,-104,-105,-106,-107,-108,-109,74,76,77,84,92,-186,-180,-175,-176,-187,-188,-165,-166,-155,-168,-169,-151,110,-185,-181,66,60,18,119,133,119,133,133,133,133,-167,-170,-171,-172,-151,-154,66,18,60,191,-111,-124,84,119,-98,-147,-114,-116,-129,-123,-119,-156,-152,-147,-151,119,119,18,-97,-148,-153,-147,-110,-112,133,133,133,133,-113,-115,-117,-132,-121,-122,-118,-120,-149,84,-126,-130,375,66,-125,383,-131,119,]),'EXCLAMACION':([0,2,16,17,18,20,21,22,23,24,25,26,32,33,41,44,46,49,50,51,52,56,57,59,60,62,63,65,68,69,70,71,72,73,76,92,105,106,107,108,109,111,112,114,115,119,122,124,126,127,130,134,152,153,158,160,162,164,167,170,173,175,176,177,178,184,185,188,189,191,227,241,247,248,249,261,262,292,293,294,299,300,301,304,305,310,332,350,359,363,373,383,],[19,64,-150,67,19,-103,-104,-105,-106,-107,-108,-109,-181,-185,64,-186,-180,-175,-176,-187,-188,-165,-166,-155,64,-168,-169,-151,-185,-181,67,64,64,19,123,123,-167,-170,-171,-172,64,-151,-154,67,64,19,64,-187,-185,-181,-111,-124,123,-98,-147,-114,-116,-129,-123,-119,-156,64,-152,-147,-151,-187,-185,123,123,19,-97,64,-148,-153,-147,-110,-112,-113,-115,-117,-132,-121,-122,-118,-120,-149,-126,-130,67,-125,-131,123,]),'PRINT':([0,20,21,22,23,24,25,26,49,50,56,57,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,195,232,238,241,242,244,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,348,350,355,358,363,365,367,370,373,382,406,410,412,413,414,415,416,],[27,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-15,-15,-15,-164,-15,-15,-93,-94,-15,-110,-112,27,-16,-140,-31,-15,-113,-115,-117,27,-132,-121,-122,27,-118,-120,27,27,27,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,27,-130,-163,-95,-125,-100,-39,-43,-131,-40,-37,-15,-35,-38,27,-36,-96,]),'COUT':([0,20,21,22,23,24,25,26,49,50,56,57,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,195,232,238,241,242,244,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,348,350,355,358,363,365,367,370,373,382,406,410,412,413,414,415,416,],[28,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-15,-15,-15,-164,-15,-15,-93,-94,-15,-110,-112,28,-16,-140,-31,-15,-113,-115,-117,28,-132,-121,-122,28,-118,-120,28,28,28,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,28,-130,-163,-95,-125,-100,-39,-43,-131,-40,-37,-15,-35,-38,28,-36,-96,]),'WHILE':([0,20,21,22,23,24,25,26,49,50,56,57,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,195,225,232,238,241,242,244,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,345,346,347,348,350,355,358,363,365,367,370,373,382,402,406,410,411,412,413,414,415,416,],[29,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-15,29,-15,-15,-164,-15,-15,-93,-94,-15,-110,-112,29,-16,-140,-31,-15,-113,-115,-117,29,-132,-121,-122,29,-118,-120,29,29,29,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,29,-30,-32,29,-130,-163,-95,-125,-100,-39,-43,-131,-40,29,-37,-15,29,-35,-38,29,-36,-96,]),'FOR':([0,20,21,22,23,24,25,26,49,50,56,57,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,195,232,238,241,242,244,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,348,350,355,358,363,365,367,370,373,382,406,410,412,413,414,415,416,],[30,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-15,-15,-15,-164,-15,-15,-93,-94,-15,-110,-112,30,-16,-140,-31,-15,-113,-115,-117,30,-132,-121,-122,30,-118,-120,30,30,30,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,30,-130,-163,-95,-125,-100,-39,-43,-131,-40,-37,-15,-35,-38,30,-36,-96,]),'STRUCT':([0,20,21,22,23,24,25,26,49,50,56,57,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,195,232,238,241,242,244,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,348,350,355,358,363,365,367,370,373,382,406,410,412,413,414,415,416,],[34,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-15,-15,-15,-164,-15,-15,-93,-94,-15,-110,-112,34,-16,-140,-31,-15,-113,-115,-117,34,-132,-121,-122,34,-118,-120,34,34,34,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,34,-130,-163,-95,-125,-100,-39,-43,-131,-40,-37,-15,-35,-38,34,-36,-96,]),'CLASS':([0,],[35,]),'IF':([0,20,21,22,23,24,25,26,49,50,56,57,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,195,232,238,241,242,244,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,345,346,347,348,350,355,358,363,365,367,370,373,382,406,410,412,413,414,415,416,],[40,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-15,-15,-15,-164,-15,-15,-93,-94,-15,-110,-112,40,-16,-140,-31,-15,-113,-115,-117,40,-132,-121,-122,40,-118,-120,40,40,40,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,369,-30,-32,40,-130,-163,-95,-125,-100,-39,-43,-131,-40,-37,-15,-35,-38,40,-36,-96,]),'IDENTIFICADOR':([0,17,18,20,21,22,23,24,25,26,31,32,34,35,42,43,45,47,48,49,50,53,54,55,56,57,59,62,63,66,70,73,74,76,82,84,85,92,93,105,106,107,108,110,113,114,118,119,128,129,130,134,136,138,142,143,144,145,146,152,153,154,155,156,157,159,160,161,162,164,166,167,169,170,173,174,179,181,188,189,191,195,200,201,202,203,205,209,210,221,222,223,224,227,232,238,241,242,244,246,250,252,256,261,262,263,264,272,275,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,314,315,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,348,349,350,354,355,356,358,359,363,365,367,370,373,375,382,383,390,406,410,412,413,414,415,416,],[32,69,69,-103,-104,-105,-106,-107,-108,-109,79,81,90,91,95,97,100,102,103,-175,-176,-177,-178,-179,-165,-166,-155,-168,-169,69,69,69,69,127,137,69,-157,127,69,-167,-170,-171,-172,69,69,69,69,127,192,194,-111,-124,-138,-141,-159,-158,-160,-161,-162,127,-98,228,228,95,95,69,-114,231,-116,-129,237,-123,240,-119,-156,69,69,69,127,127,127,-15,267,-182,-183,-184,69,69,274,283,284,285,286,-97,-15,-15,-164,-15,-15,69,-93,-94,-15,-110,-112,314,-16,-140,335,-31,-15,-113,-115,-117,314,-132,-121,-122,314,-118,-120,314,314,314,81,360,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,314,371,-130,69,-163,377,-95,69,-125,-100,-39,-43,-131,69,-40,127,400,-37,-15,-35,-38,314,-36,-96,]),'AUTO':([0,20,21,22,23,24,25,26,49,50,56,57,85,92,130,134,136,138,142,143,144,145,146,147,152,153,160,162,164,167,170,195,211,225,227,232,238,241,242,244,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,345,346,347,348,350,355,358,363,365,367,370,373,382,383,402,406,410,411,412,413,414,415,416,],[42,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,42,-111,-124,-138,-141,-159,-158,-160,-161,-162,42,42,-98,-114,-116,-129,-123,-119,-15,42,42,-97,-15,-15,-164,-15,-15,-93,-94,-15,-110,-112,42,-16,-140,-31,-15,-113,-115,-117,42,-132,-121,-122,42,-118,-120,42,42,42,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,42,-30,-32,42,-130,-163,-95,-125,-100,-39,-43,-131,-40,42,42,-37,-15,42,-35,-38,42,-36,-96,]),'CHAR':([0,20,21,22,23,24,25,26,36,37,38,39,49,50,56,57,85,92,130,133,134,136,138,142,143,144,145,146,147,148,152,153,160,162,164,167,170,195,196,211,212,214,215,219,220,225,227,232,238,241,242,243,244,250,252,256,261,262,263,264,272,277,279,280,281,282,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,329,332,333,334,338,339,340,341,342,343,344,345,346,347,348,350,355,357,358,363,365,367,370,373,382,383,391,392,394,395,397,398,399,402,406,410,411,412,413,414,415,416,],[43,-103,-104,-105,-106,-107,-108,-109,-74,-75,-76,-77,-175,-176,-165,-166,-157,155,-111,203,-124,-138,-141,-159,-158,-160,-161,-162,155,223,155,-98,-114,-116,-129,-123,-119,-15,-84,155,223,223,-67,-68,-69,155,-97,-15,-15,-164,-15,-87,-15,-93,-94,-15,-110,-112,155,-16,-140,-66,223,-63,-64,-65,-31,-15,-113,-115,-117,155,-132,-121,-122,155,-118,-120,155,155,155,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,203,-126,-139,-99,-70,-71,-72,-73,-29,-33,-34,155,-30,-32,155,-130,-163,-81,-95,-125,-100,-39,-43,-131,-40,155,-83,-82,-80,-79,-78,-86,-85,155,-37,-15,155,-35,-38,155,-36,-96,]),'STRING':([0,20,21,22,23,24,25,26,36,37,38,39,49,50,56,57,85,92,130,133,134,136,138,142,143,144,145,146,147,148,152,153,160,162,164,167,170,195,196,211,212,214,215,219,220,225,227,232,238,241,242,243,244,250,252,256,261,262,263,264,272,277,279,280,281,282,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,329,332,333,334,338,339,340,341,342,343,344,345,346,347,348,350,355,357,358,363,365,367,370,373,382,383,391,392,394,395,397,398,399,402,406,410,411,412,413,414,415,416,],[45,-103,-104,-105,-106,-107,-108,-109,-74,-75,-76,-77,-175,-176,-165,-166,-157,156,-111,202,-124,-138,-141,-159,-158,-160,-161,-162,156,222,156,-98,-114,-116,-129,-123,-119,-15,-84,156,222,222,-67,-68,-69,156,-97,-15,-15,-164,-15,-87,-15,-93,-94,-15,-110,-112,156,-16,-140,-66,222,-63,-64,-65,-31,-15,-113,-115,-117,156,-132,-121,-122,156,-118,-120,156,156,156,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,202,-126,-139,-99,-70,-71,-72,-73,-29,-33,-34,156,-30,-32,156,-130,-163,-81,-95,-125,-100,-39,-43,-131,-40,156,-83,-82,-80,-79,-78,-86,-85,156,-37,-15,156,-35,-38,156,-36,-96,]),'BOOL':([0,20,21,22,23,24,25,26,36,37,38,39,49,50,56,57,85,92,130,134,136,138,142,143,144,145,146,147,148,152,153,160,162,164,167,170,195,196,211,212,214,215,219,220,225,227,232,238,241,242,243,244,250,252,256,261,262,263,264,272,277,279,280,281,282,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,338,339,340,341,342,343,344,345,346,347,348,350,355,357,358,363,365,367,370,373,382,383,391,392,394,395,397,398,399,402,406,410,411,412,413,414,415,416,],[47,-103,-104,-105,-106,-107,-108,-109,-74,-75,-76,-77,-175,-176,-165,-166,-157,157,-111,-124,-138,-141,-159,-158,-160,-161,-162,157,224,157,-98,-114,-116,-129,-123,-119,-15,-84,157,224,224,-67,-68,-69,157,-97,-15,-15,-164,-15,-87,-15,-93,-94,-15,-110,-112,157,-16,-140,-66,224,-63,-64,-65,-31,-15,-113,-115,-117,157,-132,-121,-122,157,-118,-120,157,157,157,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-70,-71,-72,-73,-29,-33,-34,157,-30,-32,157,-130,-163,-81,-95,-125,-100,-39,-43,-131,-40,157,-83,-82,-80,-79,-78,-86,-85,157,-37,-15,157,-35,-38,157,-36,-96,]),'VOID':([0,36,37,38,39,148,196,212,214,215,219,220,243,277,279,280,281,282,338,339,340,341,357,391,392,394,395,397,398,399,],[48,-74,-75,-76,-77,48,-84,48,48,-67,-68,-69,-87,-66,48,-63,-64,-65,-70,-71,-72,-73,-81,-83,-82,-80,-79,-78,-86,-85,]),'ENTERO':([0,17,18,20,21,22,23,24,25,26,49,50,56,57,59,62,63,66,70,73,76,84,85,86,87,88,89,92,93,105,106,107,108,110,113,114,119,129,130,132,134,136,138,142,143,144,145,146,152,153,159,160,162,164,167,170,173,174,179,188,189,191,195,204,205,209,227,232,238,241,242,244,246,250,252,256,260,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,315,316,317,318,319,320,321,322,323,324,325,326,327,331,332,333,334,342,343,344,346,347,348,350,355,358,359,363,365,367,370,373,382,383,406,410,412,413,414,415,416,],[49,49,49,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-155,-168,-169,49,49,49,49,49,-157,49,49,49,49,49,49,-167,-170,-171,-172,49,49,49,49,49,-111,197,-124,-138,-141,-159,-158,-160,-161,-162,49,-98,49,-114,-116,-129,-123,-119,-156,49,49,49,49,49,-15,49,49,49,-97,-15,-15,-164,-15,-15,49,-93,-94,-15,49,-110,-112,49,-16,-140,-31,-15,-113,-115,-117,49,-132,-121,-122,49,-118,-120,49,49,49,49,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,49,-126,-139,-99,-29,-33,-34,-30,-32,49,-130,-163,-95,49,-125,-100,-39,-43,-131,-40,49,-37,-15,-35,-38,49,-36,-96,]),'FLOTANTE':([0,17,18,20,21,22,23,24,25,26,49,50,56,57,59,62,63,66,70,73,76,84,85,86,87,88,89,92,93,105,106,107,108,110,113,114,119,129,130,134,136,138,142,143,144,145,146,152,153,159,160,162,164,167,170,173,174,179,188,189,191,195,204,205,209,227,232,238,241,242,244,246,250,252,256,260,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,315,316,317,318,319,320,321,322,323,324,325,326,327,331,332,333,334,342,343,344,346,347,348,350,355,358,359,363,365,367,370,373,382,383,406,410,412,413,414,415,416,],[50,50,50,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-155,-168,-169,50,50,50,50,50,-157,50,50,50,50,50,50,-167,-170,-171,-172,50,50,50,50,50,-111,-124,-138,-141,-159,-158,-160,-161,-162,50,-98,50,-114,-116,-129,-123,-119,-156,50,50,50,50,50,-15,50,50,50,-97,-15,-15,-164,-15,-15,50,-93,-94,-15,50,-110,-112,50,-16,-140,-31,-15,-113,-115,-117,50,-132,-121,-122,50,-118,-120,50,50,50,50,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,50,-126,-139,-99,-29,-33,-34,-30,-32,50,-130,-163,-95,50,-125,-100,-39,-43,-131,-40,50,-37,-15,-35,-38,50,-36,-96,]),'CHARACTER':([0,17,18,20,21,22,23,24,25,26,59,62,63,66,70,73,76,84,92,93,105,106,107,108,110,113,114,119,130,134,152,153,159,160,161,162,164,167,170,173,174,179,188,189,191,205,209,227,233,246,261,262,292,293,294,299,300,301,304,305,332,349,350,352,359,363,373,383,],[44,44,44,-103,-104,-105,-106,-107,-108,-109,-155,-168,-169,44,44,44,44,44,44,44,-167,-170,-171,-172,44,44,44,44,-111,-124,44,-98,44,-114,230,-116,-129,-123,-119,-156,44,44,44,44,44,44,44,-97,298,44,-110,-112,-113,-115,-117,-132,-121,-122,-118,-120,-126,372,-130,374,44,-125,-131,44,]),'INT':([0,20,21,22,23,24,25,26,36,37,38,39,49,50,56,57,77,85,92,130,133,134,136,138,142,143,144,145,146,147,148,152,153,160,162,164,167,170,195,196,211,212,214,215,219,220,225,227,232,238,241,242,243,244,250,252,256,261,262,263,264,272,277,279,280,281,282,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,329,332,333,334,338,339,340,341,342,343,344,345,346,347,348,350,355,357,358,363,365,367,370,373,382,383,391,392,394,395,397,398,399,402,406,410,411,412,413,414,415,416,],[53,-103,-104,-105,-106,-107,-108,-109,-74,-75,-76,-77,-175,-176,-165,-166,53,-157,53,-111,53,-124,-138,-141,-159,-158,-160,-161,-162,53,53,53,-98,-114,-116,-129,-123,-119,-15,-84,53,53,53,-67,-68,-69,53,-97,-15,-15,-164,-15,-87,-15,-93,-94,-15,-110,-112,53,-16,-140,-66,53,-63,-64,-65,-31,-15,-113,-115,-117,53,-132,-121,-122,53,-118,-120,53,53,53,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,53,-126,-139,-99,-70,-71,-72,-73,-29,-33,-34,53,-30,-32,53,-130,-163,-81,-95,-125,-100,-39,-43,-131,-40,53,-83,-82,-80,-79,-78,-86,-85,53,-37,-15,53,-35,-38,53,-36,-96,]),'FLOAT':([0,20,21,22,23,24,25,26,36,37,38,39,49,50,56,57,77,85,92,130,133,134,136,138,142,143,144,145,146,147,148,152,153,160,162,164,167,170,195,196,211,212,214,215,219,220,225,227,232,238,241,242,243,244,250,252,256,261,262,263,264,272,277,279,280,281,282,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,329,332,333,334,338,339,340,341,342,343,344,345,346,347,348,350,355,357,358,363,365,367,370,373,382,383,391,392,394,395,397,398,399,402,406,410,411,412,413,414,415,416,],[54,-103,-104,-105,-106,-107,-108,-109,-74,-75,-76,-77,-175,-176,-165,-166,54,-157,54,-111,54,-124,-138,-141,-159,-158,-160,-161,-162,54,54,54,-98,-114,-116,-129,-123,-119,-15,-84,54,54,54,-67,-68,-69,54,-97,-15,-15,-164,-15,-87,-15,-93,-94,-15,-110,-112,54,-16,-140,-66,54,-63,-64,-65,-31,-15,-113,-115,-117,54,-132,-121,-122,54,-118,-120,54,54,54,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,54,-126,-139,-99,-70,-71,-72,-73,-29,-33,-34,54,-30,-32,54,-130,-163,-81,-95,-125,-100,-39,-43,-131,-40,54,-83,-82,-80,-79,-78,-86,-85,54,-37,-15,54,-35,-38,54,-36,-96,]),'LONG':([0,20,21,22,23,24,25,26,36,37,38,39,49,50,56,57,77,85,92,130,133,134,136,138,142,143,144,145,146,147,148,152,153,160,162,164,167,170,195,196,211,212,214,215,219,220,225,227,232,238,241,242,243,244,250,252,256,261,262,263,264,272,277,279,280,281,282,287,289,292,293,294,295,299,300,301,303,304,305,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,329,332,333,334,338,339,340,341,342,343,344,345,346,347,348,350,355,357,358,363,365,367,370,373,382,383,391,392,394,395,397,398,399,402,406,410,411,412,413,414,415,416,],[55,-103,-104,-105,-106,-107,-108,-109,-74,-75,-76,-77,-175,-176,-165,-166,55,-157,55,-111,55,-124,-138,-141,-159,-158,-160,-161,-162,55,55,55,-98,-114,-116,-129,-123,-119,-15,-84,55,55,55,-67,-68,-69,55,-97,-15,-15,-164,-15,-87,-15,-93,-94,-15,-110,-112,55,-16,-140,-66,55,-63,-64,-65,-31,-15,-113,-115,-117,55,-132,-121,-122,55,-118,-120,55,55,55,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,55,-126,-139,-99,-70,-71,-72,-73,-29,-33,-34,55,-30,-32,55,-130,-163,-81,-95,-125,-100,-39,-43,-131,-40,55,-83,-82,-80,-79,-78,-86,-85,55,-37,-15,55,-35,-38,55,-36,-96,]),'TRUE':([0,17,18,20,21,22,23,24,25,26,49,50,56,57,59,62,63,66,70,73,76,84,85,92,93,105,106,107,108,110,113,114,119,123,130,134,136,138,142,143,144,145,146,152,153,159,160,162,164,167,169,170,173,174,179,188,189,191,195,205,209,227,232,238,241,242,244,246,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,306,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,348,350,355,356,358,359,363,365,367,370,373,382,383,406,410,412,413,414,415,416,],[56,56,56,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-155,-168,-169,56,56,56,56,56,-157,56,56,-167,-170,-171,-172,56,56,56,56,56,-111,-124,-138,-141,-159,-158,-160,-161,-162,56,-98,56,-114,-116,-129,-123,56,-119,-156,56,56,56,56,56,-15,56,56,-97,-15,-15,-164,-15,-15,56,-93,-94,-15,-110,-112,56,-16,-140,-31,-15,-113,-115,-117,56,-132,-121,-122,56,-118,-120,56,56,56,56,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,56,-130,-163,56,-95,56,-125,-100,-39,-43,-131,-40,56,-37,-15,-35,-38,56,-36,-96,]),'FALSE':([0,17,18,20,21,22,23,24,25,26,49,50,56,57,59,62,63,66,70,73,76,84,85,92,93,105,106,107,108,110,113,114,119,123,130,134,136,138,142,143,144,145,146,152,153,159,160,162,164,167,169,170,173,174,179,188,189,191,195,205,209,227,232,238,241,242,244,246,250,252,256,261,262,263,264,272,287,289,292,293,294,295,299,300,301,303,304,305,306,307,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,348,350,355,356,358,359,363,365,367,370,373,382,383,406,410,412,413,414,415,416,],[57,57,57,-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-155,-168,-169,57,57,57,57,57,-157,57,57,-167,-170,-171,-172,57,57,57,57,57,-111,-124,-138,-141,-159,-158,-160,-161,-162,57,-98,57,-114,-116,-129,-123,57,-119,-156,57,57,57,57,57,-15,57,57,-97,-15,-15,-164,-15,-15,57,-93,-94,-15,-110,-112,57,-16,-140,-31,-15,-113,-115,-117,57,-132,-121,-122,57,-118,-120,57,57,57,57,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,57,-130,-163,57,-95,57,-125,-100,-39,-43,-131,-40,57,-37,-15,-35,-38,57,-36,-96,]),'CADENA':([0,17,18,20,21,22,23,24,25,26,59,62,63,66,70,73,74,76,84,92,93,105,106,107,108,110,113,114,118,119,130,134,152,153,159,160,162,164,165,166,167,170,173,174,179,181,188,189,191,205,209,227,246,261,262,292,293,294,299,300,301,304,305,332,350,354,359,363,373,375,383,],[46,46,46,-103,-104,-105,-106,-107,-108,-109,-155,-168,-169,46,46,46,46,46,46,46,46,-167,-170,-171,-172,46,46,46,46,46,-111,-124,46,-98,46,-114,-116,-129,234,46,-123,-119,-156,46,46,46,46,46,46,46,46,-97,46,-110,-112,-113,-115,-117,-132,-121,-122,-118,-120,-126,-130,46,46,-125,-131,46,46,]),'$end':([1,3,4,5,6,7,8,9,10,11,12,13,14,15,20,21,22,23,24,25,26,33,36,37,38,39,49,50,58,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,196,243,250,252,261,262,272,278,287,292,293,294,299,300,301,304,305,332,333,334,336,342,343,344,346,347,350,357,358,363,365,366,367,370,373,382,391,392,394,395,397,398,399,406,412,413,415,416,],[0,-2,-3,-4,-5,-6,-7,-8,-9,-10,-11,-12,-13,-14,-103,-104,-105,-106,-107,-108,-109,-158,-74,-75,-76,-77,-175,-176,-1,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-84,-87,-93,-94,-110,-112,-140,-61,-31,-113,-115,-117,-132,-121,-122,-118,-120,-126,-139,-99,-60,-29,-33,-34,-30,-32,-130,-81,-95,-125,-100,-62,-39,-43,-131,-40,-83,-82,-80,-79,-78,-86,-85,-37,-35,-38,-36,-96,]),'PUNTOCOMA':([2,16,20,21,22,23,24,25,26,44,46,49,50,51,52,56,57,65,68,69,78,79,80,81,83,85,94,95,96,97,98,99,100,101,102,112,117,130,131,134,139,142,143,144,145,146,158,160,162,164,167,170,171,176,180,182,193,194,198,206,207,213,228,229,230,231,234,235,236,237,239,240,241,247,248,251,261,262,265,266,269,271,274,276,283,284,285,286,288,290,291,292,293,294,296,299,300,301,304,305,310,313,330,332,335,337,350,351,355,358,360,361,363,368,371,372,373,376,377,378,379,396,407,],[58,-150,-103,-104,-105,-106,-107,-108,-109,-186,-180,-175,-176,-187,-188,-165,-166,-151,-185,-181,130,-173,134,136,138,-157,160,-173,162,-173,164,167,-173,170,-173,-154,-137,-111,196,-124,-142,-159,-158,-160,-161,-162,-147,-114,-116,-129,-123,-119,243,-152,250,252,261,262,-88,272,-143,278,-173,292,293,294,299,300,301,-181,304,305,-164,-148,-153,-136,-110,-112,-174,-89,332,333,334,336,338,339,340,341,347,-41,-42,-113,-115,-117,350,-132,-121,-122,-118,-120,-149,359,363,-126,365,366,-130,373,-163,-95,380,381,-125,382,384,385,-131,387,388,389,390,-135,413,]),'IGUAL':([2,16,32,33,41,44,46,49,50,51,52,56,57,60,61,62,63,64,65,68,69,71,72,78,79,80,94,95,96,97,98,99,100,101,102,109,111,112,115,122,124,126,127,137,158,175,176,177,178,184,185,192,228,241,247,248,249,265,310,],[61,-150,-181,-185,61,-186,-180,-175,-176,-187,-188,-165,-166,61,105,106,107,108,-151,-185,-181,61,61,129,-173,135,159,-173,161,-173,165,166,-173,169,-173,61,-151,-154,61,61,-187,-185,-181,205,-147,61,-152,-147,-151,-187,-185,260,-173,61,-148,-153,-147,-174,-149,]),'MENOR':([2,16,28,32,33,41,44,46,49,50,51,52,56,57,60,65,68,69,71,72,75,109,111,112,115,122,124,126,127,158,175,176,177,178,184,185,241,247,248,249,310,],[62,-150,75,-181,-185,62,-186,-180,-175,-176,-187,-188,-165,-166,62,-151,-185,-181,62,62,118,62,-151,-154,62,62,-187,-185,-181,-147,62,-152,-147,-151,-187,-185,62,-148,-153,-147,-149,]),'MAYOR':([2,16,32,33,41,44,46,49,50,51,52,56,57,60,65,68,69,71,72,109,111,112,115,122,124,126,127,158,175,176,177,178,184,185,241,247,248,249,310,],[63,-150,-181,-185,63,-186,-180,-175,-176,-187,-188,-165,-166,63,-151,-185,-181,63,63,63,-151,-154,63,63,-187,-185,-181,-147,63,-152,-147,-151,-187,-185,63,-148,-153,-147,-149,]),'OR':([16,44,46,49,50,51,52,56,57,65,68,69,112,121,122,124,125,126,127,158,176,190,247,248,253,254,255,310,312,],[-150,-186,-180,-175,-176,-187,-188,-165,-166,-151,-185,-181,-154,188,-50,-55,-52,-56,-173,-147,-152,-51,-148,-153,-53,-57,-58,-149,-54,]),'AND':([16,44,46,49,50,51,52,56,57,65,68,69,112,121,122,124,125,126,127,158,176,190,247,248,253,254,255,310,312,],[-150,-186,-180,-175,-176,-187,-188,-165,-166,-151,-185,-181,-154,189,-50,-55,-52,-56,-173,-147,-152,-51,-148,-153,-53,-57,-58,-149,-54,]),'RPAR':([16,44,46,49,50,51,52,56,57,59,62,63,65,68,69,70,84,104,105,106,107,108,111,112,116,117,120,121,122,124,125,126,127,133,140,141,149,150,151,158,173,176,177,178,183,184,185,187,190,199,208,226,245,247,248,249,251,253,254,255,257,258,259,267,273,309,310,312,328,362,386,393,401,408,409,],[-150,-186,-180,-175,-176,-187,-188,-165,-166,-155,-168,-169,-151,-185,-181,112,139,173,-167,-170,-171,-172,176,-154,180,-137,186,-46,-50,-55,-52,-56,-173,198,207,-144,225,-44,-45,-147,-156,-152,247,248,253,254,255,-47,-51,266,-145,-59,247,-148,-153,310,-136,-53,-57,-58,-48,-49,312,-90,-146,310,-149,-54,-91,-92,396,402,405,-101,-102,]),'LLAVER':([20,21,22,23,24,25,26,36,37,38,39,49,50,56,57,85,130,134,136,138,142,143,144,145,146,147,148,153,160,162,164,167,170,196,204,211,212,215,219,220,227,233,241,243,244,250,252,256,261,262,264,268,270,272,277,279,287,289,292,293,294,297,298,299,300,301,304,305,308,311,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,338,339,340,341,342,343,344,346,347,348,350,355,357,358,363,364,365,367,370,373,374,380,381,382,384,385,387,388,389,391,392,394,395,397,398,399,406,410,412,413,414,415,416,],[-103,-104,-105,-106,-107,-108,-109,-74,-75,-76,-77,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,210,213,-98,-114,-116,-129,-123,-119,-84,269,275,276,-67,-68,-69,-97,296,-164,-87,-15,-93,-94,-15,-110,-112,-16,330,-128,-140,-66,337,-31,-15,-113,-115,-117,351,-133,-132,-121,-122,-118,-120,357,358,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-70,-71,-72,-73,-29,-33,-34,-30,-32,370,-130,-163,-81,-95,-125,-127,-100,-39,-43,-131,-134,391,392,-40,394,395,397,398,399,-83,-82,-80,-79,-78,-86,-85,-37,-15,-35,-38,416,-36,-96,]),'ELSE':([20,21,22,23,24,25,26,130,134,160,162,164,167,170,261,262,287,288,290,291,292,293,294,299,300,301,304,305,332,350,358,363,370,373,406,413,],[-103,-104,-105,-106,-107,-108,-109,-111,-124,-114,-116,-129,-123,-119,-110,-112,345,345,-41,-42,-113,-115,-117,-132,-121,-122,-118,-120,-126,-130,-95,-125,-43,-131,411,411,]),'RETURN':([20,21,22,23,24,25,26,49,50,56,57,85,130,134,136,138,142,143,144,145,146,160,162,164,167,170,195,232,238,241,242,250,252,261,262,263,264,272,287,292,293,294,295,299,300,301,303,304,305,307,316,317,318,319,320,321,322,323,324,325,326,327,332,333,334,342,343,344,346,347,350,355,358,363,365,367,370,373,382,406,412,413,415,416,],[-103,-104,-105,-106,-107,-108,-109,-175,-176,-165,-166,-157,-111,-124,-138,-141,-159,-158,-160,-161,-162,-114,-116,-129,-123,-119,-15,-15,-15,-164,-15,-93,-94,-110,-112,315,-16,-140,-31,-113,-115,-117,349,-132,-121,-122,354,-118,-120,356,-23,-17,-18,-19,-20,-21,-22,-24,-25,-26,-27,-28,-126,-139,-99,-29,-33,-34,-30,-32,-130,-163,-95,-125,-100,-39,-43,-131,-40,-37,-35,-38,-36,-96,]),'PUNTO':([32,237,314,],[82,302,82,]),'MAS':([33,46,49,50,69,117,143,237,400,403,],[86,-180,-175,-176,-181,181,86,-181,403,408,]),'MENOS':([33,49,50,143,400,404,],[87,-175,-176,87,404,409,]),'ASTERISCO':([33,49,50,143,],[88,-175,-176,88,]),'SLASH':([33,49,50,143,],[89,-175,-176,89,]),'COMMA':([44,46,49,50,51,52,56,57,68,69,141,267,268,270,297,298,364,374,],[-186,-180,-175,-176,-187,-188,-165,-166,-185,-181,209,329,331,-128,352,-133,-127,-134,]),'CORCHETEL':([79,97,228,],[132,132,132,]),'LLAVEL':([90,91,131,135,163,165,168,171,172,186,198,225,266,345,402,405,411,],[147,148,195,204,232,233,238,242,244,256,-88,289,-89,289,289,410,289,]),'PUBLIC':([148,],[216,]),'PRIVATE':([148,],[217,]),'PROTECTED':([148,],[218,]),'CORCHETER':([197,],[265,]),'DOBLEPUNTO':([216,217,218,],[280,281,282,]),'APPEND':([302,],[353,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'body':([0,],[1,]),'comparar':([0,18,73,76,92,119,152,188,189,191,383,],[2,72,72,122,122,72,122,122,122,72,122,]),'variable':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[3,153,153,227,227,291,318,318,318,318,318,318,291,318,153,291,291,318,]),'imprimir':([0,263,295,303,307,308,311,348,414,],[4,321,321,321,321,321,321,321,321,]),'while':([0,225,263,295,303,307,308,311,345,348,402,411,414,],[5,290,317,317,317,317,317,317,290,317,290,290,317,]),'for':([0,263,295,303,307,308,311,348,414,],[6,319,319,319,319,319,319,319,319,]),'struct':([0,263,295,303,307,308,311,348,414,],[7,320,320,320,320,320,320,320,320,]),'claseimplementacion':([0,],[8,]),'funcionclaseimpl':([0,148,212,214,279,],[9,220,220,220,220,]),'expresionif':([0,263,295,303,307,308,311,348,414,],[10,322,322,322,322,322,322,322,322,]),'mathoperation':([0,86,87,88,89,129,263,295,303,307,308,311,315,348,414,],[11,142,144,145,146,193,316,316,316,316,316,316,361,316,316,]),'creacionobjeto':([0,263,295,303,307,308,311,348,414,],[12,325,325,325,325,325,325,325,325,]),'asignarvalorobjeto':([0,263,295,303,307,308,311,348,414,],[13,324,324,324,324,324,324,324,324,]),'usarfuncionobjeto':([0,263,295,303,307,308,311,348,414,],[14,326,326,326,326,326,326,326,326,]),'usarfuncion':([0,263,295,303,307,308,311,348,414,],[15,327,327,327,327,327,327,327,327,]),'expresion':([0,17,18,70,73,76,92,114,119,152,188,189,191,359,383,],[16,65,16,111,16,16,16,178,16,16,16,16,16,379,16,]),'mascomparaciones':([0,18,73,76,92,119,152,188,189,191,383,],[17,70,114,17,17,70,17,17,17,114,17,]),'variableauto':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,20,]),'variablenumero':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,21,]),'variablechar':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'variablestring':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'variablearraynumero':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,24,]),'variablearraychar':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'variableboolean':([0,92,147,152,211,225,263,295,303,307,308,311,345,348,383,402,411,414,],[26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,]),'numerotipo':([0,77,92,133,147,148,152,211,212,214,225,263,279,295,303,307,308,311,329,345,348,383,402,411,414,],[31,128,154,201,154,221,154,154,221,221,154,154,221,154,154,154,154,154,201,154,154,154,154,154,154,]),'numero':([0,17,18,66,70,73,76,84,86,87,88,89,92,93,110,113,114,119,129,152,159,174,179,188,189,191,204,205,209,246,260,263,295,303,307,308,311,315,331,348,359,383,414,],[33,68,68,68,68,68,126,68,143,143,143,143,126,68,68,68,68,185,143,126,68,68,68,126,126,68,270,68,68,68,313,143,143,143,143,143,143,143,364,143,68,126,143,]),'funcionimplvoid':([0,148,212,214,279,],[36,36,36,36,36,]),'funcionimplnumero':([0,148,212,214,279,],[37,37,37,37,37,]),'funcionimplstring':([0,148,212,214,279,],[38,38,38,38,38,]),'funcionimplbool':([0,148,212,214,279,],[39,39,39,39,39,]),'valor':([0,17,18,66,70,73,76,84,92,93,110,113,114,119,152,159,174,179,188,189,191,205,209,246,359,383,],[41,41,71,109,41,115,41,141,41,158,175,177,41,71,41,229,245,249,41,41,115,271,141,309,41,41,]),'boolean':([0,17,18,66,70,73,76,84,92,93,110,113,114,119,123,152,159,169,174,179,188,189,191,205,209,246,263,295,303,306,307,308,311,348,356,359,383,414,],[51,51,51,51,51,51,124,51,124,51,51,51,51,184,190,124,51,241,51,51,124,124,51,51,51,51,241,241,241,355,241,241,241,241,241,51,124,241,]),'stringdata':([0,17,18,66,70,73,74,76,84,92,93,110,113,114,118,119,152,159,166,174,179,181,188,189,191,205,209,246,354,359,375,383,],[52,52,52,52,52,52,117,52,52,52,52,52,52,52,117,52,52,52,117,52,52,117,52,52,52,52,52,52,117,52,386,52,]),'comparador':([2,41,60,71,72,109,115,122,175,241,],[59,93,104,113,59,174,179,59,246,306,]),'id':([31,42,43,45,47,76,92,119,152,154,155,156,157,188,189,191,383,],[78,94,96,99,101,125,125,183,125,78,96,99,101,125,125,259,125,]),'idarray':([31,43,154,155,],[80,98,80,98,]),'funcparentesis':([32,137,314,],[83,206,83,]),'operation':([33,143,],[85,85,]),'concat':([74,118,166,181,354,],[116,182,236,251,376,]),'statement':([76,92,152,188,189,383,],[120,151,226,257,258,151,]),'valorstatement':([76,92,152,188,189,383,],[121,121,121,121,121,121,]),'parametrosimpl':([79,97,100,102,103,283,284,285,286,],[131,163,168,171,172,131,168,163,171,]),'argumentosfuncion':([84,209,],[140,273,]),'condicionif':([92,383,],[149,393,]),'initcondicion':([92,383,],[150,150,]),'varblock':([92,147,383,],[152,211,152,]),'masstatement':([121,],[187,]),'parametros':([133,329,],[199,362,]),'tipo':([133,329,],[200,200,]),'masargumentosfuncion':([141,],[208,]),'bloqueclase':([148,214,],[212,279,]),'acceso':([148,],[214,]),'atributoclase':([148,212,214,279,],[215,277,215,277,]),'definicion':([148,212,214,279,],[219,219,219,219,]),'stringappend':([166,],[235,]),'operacionbool':([169,263,295,303,307,308,311,348,356,414,],[239,323,323,323,323,323,323,323,378,323,]),'bodyblock':([195,232,238,242,244,256,289,410,],[263,295,303,307,308,311,348,414,]),'empty':([195,232,238,242,244,256,289,410,],[264,264,264,264,264,264,264,264,]),'arraydatanumero':([204,],[268,]),'conllaves':([225,345,402,411,],[287,367,406,367,]),'sinllaves':([225,345,402,411,],[288,368,407,368,]),'datachar':([233,],[297,]),'masparametros':([267,],[328,]),'expresionpos':([287,288,],[342,346,]),'else':([287,288,406,413,],[343,343,412,415,]),'elseif':([287,288,],[344,344,]),'unaryexp':([390,],[401,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> body","S'",1,None,None,None),
  ('body -> comparar PUNTOCOMA','body',2,'p_body','sintactico.py',7),
  ('body -> variable','body',1,'p_body','sintactico.py',8),
  ('body -> imprimir','body',1,'p_body','sintactico.py',9),
  ('body -> while','body',1,'p_body','sintactico.py',10),
  ('body -> for','body',1,'p_body','sintactico.py',11),
  ('body -> struct','body',1,'p_body','sintactico.py',12),
  ('body -> claseimplementacion','body',1,'p_body','sintactico.py',13),
  ('body -> funcionclaseimpl','body',1,'p_body','sintactico.py',14),
  ('body -> expresionif','body',1,'p_body','sintactico.py',15),
  ('body -> mathoperation','body',1,'p_body','sintactico.py',16),
  ('body -> creacionobjeto','body',1,'p_body','sintactico.py',17),
  ('body -> asignarvalorobjeto','body',1,'p_body','sintactico.py',18),
  ('body -> usarfuncionobjeto','body',1,'p_body','sintactico.py',19),
  ('body -> usarfuncion','body',1,'p_body','sintactico.py',20),
  ('empty -> <empty>','empty',0,'p_empty','sintactico.py',24),
  ('bodyblock -> empty','bodyblock',1,'p_bodyblock','sintactico.py',28),
  ('bodyblock -> bodyblock while','bodyblock',2,'p_bodyblock','sintactico.py',29),
  ('bodyblock -> bodyblock variable','bodyblock',2,'p_bodyblock','sintactico.py',30),
  ('bodyblock -> bodyblock for','bodyblock',2,'p_bodyblock','sintactico.py',31),
  ('bodyblock -> bodyblock struct','bodyblock',2,'p_bodyblock','sintactico.py',32),
  ('bodyblock -> bodyblock imprimir','bodyblock',2,'p_bodyblock','sintactico.py',33),
  ('bodyblock -> bodyblock expresionif','bodyblock',2,'p_bodyblock','sintactico.py',34),
  ('bodyblock -> bodyblock mathoperation','bodyblock',2,'p_bodyblock','sintactico.py',35),
  ('bodyblock -> bodyblock operacionbool','bodyblock',2,'p_bodyblock','sintactico.py',36),
  ('bodyblock -> bodyblock asignarvalorobjeto','bodyblock',2,'p_bodyblock','sintactico.py',37),
  ('bodyblock -> bodyblock creacionobjeto','bodyblock',2,'p_bodyblock','sintactico.py',38),
  ('bodyblock -> bodyblock usarfuncionobjeto','bodyblock',2,'p_bodyblock','sintactico.py',39),
  ('bodyblock -> bodyblock usarfuncion','bodyblock',2,'p_bodyblock','sintactico.py',40),
  ('expresionif -> IF LPAR condicionif RPAR conllaves expresionpos','expresionif',6,'p_expresionif','sintactico.py',46),
  ('expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos','expresionif',6,'p_expresionif','sintactico.py',47),
  ('expresionif -> IF LPAR condicionif RPAR conllaves','expresionif',5,'p_expresionif','sintactico.py',48),
  ('expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA','expresionif',6,'p_expresionif','sintactico.py',49),
  ('expresionpos -> else','expresionpos',1,'p_expresionpos','sintactico.py',53),
  ('expresionpos -> elseif','expresionpos',1,'p_expresionpos','sintactico.py',54),
  ('elseif -> ELSE IF LPAR condicionif RPAR conllaves else','elseif',7,'p_elseif','sintactico.py',58),
  ('elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else','elseif',8,'p_elseif','sintactico.py',59),
  ('elseif -> ELSE IF LPAR condicionif RPAR conllaves','elseif',6,'p_elseif','sintactico.py',60),
  ('elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA','elseif',7,'p_elseif','sintactico.py',61),
  ('else -> ELSE conllaves','else',2,'p_else','sintactico.py',65),
  ('else -> ELSE sinllaves PUNTOCOMA','else',3,'p_else','sintactico.py',66),
  ('sinllaves -> while','sinllaves',1,'p_sinLlaves','sintactico.py',70),
  ('sinllaves -> variable','sinllaves',1,'p_sinLlaves','sintactico.py',71),
  ('conllaves -> LLAVEL bodyblock LLAVER','conllaves',3,'p_conLlaves','sintactico.py',75),
  ('condicionif -> initcondicion','condicionif',1,'p_condicionif','sintactico.py',78),
  ('condicionif -> statement','condicionif',1,'p_condicionif','sintactico.py',79),
  ('statement -> valorstatement','statement',1,'p_statement','sintactico.py',84),
  ('statement -> valorstatement masstatement','statement',2,'p_statement','sintactico.py',85),
  ('masstatement -> OR statement','masstatement',2,'p_masestatement','sintactico.py',91),
  ('masstatement -> AND statement','masstatement',2,'p_masestatement','sintactico.py',92),
  ('valorstatement -> comparar','valorstatement',1,'p_valorstatement','sintactico.py',99),
  ('valorstatement -> EXCLAMACION boolean','valorstatement',2,'p_valorstatement','sintactico.py',100),
  ('valorstatement -> id','valorstatement',1,'p_valorstatement','sintactico.py',102),
  ('valorstatement -> LPAR id RPAR','valorstatement',3,'p_valorstatement','sintactico.py',103),
  ('valorstatement -> EXCLAMACION LPAR id RPAR','valorstatement',4,'p_valorstatement','sintactico.py',104),
  ('valorstatement -> boolean','valorstatement',1,'p_valorstatement','sintactico.py',105),
  ('valorstatement -> numero','valorstatement',1,'p_valorstatement','sintactico.py',106),
  ('valorstatement -> LPAR boolean RPAR','valorstatement',3,'p_valorstatement','sintactico.py',107),
  ('valorstatement -> LPAR numero RPAR','valorstatement',3,'p_valorstatement','sintactico.py',108),
  ('initcondicion -> varblock statement','initcondicion',2,'p_initcondicion','sintactico.py',114),
  ('claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA','claseimplementacion',6,'p_claseimplementacion','sintactico.py',119),
  ('claseimplementacion -> CLASS IDENTIFICADOR LLAVEL LLAVER PUNTOCOMA','claseimplementacion',5,'p_claseimplementacion','sintactico.py',120),
  ('claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA','claseimplementacion',7,'p_claseimplementacion','sintactico.py',121),
  ('acceso -> PUBLIC DOBLEPUNTO','acceso',2,'p_claseacceso','sintactico.py',127),
  ('acceso -> PRIVATE DOBLEPUNTO','acceso',2,'p_claseacceso','sintactico.py',128),
  ('acceso -> PROTECTED DOBLEPUNTO','acceso',2,'p_claseacceso','sintactico.py',129),
  ('bloqueclase -> bloqueclase atributoclase','bloqueclase',2,'p_bloqueclase','sintactico.py',136),
  ('bloqueclase -> atributoclase','bloqueclase',1,'p_bloqueclase','sintactico.py',137),
  ('atributoclase -> definicion','atributoclase',1,'p_atributoclase','sintactico.py',143),
  ('atributoclase -> funcionclaseimpl','atributoclase',1,'p_atributoclase','sintactico.py',144),
  ('definicion -> numerotipo IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',151),
  ('definicion -> STRING IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',152),
  ('definicion -> CHAR IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',153),
  ('definicion -> BOOL IDENTIFICADOR PUNTOCOMA','definicion',3,'p_definicion','sintactico.py',154),
  ('funcionclaseimpl -> funcionimplvoid','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',161),
  ('funcionclaseimpl -> funcionimplnumero','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',162),
  ('funcionclaseimpl -> funcionimplstring','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',163),
  ('funcionclaseimpl -> funcionimplbool','funcionclaseimpl',1,'p_funcionclaseimpl','sintactico.py',164),
  ('funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER','funcionimplstring',9,'p_funcionimplstring','sintactico.py',170),
  ('funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER','funcionimplstring',9,'p_funcionimplstring','sintactico.py',171),
  ('funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER','funcionimplstring',9,'p_funcionimplstring','sintactico.py',172),
  ('funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER','funcionimplvoid',6,'p_funcionimplvoid','sintactico.py',177),
  ('funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN mathoperation PUNTOCOMA LLAVER','funcionimplnumero',9,'p_funcionimplnumero','sintactico.py',183),
  ('funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER','funcionimplnumero',9,'p_funcionimplnumero','sintactico.py',184),
  ('funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA','funcionimplnumero',4,'p_funcionimplnumero','sintactico.py',185),
  ('funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN operacionbool PUNTOCOMA LLAVER','funcionimplbool',9,'p_funcionimplbool','sintactico.py',191),
  ('funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER','funcionimplbool',9,'p_funcionimplbool','sintactico.py',192),
  ('funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA','funcionimplbool',4,'p_funcionimplbool','sintactico.py',193),
  ('parametrosimpl -> LPAR RPAR','parametrosimpl',2,'p_parametrosimpl','sintactico.py',199),
  ('parametrosimpl -> LPAR parametros RPAR','parametrosimpl',3,'p_parametrosimpl','sintactico.py',200),
  ('parametros -> tipo IDENTIFICADOR','parametros',2,'p_parametros','sintactico.py',206),
  ('parametros -> tipo IDENTIFICADOR masparametros','parametros',3,'p_parametros','sintactico.py',207),
  ('masparametros -> COMMA parametros','masparametros',2,'p_masparametros','sintactico.py',213),
  ('imprimir -> PRINT LPAR concat RPAR PUNTOCOMA','imprimir',5,'p_imprimir','sintactico.py',219),
  ('imprimir -> COUT MENOR MENOR concat PUNTOCOMA','imprimir',5,'p_imprimir','sintactico.py',220),
  ('while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER','while',7,'p_while','sintactico.py',228),
  ('for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER','for',14,'p_for','sintactico.py',232),
  ('varblock -> varblock variable','varblock',2,'p_varblock','sintactico.py',237),
  ('varblock -> variable','varblock',1,'p_varblock','sintactico.py',238),
  ('struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA','struct',6,'p_struct','sintactico.py',242),
  ('struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA','struct',7,'p_struct','sintactico.py',243),
  ('unaryexp -> IDENTIFICADOR MAS MAS','unaryexp',3,'p_unaryexp','sintactico.py',247),
  ('unaryexp -> IDENTIFICADOR MENOS MENOS','unaryexp',3,'p_unaryexp','sintactico.py',248),
  ('variable -> variableauto','variable',1,'p_variable','sintactico.py',253),
  ('variable -> variablenumero','variable',1,'p_variable','sintactico.py',254),
  ('variable -> variablechar','variable',1,'p_variable','sintactico.py',255),
  ('variable -> variablestring','variable',1,'p_variable','sintactico.py',256),
  ('variable -> variablearraynumero','variable',1,'p_variable','sintactico.py',257),
  ('variable -> variablearraychar','variable',1,'p_variable','sintactico.py',258),
  ('variable -> variableboolean','variable',1,'p_variable','sintactico.py',259),
  ('variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA','variablenumero',5,'p_variablenumero','sintactico.py',266),
  ('variablenumero -> numerotipo id PUNTOCOMA','variablenumero',3,'p_variablenumero','sintactico.py',267),
  ('variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA','variablenumero',5,'p_variablenumero','sintactico.py',268),
  ('variableauto -> AUTO id IGUAL valor PUNTOCOMA','variableauto',5,'p_variableauto','sintactico.py',273),
  ('variableauto -> AUTO id PUNTOCOMA','variableauto',3,'p_variableauto','sintactico.py',274),
  ('variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA','variablechar',5,'p_variablechar','sintactico.py',281),
  ('variablechar -> CHAR id PUNTOCOMA','variablechar',3,'p_variablechar','sintactico.py',282),
  ('variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA','variablechar',5,'p_variablechar','sintactico.py',283),
  ('variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA','variableboolean',5,'p_variableboolean','sintactico.py',289),
  ('variableboolean -> BOOL id PUNTOCOMA','variableboolean',3,'p_variableboolean','sintactico.py',290),
  ('variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA','variableboolean',5,'p_variableboolean','sintactico.py',291),
  ('variablestring -> STRING id IGUAL stringappend PUNTOCOMA','variablestring',5,'p_variablestring','sintactico.py',297),
  ('variablestring -> STRING id IGUAL concat PUNTOCOMA','variablestring',5,'p_variablestring','sintactico.py',298),
  ('variablestring -> STRING id PUNTOCOMA','variablestring',3,'p_variablestring','sintactico.py',299),
  ('variablearraynumero -> numerotipo idarray PUNTOCOMA','variablearraynumero',3,'p_variable_array_numero','sintactico.py',304),
  ('variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA','variablearraynumero',7,'p_variable_array_numero','sintactico.py',305),
  ('variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA','variablearraynumero',6,'p_variable_array_numero','sintactico.py',306),
  ('arraydatanumero -> arraydatanumero COMMA numero','arraydatanumero',3,'p_arraydata_numero','sintactico.py',309),
  ('arraydatanumero -> numero','arraydatanumero',1,'p_arraydata_numero','sintactico.py',310),
  ('variablearraychar -> CHAR idarray PUNTOCOMA','variablearraychar',3,'p_variable_array_char','sintactico.py',314),
  ('variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA','variablearraychar',6,'p_variable_array_char','sintactico.py',315),
  ('variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA','variablearraychar',7,'p_variable_array_char','sintactico.py',316),
  ('variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA','variablearraychar',5,'p_variable_array_char','sintactico.py',317),
  ('datachar -> CHARACTER','datachar',1,'p_arraydata_char','sintactico.py',322),
  ('datachar -> datachar COMMA CHARACTER','datachar',3,'p_arraydata_char','sintactico.py',323),
  ('stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR','stringappend',6,'p_string_append','sintactico.py',331),
  ('concat -> stringdata MAS concat','concat',3,'p_string_concat','sintactico.py',334),
  ('concat -> stringdata','concat',1,'p_string_concat','sintactico.py',335),
  ('creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA','creacionobjeto',3,'p_creacionobjeto','sintactico.py',345),
  ('asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA','asignarvalorobjeto',6,'p_asignarvalores','sintactico.py',349),
  ('usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR funcparentesis PUNTOCOMA','usarfuncionobjeto',5,'p_usarfuncionesobjeto','sintactico.py',353),
  ('usarfuncion -> IDENTIFICADOR funcparentesis PUNTOCOMA','usarfuncion',3,'p_usarfuncion','sintactico.py',359),
  ('funcparentesis -> LPAR RPAR','funcparentesis',2,'p_funcparentesis','sintactico.py',365),
  ('funcparentesis -> LPAR argumentosfuncion RPAR','funcparentesis',3,'p_funcparentesis','sintactico.py',366),
  ('argumentosfuncion -> valor','argumentosfuncion',1,'p_argumentosfuncion','sintactico.py',372),
  ('argumentosfuncion -> valor masargumentosfuncion','argumentosfuncion',2,'p_argumentosfuncion','sintactico.py',373),
  ('masargumentosfuncion -> COMMA argumentosfuncion','masargumentosfuncion',2,'p_masargumentosfuncion','sintactico.py',379),
  ('expresion -> valor comparador valor','expresion',3,'p_expresion_comparacion','sintactico.py',385),
  ('expresion -> LPAR valor comparador valor RPAR','expresion',5,'p_expresion_comparacion','sintactico.py',386),
  ('expresion -> EXCLAMACION LPAR valor comparador valor RPAR','expresion',6,'p_expresion_comparacion','sintactico.py',387),
  ('comparar -> expresion','comparar',1,'p_comparar','sintactico.py',395),
  ('comparar -> mascomparaciones expresion','comparar',2,'p_comparar','sintactico.py',396),
  ('comparar -> LPAR mascomparaciones expresion RPAR','comparar',4,'p_comparar','sintactico.py',397),
  ('comparar -> EXCLAMACION LPAR mascomparaciones expresion RPAR','comparar',5,'p_comparar','sintactico.py',398),
  ('comparar -> LPAR mascomparaciones RPAR','comparar',3,'p_comparar','sintactico.py',399),
  ('mascomparaciones -> comparar comparador','mascomparaciones',2,'p_mascomparaciones','sintactico.py',407),
  ('mascomparaciones -> comparar LPAR comparador RPAR','mascomparaciones',4,'p_mascomparaciones','sintactico.py',408),
  ('mathoperation -> numero operation','mathoperation',2,'p_mathoperation','sintactico.py',417),
  ('mathoperation -> numero','mathoperation',1,'p_mathoperation','sintactico.py',418),
  ('operation -> MAS mathoperation','operation',2,'p_operation','sintactico.py',423),
  ('operation -> MENOS mathoperation','operation',2,'p_operation','sintactico.py',424),
  ('operation -> ASTERISCO mathoperation','operation',2,'p_operation','sintactico.py',425),
  ('operation -> SLASH mathoperation','operation',2,'p_operation','sintactico.py',426),
  ('operacionbool -> boolean comparador boolean','operacionbool',3,'p_operacionboolean','sintactico.py',430),
  ('operacionbool -> boolean','operacionbool',1,'p_operacionboolean','sintactico.py',431),
  ('boolean -> TRUE','boolean',1,'p_boolean','sintactico.py',435),
  ('boolean -> FALSE','boolean',1,'p_boolean','sintactico.py',436),
  ('comparador -> IGUAL IGUAL','comparador',2,'p_comparacion','sintactico.py',440),
  ('comparador -> MENOR','comparador',1,'p_comparacion','sintactico.py',441),
  ('comparador -> MAYOR','comparador',1,'p_comparacion','sintactico.py',442),
  ('comparador -> MENOR IGUAL','comparador',2,'p_comparacion','sintactico.py',443),
  ('comparador -> MAYOR IGUAL','comparador',2,'p_comparacion','sintactico.py',444),
  ('comparador -> EXCLAMACION IGUAL','comparador',2,'p_comparacion','sintactico.py',445),
  ('id -> IDENTIFICADOR','id',1,'p_id','sintactico.py',449),
  ('idarray -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER','idarray',4,'p_id_array','sintactico.py',453),
  ('numero -> ENTERO','numero',1,'p_numero','sintactico.py',457),
  ('numero -> FLOTANTE','numero',1,'p_numero','sintactico.py',458),
  ('numerotipo -> INT','numerotipo',1,'p_numero_tipo','sintactico.py',462),
  ('numerotipo -> FLOAT','numerotipo',1,'p_numero_tipo','sintactico.py',463),
  ('numerotipo -> LONG','numerotipo',1,'p_numero_tipo','sintactico.py',464),
  ('stringdata -> CADENA','stringdata',1,'p_string_append_data','sintactico.py',467),
  ('stringdata -> IDENTIFICADOR','stringdata',1,'p_string_append_data','sintactico.py',468),
  ('tipo -> numerotipo','tipo',1,'p_tipo','sintactico.py',471),
  ('tipo -> STRING','tipo',1,'p_tipo','sintactico.py',472),
  ('tipo -> CHAR','tipo',1,'p_tipo','sintactico.py',473),
  ('valor -> numero','valor',1,'p_valor','sintactico.py',476),
  ('valor -> CHARACTER','valor',1,'p_valor','sintactico.py',477),
  ('valor -> boolean','valor',1,'p_valor','sintactico.py',478),
  ('valor -> stringdata','valor',1,'p_valor','sintactico.py',479),
]
