Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BACKSLASH
    BOOL
    CIRCUNFLEJO
    COMADOBLE
    COMASIMPLE
    COMENTARIO
    DOBLEPUNTO
    INTERROGACION
    NEW
    NULLPOINTER
    NUMERAL
    PIPE
    PORCENTAJE
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTERO
    STATIC
    THEN
    VIRGUILA

Grammar

Rule 0     S' -> body
Rule 1     body -> variable
Rule 2     body -> while
Rule 3     body -> expresionif
Rule 4     body -> claseimplementacion
Rule 5     body -> for
Rule 6     body -> funcionclaseimpl
Rule 7     body -> arraydeclaration
Rule 8     body -> creacionobjeto
Rule 9     body -> asignarvalorobjeto
Rule 10    body -> usarfuncionobjeto
Rule 11    body -> struct
Rule 12    body -> imprimir
Rule 13    body -> stringappend
Rule 14    body -> <empty>
Rule 15    id -> IDENTIFICADOR
Rule 16    id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER
Rule 17    tipo -> INT
Rule 18    tipo -> FLOAT
Rule 19    tipo -> LONG
Rule 20    tipo -> AUTO
Rule 21    tipo -> STRING
Rule 22    tipo -> CHAR
Rule 23    imprimir -> PRINT LPAR valor RPAR
Rule 24    imprimir -> COUT MENOR MENOR valor
Rule 25    imprimir -> COUT MENOR MENOR variable
Rule 26    bodyblock -> bodyblock variable
Rule 27    bodyblock -> bodyblock while
Rule 28    bodyblock -> bodyblock expresionif
Rule 29    bodyblock -> bodyblock for
Rule 30    bodyblock -> bodyblock imprimir
Rule 31    bodyblock -> <empty>
Rule 32    funcionblock -> bodyblock variable
Rule 33    funcionblock -> bodyblock while
Rule 34    funcionblock -> bodyblock expresionif
Rule 35    funcionblock -> bodyblock for
Rule 36    funcionblock -> bodyblock imprimir
Rule 37    funcionblock -> RETURN statement
Rule 38    funcionblock -> <empty>
Rule 39    varblock -> varblock variable
Rule 40    varblock -> <empty>
Rule 41    numerotipo -> INT
Rule 42    numerotipo -> FLOAT
Rule 43    numerotipo -> LONG
Rule 44    numero -> ENTERO
Rule 45    numero -> FLOTANTE
Rule 46    variable -> tipo id IGUAL numero PUNTOCOMA
Rule 47    variable -> tipo id PUNTOCOMA
Rule 48    variable -> AUTO id IGUAL valor PUNTOCOMA
Rule 49    variable -> AUTO id PUNTOCOMA
Rule 50    variable -> CHAR id IGUAL CHARACTER PUNTOCOMA
Rule 51    variable -> STRING id IGUAL CADENA PUNTOCOMA
Rule 52    variable -> STRING id IGUAL stringappend PUNTOCOMA
Rule 53    variable -> STRING id IGUAL concat PUNTOCOMA
Rule 54    stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
Rule 55    stringdata -> CADENA
Rule 56    stringdata -> IDENTIFICADOR
Rule 57    concat -> concat MAS CADENA
Rule 58    concat -> concat MAS IDENTIFICADOR
Rule 59    concat -> CADENA
Rule 60    valor -> ENTERO
Rule 61    valor -> FLOTANTE
Rule 62    valor -> CHARACTER
Rule 63    valor -> CADENA
Rule 64    valor -> TRUE
Rule 65    valor -> FALSE
Rule 66    valor -> IDENTIFICADOR
Rule 67    while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
Rule 68    expresion -> expresion comparador expresion
Rule 69    struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
Rule 70    expresionif -> IF LPAR condicionif RPAR conllaves expresionpos
Rule 71    expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos
Rule 72    expresionpos -> else
Rule 73    expresionpos -> elseif
Rule 74    expresionpos -> <empty>
Rule 75    elseif -> ELSE IF LPAR condicionif RPAR conllaves else
Rule 76    elseif -> ELSE IF LPAR condicionif RPAR sinllaves else
Rule 77    elseif -> <empty>
Rule 78    else -> ELSE conllaves
Rule 79    else -> ELSE sinllaves
Rule 80    sinllaves -> while
Rule 81    sinllaves -> variable
Rule 82    conllaves -> LLAVEL bodyblock LLAVER
Rule 83    condicionif -> initcondicion
Rule 84    condicionif -> statement
Rule 85    initcondicion -> varblock statement
Rule 86    statement -> expresion
Rule 87    statement -> EXCLAMACION boolean
Rule 88    statement -> EXCLAMACION LPAR expresion RPAR
Rule 89    statement -> EXCLAMACION IDENTIFICADOR
Rule 90    boolean -> TRUE
Rule 91    boolean -> FALSE
Rule 92    expresion -> valor
Rule 93    comparador -> IGUAL IGUAL
Rule 94    comparador -> MENOR
Rule 95    comparador -> MAYOR
Rule 96    comparador -> MENOR IGUAL
Rule 97    comparador -> MAYOR IGUAL
Rule 98    comparador -> EXCLAMACION IGUAL
Rule 99    initfor -> tipo IDENTIFICADOR IGUAL valor
Rule 100   condfor -> IDENTIFICADOR comparador valor
Rule 101   loopfor -> asign
Rule 102   loopfor -> unaryexp
Rule 103   asign -> IDENTIFICADOR MAS valor
Rule 104   asign -> IDENTIFICADOR MENOS valor
Rule 105   asign -> IDENTIFICADOR ASTERISCO valor
Rule 106   asign -> IDENTIFICADOR SLASH valor
Rule 107   unaryexp -> IDENTIFICADOR MAS MAS
Rule 108   unaryexp -> IDENTIFICADOR MENOS MENOS
Rule 109   for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
Rule 110   arraydeclaration -> tipo id PUNTOCOMA
Rule 111   arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
Rule 112   arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
Rule 113   arraydata -> arraydata COMMA valor
Rule 114   arraydata -> valor
Rule 115   claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
Rule 116   bloqueclase -> bloqueclase definicion
Rule 117   bloqueclase -> bloqueclase funcionclaseimpl
Rule 118   bloqueclase -> <empty>
Rule 119   definicion -> tipo IDENTIFICADOR PUNTOCOMA
Rule 120   definicion -> <empty>
Rule 121   funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
Rule 122   funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
Rule 123   funcionclaseimpl -> <empty>
Rule 124   parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion
Rule 125   parametrosimplementacion -> <empty>
Rule 126   parametrosfuncion -> IDENTIFICADOR masparametrosfuncion
Rule 127   parametrosfuncion -> valor masparametrosfuncion
Rule 128   parametrosfuncion -> <empty>
Rule 129   masparametrosimplementacion -> COMMA parametrosimplementacion
Rule 130   masparametrosimplementacion -> <empty>
Rule 131   masparametrosfuncion -> COMMA parametrosfuncion
Rule 132   masparametrosfuncion -> <empty>
Rule 133   creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
Rule 134   asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
Rule 135   asignarvalorobjeto -> LPAR expresion RPAR
Rule 136   asignarvalorobjeto -> LPAR statement RPAR
Rule 137   asignarvalorobjeto -> EXCLAMACION LPAR statement RPAR
Rule 138   usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA

Terminals, with rules where they appear

AND                  : 
APPEND               : 54
ASTERISCO            : 105
AUTO                 : 20 48 49
BACKSLASH            : 
BOOL                 : 
CADENA               : 51 55 57 59 63
CHAR                 : 22 50
CHARACTER            : 50 62
CIRCUNFLEJO          : 
CLASS                : 115
COMADOBLE            : 
COMASIMPLE           : 
COMENTARIO           : 
COMMA                : 113 129 131
CORCHETEL            : 16
CORCHETER            : 16
COUT                 : 24 25
DOBLEPUNTO           : 
ELSE                 : 75 76 78 79
ENTERO               : 16 44 60
EXCLAMACION          : 87 88 89 98 137
FALSE                : 65 91
FLOAT                : 18 42
FLOTANTE             : 45 61
FOR                  : 109
IDENTIFICADOR        : 15 16 54 56 58 66 69 69 89 99 100 103 104 105 106 107 108 115 119 121 122 124 126 133 133 134 134 138 138
IF                   : 70 71 75 76
IGUAL                : 46 48 50 51 52 53 93 93 96 97 98 99 111 112 134
INT                  : 17 41
INTERROGACION        : 
LLAVEL               : 67 69 82 109 111 112 115 121 122
LLAVER               : 67 69 82 109 111 112 115 121 122
LONG                 : 19 43
LPAR                 : 23 54 67 70 71 75 76 88 109 121 122 135 136 137 138
MAS                  : 57 58 103 107 107
MAYOR                : 95 97
MENOR                : 24 24 25 25 94 96
MENOS                : 104 108 108
NEW                  : 
NULLPOINTER          : 
NUMERAL              : 
PIPE                 : 
PORCENTAJE           : 
PRINT                : 23
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTERO              : 
PUNTO                : 54 134 138
PUNTOCOMA            : 46 47 48 49 50 51 52 53 69 109 109 110 111 112 119 121 133 134 138
RETURN               : 37 121
RPAR                 : 23 54 67 70 71 75 76 88 109 121 122 135 136 137 138
SLASH                : 106
STATIC               : 
STRING               : 21 51 52 53
STRUCT               : 69
THEN                 : 
TRUE                 : 64 90
VIRGUILA             : 
VOID                 : 122
WHILE                : 67
error                : 

Nonterminals, with rules where they appear

arraydata            : 111 113
arraydeclaration     : 7
asign                : 101
asignarvalorobjeto   : 9
bloqueclase          : 115 116 117
body                 : 0
bodyblock            : 26 27 28 29 30 32 33 34 35 36 67 82 109 121 122
boolean              : 87
claseimplementacion  : 4
comparador           : 68 100
concat               : 53 57 58
condfor              : 109
condicionif          : 70 71 75 76
conllaves            : 70 75 78
creacionobjeto       : 8
definicion           : 116
else                 : 72 75 76
elseif               : 73
expresion            : 68 68 86 88 135
expresionif          : 3 28 34
expresionpos         : 70 71
for                  : 5 29 35
funcionblock         : 
funcionclaseimpl     : 6 117
id                   : 46 47 48 49 50 51 52 53 110 111 112
imprimir             : 12 30 36
initcondicion        : 83
initfor              : 109
loopfor              : 109
masparametrosfuncion : 126 127
masparametrosimplementacion : 124
numero               : 46
numerotipo           : 
parametrosfuncion    : 131 138
parametrosimplementacion : 121 122 129
sinllaves            : 71 76 79
statement            : 37 67 84 85 136 137
stringappend         : 13 52
stringdata           : 54
struct               : 11
tipo                 : 46 47 99 110 111 112 119 121 124
unaryexp             : 102
usarfuncionobjeto    : 10
valor                : 23 24 48 92 99 100 103 104 105 106 113 114 121 127 134
varblock             : 39 69 85
variable             : 1 25 26 32 39 81
while                : 2 27 33 80

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . variable
    (2) body -> . while
    (3) body -> . expresionif
    (4) body -> . claseimplementacion
    (5) body -> . for
    (6) body -> . funcionclaseimpl
    (7) body -> . arraydeclaration
    (8) body -> . creacionobjeto
    (9) body -> . asignarvalorobjeto
    (10) body -> . usarfuncionobjeto
    (11) body -> . struct
    (12) body -> . imprimir
    (13) body -> . stringappend
    (14) body -> .
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (70) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (71) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (115) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (109) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (121) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (122) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (123) funcionclaseimpl -> .
    (110) arraydeclaration -> . tipo id PUNTOCOMA
    (111) arraydeclaration -> . tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (112) arraydeclaration -> . tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
    (133) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (134) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (135) asignarvalorobjeto -> . LPAR expresion RPAR
    (136) asignarvalorobjeto -> . LPAR statement RPAR
    (137) asignarvalorobjeto -> . EXCLAMACION LPAR statement RPAR
    (138) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (69) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (54) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! reduce/reduce conflict for $end resolved using rule 14 (body -> .)
    $end            reduce using rule 14 (body -> .)
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 21
    CLASS           shift and go to state 22
    FOR             shift and go to state 24
    VOID            shift and go to state 25
    IDENTIFICADOR   shift and go to state 23
    LPAR            shift and go to state 20
    EXCLAMACION     shift and go to state 26
    STRUCT          shift and go to state 27
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

  ! $end            [ reduce using rule 123 (funcionclaseimpl -> .) ]

    body                           shift and go to state 1
    variable                       shift and go to state 2
    while                          shift and go to state 3
    expresionif                    shift and go to state 4
    claseimplementacion            shift and go to state 5
    for                            shift and go to state 6
    funcionclaseimpl               shift and go to state 7
    arraydeclaration               shift and go to state 8
    creacionobjeto                 shift and go to state 9
    asignarvalorobjeto             shift and go to state 10
    usarfuncionobjeto              shift and go to state 11
    struct                         shift and go to state 12
    imprimir                       shift and go to state 13
    stringappend                   shift and go to state 14
    tipo                           shift and go to state 15

state 1

    (0) S' -> body .



state 2

    (1) body -> variable .

    $end            reduce using rule 1 (body -> variable .)


state 3

    (2) body -> while .

    $end            reduce using rule 2 (body -> while .)


state 4

    (3) body -> expresionif .

    $end            reduce using rule 3 (body -> expresionif .)


state 5

    (4) body -> claseimplementacion .

    $end            reduce using rule 4 (body -> claseimplementacion .)


state 6

    (5) body -> for .

    $end            reduce using rule 5 (body -> for .)


state 7

    (6) body -> funcionclaseimpl .

    $end            reduce using rule 6 (body -> funcionclaseimpl .)


state 8

    (7) body -> arraydeclaration .

    $end            reduce using rule 7 (body -> arraydeclaration .)


state 9

    (8) body -> creacionobjeto .

    $end            reduce using rule 8 (body -> creacionobjeto .)


state 10

    (9) body -> asignarvalorobjeto .

    $end            reduce using rule 9 (body -> asignarvalorobjeto .)


state 11

    (10) body -> usarfuncionobjeto .

    $end            reduce using rule 10 (body -> usarfuncionobjeto .)


state 12

    (11) body -> struct .

    $end            reduce using rule 11 (body -> struct .)


state 13

    (12) body -> imprimir .

    $end            reduce using rule 12 (body -> imprimir .)


state 14

    (13) body -> stringappend .

    $end            reduce using rule 13 (body -> stringappend .)


state 15

    (46) variable -> tipo . id IGUAL numero PUNTOCOMA
    (47) variable -> tipo . id PUNTOCOMA
    (121) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (110) arraydeclaration -> tipo . id PUNTOCOMA
    (111) arraydeclaration -> tipo . id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (112) arraydeclaration -> tipo . id IGUAL LLAVEL LLAVER PUNTOCOMA
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 34

    id                             shift and go to state 33

state 16

    (48) variable -> AUTO . id IGUAL valor PUNTOCOMA
    (49) variable -> AUTO . id PUNTOCOMA
    (20) tipo -> AUTO .
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 36

  ! IDENTIFICADOR   [ reduce using rule 20 (tipo -> AUTO .) ]

    id                             shift and go to state 35

state 17

    (50) variable -> CHAR . id IGUAL CHARACTER PUNTOCOMA
    (22) tipo -> CHAR .
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 36

  ! IDENTIFICADOR   [ reduce using rule 22 (tipo -> CHAR .) ]

    id                             shift and go to state 37

state 18

    (51) variable -> STRING . id IGUAL CADENA PUNTOCOMA
    (52) variable -> STRING . id IGUAL stringappend PUNTOCOMA
    (53) variable -> STRING . id IGUAL concat PUNTOCOMA
    (21) tipo -> STRING .
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 36

  ! IDENTIFICADOR   [ reduce using rule 21 (tipo -> STRING .) ]

    id                             shift and go to state 38

state 19

    (67) while -> WHILE . LPAR statement RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 39


state 20

    (135) asignarvalorobjeto -> LPAR . expresion RPAR
    (136) asignarvalorobjeto -> LPAR . statement RPAR
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (86) statement -> . expresion
    (87) statement -> . EXCLAMACION boolean
    (88) statement -> . EXCLAMACION LPAR expresion RPAR
    (89) statement -> . EXCLAMACION IDENTIFICADOR
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 43
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    expresion                      shift and go to state 40
    statement                      shift and go to state 41
    valor                          shift and go to state 42

state 21

    (70) expresionif -> IF . LPAR condicionif RPAR conllaves expresionpos
    (71) expresionif -> IF . LPAR condicionif RPAR sinllaves expresionpos

    LPAR            shift and go to state 51


state 22

    (115) claseimplementacion -> CLASS . IDENTIFICADOR LLAVEL bloqueclase LLAVER

    IDENTIFICADOR   shift and go to state 52


state 23

    (133) creacionobjeto -> IDENTIFICADOR . IDENTIFICADOR PUNTOCOMA
    (134) asignarvalorobjeto -> IDENTIFICADOR . PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (138) usarfuncionobjeto -> IDENTIFICADOR . PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (54) stringappend -> IDENTIFICADOR . PUNTO APPEND LPAR stringdata RPAR

    IDENTIFICADOR   shift and go to state 53
    PUNTO           shift and go to state 54


state 24

    (109) for -> FOR . LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 55


state 25

    (122) funcionclaseimpl -> VOID . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER

    IDENTIFICADOR   shift and go to state 56


state 26

    (137) asignarvalorobjeto -> EXCLAMACION . LPAR statement RPAR

    LPAR            shift and go to state 57


state 27

    (69) struct -> STRUCT . IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 58


state 28

    (23) imprimir -> PRINT . LPAR valor RPAR

    LPAR            shift and go to state 59


state 29

    (24) imprimir -> COUT . MENOR MENOR valor
    (25) imprimir -> COUT . MENOR MENOR variable

    MENOR           shift and go to state 60


state 30

    (17) tipo -> INT .

    IDENTIFICADOR   reduce using rule 17 (tipo -> INT .)


state 31

    (18) tipo -> FLOAT .

    IDENTIFICADOR   reduce using rule 18 (tipo -> FLOAT .)


state 32

    (19) tipo -> LONG .

    IDENTIFICADOR   reduce using rule 19 (tipo -> LONG .)


state 33

    (46) variable -> tipo id . IGUAL numero PUNTOCOMA
    (47) variable -> tipo id . PUNTOCOMA
    (110) arraydeclaration -> tipo id . PUNTOCOMA
    (111) arraydeclaration -> tipo id . IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (112) arraydeclaration -> tipo id . IGUAL LLAVEL LLAVER PUNTOCOMA

    IGUAL           shift and go to state 61
    PUNTOCOMA       shift and go to state 62


state 34

    (121) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (15) id -> IDENTIFICADOR .
    (16) id -> IDENTIFICADOR . CORCHETEL ENTERO CORCHETER

    LPAR            shift and go to state 63
    IGUAL           reduce using rule 15 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 15 (id -> IDENTIFICADOR .)
    CORCHETEL       shift and go to state 64


state 35

    (48) variable -> AUTO id . IGUAL valor PUNTOCOMA
    (49) variable -> AUTO id . PUNTOCOMA

    IGUAL           shift and go to state 65
    PUNTOCOMA       shift and go to state 66


state 36

    (15) id -> IDENTIFICADOR .
    (16) id -> IDENTIFICADOR . CORCHETEL ENTERO CORCHETER

    IGUAL           reduce using rule 15 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 15 (id -> IDENTIFICADOR .)
    CORCHETEL       shift and go to state 64


state 37

    (50) variable -> CHAR id . IGUAL CHARACTER PUNTOCOMA

    IGUAL           shift and go to state 67


state 38

    (51) variable -> STRING id . IGUAL CADENA PUNTOCOMA
    (52) variable -> STRING id . IGUAL stringappend PUNTOCOMA
    (53) variable -> STRING id . IGUAL concat PUNTOCOMA

    IGUAL           shift and go to state 68


state 39

    (67) while -> WHILE LPAR . statement RPAR LLAVEL bodyblock LLAVER
    (86) statement -> . expresion
    (87) statement -> . EXCLAMACION boolean
    (88) statement -> . EXCLAMACION LPAR expresion RPAR
    (89) statement -> . EXCLAMACION IDENTIFICADOR
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 43
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    statement                      shift and go to state 69
    expresion                      shift and go to state 70
    valor                          shift and go to state 42

state 40

    (135) asignarvalorobjeto -> LPAR expresion . RPAR
    (68) expresion -> expresion . comparador expresion
    (86) statement -> expresion .
    (93) comparador -> . IGUAL IGUAL
    (94) comparador -> . MENOR
    (95) comparador -> . MAYOR
    (96) comparador -> . MENOR IGUAL
    (97) comparador -> . MAYOR IGUAL
    (98) comparador -> . EXCLAMACION IGUAL

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 71
    IGUAL           shift and go to state 73
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    EXCLAMACION     shift and go to state 76

  ! RPAR            [ reduce using rule 86 (statement -> expresion .) ]

    comparador                     shift and go to state 72

state 41

    (136) asignarvalorobjeto -> LPAR statement . RPAR

    RPAR            shift and go to state 77


state 42

    (92) expresion -> valor .

    RPAR            reduce using rule 92 (expresion -> valor .)
    IGUAL           reduce using rule 92 (expresion -> valor .)
    MENOR           reduce using rule 92 (expresion -> valor .)
    MAYOR           reduce using rule 92 (expresion -> valor .)
    EXCLAMACION     reduce using rule 92 (expresion -> valor .)


state 43

    (87) statement -> EXCLAMACION . boolean
    (88) statement -> EXCLAMACION . LPAR expresion RPAR
    (89) statement -> EXCLAMACION . IDENTIFICADOR
    (90) boolean -> . TRUE
    (91) boolean -> . FALSE

    LPAR            shift and go to state 79
    IDENTIFICADOR   shift and go to state 80
    TRUE            shift and go to state 81
    FALSE           shift and go to state 82

    boolean                        shift and go to state 78

state 44

    (66) valor -> IDENTIFICADOR .

    RPAR            reduce using rule 66 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 66 (valor -> IDENTIFICADOR .)
    MENOR           reduce using rule 66 (valor -> IDENTIFICADOR .)
    MAYOR           reduce using rule 66 (valor -> IDENTIFICADOR .)
    EXCLAMACION     reduce using rule 66 (valor -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 66 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 66 (valor -> IDENTIFICADOR .)
    LLAVER          reduce using rule 66 (valor -> IDENTIFICADOR .)
    AUTO            reduce using rule 66 (valor -> IDENTIFICADOR .)
    CHAR            reduce using rule 66 (valor -> IDENTIFICADOR .)
    STRING          reduce using rule 66 (valor -> IDENTIFICADOR .)
    WHILE           reduce using rule 66 (valor -> IDENTIFICADOR .)
    IF              reduce using rule 66 (valor -> IDENTIFICADOR .)
    FOR             reduce using rule 66 (valor -> IDENTIFICADOR .)
    PRINT           reduce using rule 66 (valor -> IDENTIFICADOR .)
    COUT            reduce using rule 66 (valor -> IDENTIFICADOR .)
    INT             reduce using rule 66 (valor -> IDENTIFICADOR .)
    FLOAT           reduce using rule 66 (valor -> IDENTIFICADOR .)
    LONG            reduce using rule 66 (valor -> IDENTIFICADOR .)
    RETURN          reduce using rule 66 (valor -> IDENTIFICADOR .)
    COMMA           reduce using rule 66 (valor -> IDENTIFICADOR .)


state 45

    (60) valor -> ENTERO .

    RPAR            reduce using rule 60 (valor -> ENTERO .)
    IGUAL           reduce using rule 60 (valor -> ENTERO .)
    MENOR           reduce using rule 60 (valor -> ENTERO .)
    MAYOR           reduce using rule 60 (valor -> ENTERO .)
    EXCLAMACION     reduce using rule 60 (valor -> ENTERO .)
    PUNTOCOMA       reduce using rule 60 (valor -> ENTERO .)
    $end            reduce using rule 60 (valor -> ENTERO .)
    LLAVER          reduce using rule 60 (valor -> ENTERO .)
    AUTO            reduce using rule 60 (valor -> ENTERO .)
    CHAR            reduce using rule 60 (valor -> ENTERO .)
    STRING          reduce using rule 60 (valor -> ENTERO .)
    WHILE           reduce using rule 60 (valor -> ENTERO .)
    IF              reduce using rule 60 (valor -> ENTERO .)
    FOR             reduce using rule 60 (valor -> ENTERO .)
    PRINT           reduce using rule 60 (valor -> ENTERO .)
    COUT            reduce using rule 60 (valor -> ENTERO .)
    INT             reduce using rule 60 (valor -> ENTERO .)
    FLOAT           reduce using rule 60 (valor -> ENTERO .)
    LONG            reduce using rule 60 (valor -> ENTERO .)
    RETURN          reduce using rule 60 (valor -> ENTERO .)
    COMMA           reduce using rule 60 (valor -> ENTERO .)


state 46

    (61) valor -> FLOTANTE .

    RPAR            reduce using rule 61 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 61 (valor -> FLOTANTE .)
    MENOR           reduce using rule 61 (valor -> FLOTANTE .)
    MAYOR           reduce using rule 61 (valor -> FLOTANTE .)
    EXCLAMACION     reduce using rule 61 (valor -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 61 (valor -> FLOTANTE .)
    $end            reduce using rule 61 (valor -> FLOTANTE .)
    LLAVER          reduce using rule 61 (valor -> FLOTANTE .)
    AUTO            reduce using rule 61 (valor -> FLOTANTE .)
    CHAR            reduce using rule 61 (valor -> FLOTANTE .)
    STRING          reduce using rule 61 (valor -> FLOTANTE .)
    WHILE           reduce using rule 61 (valor -> FLOTANTE .)
    IF              reduce using rule 61 (valor -> FLOTANTE .)
    FOR             reduce using rule 61 (valor -> FLOTANTE .)
    PRINT           reduce using rule 61 (valor -> FLOTANTE .)
    COUT            reduce using rule 61 (valor -> FLOTANTE .)
    INT             reduce using rule 61 (valor -> FLOTANTE .)
    FLOAT           reduce using rule 61 (valor -> FLOTANTE .)
    LONG            reduce using rule 61 (valor -> FLOTANTE .)
    RETURN          reduce using rule 61 (valor -> FLOTANTE .)
    COMMA           reduce using rule 61 (valor -> FLOTANTE .)


state 47

    (62) valor -> CHARACTER .

    RPAR            reduce using rule 62 (valor -> CHARACTER .)
    IGUAL           reduce using rule 62 (valor -> CHARACTER .)
    MENOR           reduce using rule 62 (valor -> CHARACTER .)
    MAYOR           reduce using rule 62 (valor -> CHARACTER .)
    EXCLAMACION     reduce using rule 62 (valor -> CHARACTER .)
    PUNTOCOMA       reduce using rule 62 (valor -> CHARACTER .)
    $end            reduce using rule 62 (valor -> CHARACTER .)
    LLAVER          reduce using rule 62 (valor -> CHARACTER .)
    AUTO            reduce using rule 62 (valor -> CHARACTER .)
    CHAR            reduce using rule 62 (valor -> CHARACTER .)
    STRING          reduce using rule 62 (valor -> CHARACTER .)
    WHILE           reduce using rule 62 (valor -> CHARACTER .)
    IF              reduce using rule 62 (valor -> CHARACTER .)
    FOR             reduce using rule 62 (valor -> CHARACTER .)
    PRINT           reduce using rule 62 (valor -> CHARACTER .)
    COUT            reduce using rule 62 (valor -> CHARACTER .)
    INT             reduce using rule 62 (valor -> CHARACTER .)
    FLOAT           reduce using rule 62 (valor -> CHARACTER .)
    LONG            reduce using rule 62 (valor -> CHARACTER .)
    RETURN          reduce using rule 62 (valor -> CHARACTER .)
    COMMA           reduce using rule 62 (valor -> CHARACTER .)


state 48

    (63) valor -> CADENA .

    RPAR            reduce using rule 63 (valor -> CADENA .)
    IGUAL           reduce using rule 63 (valor -> CADENA .)
    MENOR           reduce using rule 63 (valor -> CADENA .)
    MAYOR           reduce using rule 63 (valor -> CADENA .)
    EXCLAMACION     reduce using rule 63 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 63 (valor -> CADENA .)
    $end            reduce using rule 63 (valor -> CADENA .)
    LLAVER          reduce using rule 63 (valor -> CADENA .)
    AUTO            reduce using rule 63 (valor -> CADENA .)
    CHAR            reduce using rule 63 (valor -> CADENA .)
    STRING          reduce using rule 63 (valor -> CADENA .)
    WHILE           reduce using rule 63 (valor -> CADENA .)
    IF              reduce using rule 63 (valor -> CADENA .)
    FOR             reduce using rule 63 (valor -> CADENA .)
    PRINT           reduce using rule 63 (valor -> CADENA .)
    COUT            reduce using rule 63 (valor -> CADENA .)
    INT             reduce using rule 63 (valor -> CADENA .)
    FLOAT           reduce using rule 63 (valor -> CADENA .)
    LONG            reduce using rule 63 (valor -> CADENA .)
    RETURN          reduce using rule 63 (valor -> CADENA .)
    COMMA           reduce using rule 63 (valor -> CADENA .)


state 49

    (64) valor -> TRUE .

    RPAR            reduce using rule 64 (valor -> TRUE .)
    IGUAL           reduce using rule 64 (valor -> TRUE .)
    MENOR           reduce using rule 64 (valor -> TRUE .)
    MAYOR           reduce using rule 64 (valor -> TRUE .)
    EXCLAMACION     reduce using rule 64 (valor -> TRUE .)
    PUNTOCOMA       reduce using rule 64 (valor -> TRUE .)
    $end            reduce using rule 64 (valor -> TRUE .)
    LLAVER          reduce using rule 64 (valor -> TRUE .)
    AUTO            reduce using rule 64 (valor -> TRUE .)
    CHAR            reduce using rule 64 (valor -> TRUE .)
    STRING          reduce using rule 64 (valor -> TRUE .)
    WHILE           reduce using rule 64 (valor -> TRUE .)
    IF              reduce using rule 64 (valor -> TRUE .)
    FOR             reduce using rule 64 (valor -> TRUE .)
    PRINT           reduce using rule 64 (valor -> TRUE .)
    COUT            reduce using rule 64 (valor -> TRUE .)
    INT             reduce using rule 64 (valor -> TRUE .)
    FLOAT           reduce using rule 64 (valor -> TRUE .)
    LONG            reduce using rule 64 (valor -> TRUE .)
    RETURN          reduce using rule 64 (valor -> TRUE .)
    COMMA           reduce using rule 64 (valor -> TRUE .)


state 50

    (65) valor -> FALSE .

    RPAR            reduce using rule 65 (valor -> FALSE .)
    IGUAL           reduce using rule 65 (valor -> FALSE .)
    MENOR           reduce using rule 65 (valor -> FALSE .)
    MAYOR           reduce using rule 65 (valor -> FALSE .)
    EXCLAMACION     reduce using rule 65 (valor -> FALSE .)
    PUNTOCOMA       reduce using rule 65 (valor -> FALSE .)
    $end            reduce using rule 65 (valor -> FALSE .)
    LLAVER          reduce using rule 65 (valor -> FALSE .)
    AUTO            reduce using rule 65 (valor -> FALSE .)
    CHAR            reduce using rule 65 (valor -> FALSE .)
    STRING          reduce using rule 65 (valor -> FALSE .)
    WHILE           reduce using rule 65 (valor -> FALSE .)
    IF              reduce using rule 65 (valor -> FALSE .)
    FOR             reduce using rule 65 (valor -> FALSE .)
    PRINT           reduce using rule 65 (valor -> FALSE .)
    COUT            reduce using rule 65 (valor -> FALSE .)
    INT             reduce using rule 65 (valor -> FALSE .)
    FLOAT           reduce using rule 65 (valor -> FALSE .)
    LONG            reduce using rule 65 (valor -> FALSE .)
    RETURN          reduce using rule 65 (valor -> FALSE .)
    COMMA           reduce using rule 65 (valor -> FALSE .)


state 51

    (70) expresionif -> IF LPAR . condicionif RPAR conllaves expresionpos
    (71) expresionif -> IF LPAR . condicionif RPAR sinllaves expresionpos
    (83) condicionif -> . initcondicion
    (84) condicionif -> . statement
    (85) initcondicion -> . varblock statement
    (86) statement -> . expresion
    (87) statement -> . EXCLAMACION boolean
    (88) statement -> . EXCLAMACION LPAR expresion RPAR
    (89) statement -> . EXCLAMACION IDENTIFICADOR
    (39) varblock -> . varblock variable
    (40) varblock -> .
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 43
    AUTO            reduce using rule 40 (varblock -> .)
    CHAR            reduce using rule 40 (varblock -> .)
    STRING          reduce using rule 40 (varblock -> .)
    INT             reduce using rule 40 (varblock -> .)
    FLOAT           reduce using rule 40 (varblock -> .)
    LONG            reduce using rule 40 (varblock -> .)
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

  ! EXCLAMACION     [ reduce using rule 40 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 40 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 40 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 40 (varblock -> .) ]
  ! CADENA          [ reduce using rule 40 (varblock -> .) ]
  ! TRUE            [ reduce using rule 40 (varblock -> .) ]
  ! FALSE           [ reduce using rule 40 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 40 (varblock -> .) ]

    condicionif                    shift and go to state 83
    initcondicion                  shift and go to state 84
    statement                      shift and go to state 85
    varblock                       shift and go to state 86
    expresion                      shift and go to state 70
    valor                          shift and go to state 42

state 52

    (115) claseimplementacion -> CLASS IDENTIFICADOR . LLAVEL bloqueclase LLAVER

    LLAVEL          shift and go to state 87


state 53

    (133) creacionobjeto -> IDENTIFICADOR IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 88


state 54

    (134) asignarvalorobjeto -> IDENTIFICADOR PUNTO . IDENTIFICADOR IGUAL valor PUNTOCOMA
    (138) usarfuncionobjeto -> IDENTIFICADOR PUNTO . IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (54) stringappend -> IDENTIFICADOR PUNTO . APPEND LPAR stringdata RPAR

    IDENTIFICADOR   shift and go to state 89
    APPEND          shift and go to state 90


state 55

    (109) for -> FOR LPAR . initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (99) initfor -> . tipo IDENTIFICADOR IGUAL valor
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 93
    STRING          shift and go to state 94
    CHAR            shift and go to state 95

    initfor                        shift and go to state 91
    tipo                           shift and go to state 92

state 56

    (122) funcionclaseimpl -> VOID IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 96


state 57

    (137) asignarvalorobjeto -> EXCLAMACION LPAR . statement RPAR
    (86) statement -> . expresion
    (87) statement -> . EXCLAMACION boolean
    (88) statement -> . EXCLAMACION LPAR expresion RPAR
    (89) statement -> . EXCLAMACION IDENTIFICADOR
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 43
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    statement                      shift and go to state 97
    expresion                      shift and go to state 70
    valor                          shift and go to state 42

state 58

    (69) struct -> STRUCT IDENTIFICADOR . LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    LLAVEL          shift and go to state 98


state 59

    (23) imprimir -> PRINT LPAR . valor RPAR
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 99

state 60

    (24) imprimir -> COUT MENOR . MENOR valor
    (25) imprimir -> COUT MENOR . MENOR variable

    MENOR           shift and go to state 100


state 61

    (46) variable -> tipo id IGUAL . numero PUNTOCOMA
    (111) arraydeclaration -> tipo id IGUAL . LLAVEL arraydata LLAVER PUNTOCOMA
    (112) arraydeclaration -> tipo id IGUAL . LLAVEL LLAVER PUNTOCOMA
    (44) numero -> . ENTERO
    (45) numero -> . FLOTANTE

    LLAVEL          shift and go to state 102
    ENTERO          shift and go to state 103
    FLOTANTE        shift and go to state 104

    numero                         shift and go to state 101

state 62

    (47) variable -> tipo id PUNTOCOMA .
    (110) arraydeclaration -> tipo id PUNTOCOMA .

  ! reduce/reduce conflict for $end resolved using rule 47 (variable -> tipo id PUNTOCOMA .)
    $end            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)

  ! $end            [ reduce using rule 110 (arraydeclaration -> tipo id PUNTOCOMA .) ]


state 63

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR . parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (124) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (125) parametrosimplementacion -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    RPAR            reduce using rule 125 (parametrosimplementacion -> .)
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 93
    STRING          shift and go to state 94
    CHAR            shift and go to state 95

    tipo                           shift and go to state 105
    parametrosimplementacion       shift and go to state 106

state 64

    (16) id -> IDENTIFICADOR CORCHETEL . ENTERO CORCHETER

    ENTERO          shift and go to state 107


state 65

    (48) variable -> AUTO id IGUAL . valor PUNTOCOMA
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 108

state 66

    (49) variable -> AUTO id PUNTOCOMA .

    $end            reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    EXCLAMACION     reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    AUTO            reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    CHAR            reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    STRING          reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    INT             reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    FLOAT           reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    LONG            reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    ENTERO          reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    FLOTANTE        reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    CHARACTER       reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    CADENA          reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    TRUE            reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    FALSE           reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    LLAVER          reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    WHILE           reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    IF              reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    FOR             reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    PRINT           reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    COUT            reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    RETURN          reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)
    ELSE            reduce using rule 49 (variable -> AUTO id PUNTOCOMA .)


state 67

    (50) variable -> CHAR id IGUAL . CHARACTER PUNTOCOMA

    CHARACTER       shift and go to state 109


state 68

    (51) variable -> STRING id IGUAL . CADENA PUNTOCOMA
    (52) variable -> STRING id IGUAL . stringappend PUNTOCOMA
    (53) variable -> STRING id IGUAL . concat PUNTOCOMA
    (54) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (57) concat -> . concat MAS CADENA
    (58) concat -> . concat MAS IDENTIFICADOR
    (59) concat -> . CADENA

    CADENA          shift and go to state 110
    IDENTIFICADOR   shift and go to state 113

    stringappend                   shift and go to state 111
    concat                         shift and go to state 112

state 69

    (67) while -> WHILE LPAR statement . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 114


state 70

    (86) statement -> expresion .
    (68) expresion -> expresion . comparador expresion
    (93) comparador -> . IGUAL IGUAL
    (94) comparador -> . MENOR
    (95) comparador -> . MAYOR
    (96) comparador -> . MENOR IGUAL
    (97) comparador -> . MAYOR IGUAL
    (98) comparador -> . EXCLAMACION IGUAL

    RPAR            reduce using rule 86 (statement -> expresion .)
    IGUAL           shift and go to state 73
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    EXCLAMACION     shift and go to state 76

    comparador                     shift and go to state 72

state 71

    (135) asignarvalorobjeto -> LPAR expresion RPAR .

    $end            reduce using rule 135 (asignarvalorobjeto -> LPAR expresion RPAR .)


state 72

    (68) expresion -> expresion comparador . expresion
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    expresion                      shift and go to state 115
    valor                          shift and go to state 42

state 73

    (93) comparador -> IGUAL . IGUAL

    IGUAL           shift and go to state 116


state 74

    (94) comparador -> MENOR .
    (96) comparador -> MENOR . IGUAL

    ENTERO          reduce using rule 94 (comparador -> MENOR .)
    FLOTANTE        reduce using rule 94 (comparador -> MENOR .)
    CHARACTER       reduce using rule 94 (comparador -> MENOR .)
    CADENA          reduce using rule 94 (comparador -> MENOR .)
    TRUE            reduce using rule 94 (comparador -> MENOR .)
    FALSE           reduce using rule 94 (comparador -> MENOR .)
    IDENTIFICADOR   reduce using rule 94 (comparador -> MENOR .)
    IGUAL           shift and go to state 117


state 75

    (95) comparador -> MAYOR .
    (97) comparador -> MAYOR . IGUAL

    ENTERO          reduce using rule 95 (comparador -> MAYOR .)
    FLOTANTE        reduce using rule 95 (comparador -> MAYOR .)
    CHARACTER       reduce using rule 95 (comparador -> MAYOR .)
    CADENA          reduce using rule 95 (comparador -> MAYOR .)
    TRUE            reduce using rule 95 (comparador -> MAYOR .)
    FALSE           reduce using rule 95 (comparador -> MAYOR .)
    IDENTIFICADOR   reduce using rule 95 (comparador -> MAYOR .)
    IGUAL           shift and go to state 118


state 76

    (98) comparador -> EXCLAMACION . IGUAL

    IGUAL           shift and go to state 119


state 77

    (136) asignarvalorobjeto -> LPAR statement RPAR .

    $end            reduce using rule 136 (asignarvalorobjeto -> LPAR statement RPAR .)


state 78

    (87) statement -> EXCLAMACION boolean .

    RPAR            reduce using rule 87 (statement -> EXCLAMACION boolean .)


state 79

    (88) statement -> EXCLAMACION LPAR . expresion RPAR
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    expresion                      shift and go to state 120
    valor                          shift and go to state 42

state 80

    (89) statement -> EXCLAMACION IDENTIFICADOR .

    RPAR            reduce using rule 89 (statement -> EXCLAMACION IDENTIFICADOR .)


state 81

    (90) boolean -> TRUE .

    RPAR            reduce using rule 90 (boolean -> TRUE .)


state 82

    (91) boolean -> FALSE .

    RPAR            reduce using rule 91 (boolean -> FALSE .)


state 83

    (70) expresionif -> IF LPAR condicionif . RPAR conllaves expresionpos
    (71) expresionif -> IF LPAR condicionif . RPAR sinllaves expresionpos

    RPAR            shift and go to state 121


state 84

    (83) condicionif -> initcondicion .

    RPAR            reduce using rule 83 (condicionif -> initcondicion .)


state 85

    (84) condicionif -> statement .

    RPAR            reduce using rule 84 (condicionif -> statement .)


state 86

    (85) initcondicion -> varblock . statement
    (39) varblock -> varblock . variable
    (86) statement -> . expresion
    (87) statement -> . EXCLAMACION boolean
    (88) statement -> . EXCLAMACION LPAR expresion RPAR
    (89) statement -> . EXCLAMACION IDENTIFICADOR
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 43
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    statement                      shift and go to state 122
    variable                       shift and go to state 123
    expresion                      shift and go to state 70
    tipo                           shift and go to state 124
    valor                          shift and go to state 42

state 87

    (115) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL . bloqueclase LLAVER
    (116) bloqueclase -> . bloqueclase definicion
    (117) bloqueclase -> . bloqueclase funcionclaseimpl
    (118) bloqueclase -> .

    LLAVER          reduce using rule 118 (bloqueclase -> .)
    VOID            reduce using rule 118 (bloqueclase -> .)
    INT             reduce using rule 118 (bloqueclase -> .)
    FLOAT           reduce using rule 118 (bloqueclase -> .)
    LONG            reduce using rule 118 (bloqueclase -> .)
    AUTO            reduce using rule 118 (bloqueclase -> .)
    STRING          reduce using rule 118 (bloqueclase -> .)
    CHAR            reduce using rule 118 (bloqueclase -> .)

    bloqueclase                    shift and go to state 125

state 88

    (133) creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 133 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)


state 89

    (134) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR . IGUAL valor PUNTOCOMA
    (138) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR . LPAR parametrosfuncion RPAR PUNTOCOMA

    IGUAL           shift and go to state 126
    LPAR            shift and go to state 127


state 90

    (54) stringappend -> IDENTIFICADOR PUNTO APPEND . LPAR stringdata RPAR

    LPAR            shift and go to state 128


state 91

    (109) for -> FOR LPAR initfor . PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER

    PUNTOCOMA       shift and go to state 129


state 92

    (99) initfor -> tipo . IDENTIFICADOR IGUAL valor

    IDENTIFICADOR   shift and go to state 130


state 93

    (20) tipo -> AUTO .

    IDENTIFICADOR   reduce using rule 20 (tipo -> AUTO .)


state 94

    (21) tipo -> STRING .

    IDENTIFICADOR   reduce using rule 21 (tipo -> STRING .)


state 95

    (22) tipo -> CHAR .

    IDENTIFICADOR   reduce using rule 22 (tipo -> CHAR .)


state 96

    (122) funcionclaseimpl -> VOID IDENTIFICADOR LPAR . parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (124) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (125) parametrosimplementacion -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    RPAR            reduce using rule 125 (parametrosimplementacion -> .)
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 93
    STRING          shift and go to state 94
    CHAR            shift and go to state 95

    parametrosimplementacion       shift and go to state 131
    tipo                           shift and go to state 105

state 97

    (137) asignarvalorobjeto -> EXCLAMACION LPAR statement . RPAR

    RPAR            shift and go to state 132


state 98

    (69) struct -> STRUCT IDENTIFICADOR LLAVEL . varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (39) varblock -> . varblock variable
    (40) varblock -> .

    LLAVER          reduce using rule 40 (varblock -> .)
    AUTO            reduce using rule 40 (varblock -> .)
    CHAR            reduce using rule 40 (varblock -> .)
    STRING          reduce using rule 40 (varblock -> .)
    INT             reduce using rule 40 (varblock -> .)
    FLOAT           reduce using rule 40 (varblock -> .)
    LONG            reduce using rule 40 (varblock -> .)

    varblock                       shift and go to state 133

state 99

    (23) imprimir -> PRINT LPAR valor . RPAR

    RPAR            shift and go to state 134


state 100

    (24) imprimir -> COUT MENOR MENOR . valor
    (25) imprimir -> COUT MENOR MENOR . variable
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    valor                          shift and go to state 135
    variable                       shift and go to state 136
    tipo                           shift and go to state 124

state 101

    (46) variable -> tipo id IGUAL numero . PUNTOCOMA

    PUNTOCOMA       shift and go to state 137


state 102

    (111) arraydeclaration -> tipo id IGUAL LLAVEL . arraydata LLAVER PUNTOCOMA
    (112) arraydeclaration -> tipo id IGUAL LLAVEL . LLAVER PUNTOCOMA
    (113) arraydata -> . arraydata COMMA valor
    (114) arraydata -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    LLAVER          shift and go to state 139
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    arraydata                      shift and go to state 138
    valor                          shift and go to state 140

state 103

    (44) numero -> ENTERO .

    PUNTOCOMA       reduce using rule 44 (numero -> ENTERO .)


state 104

    (45) numero -> FLOTANTE .

    PUNTOCOMA       reduce using rule 45 (numero -> FLOTANTE .)


state 105

    (124) parametrosimplementacion -> tipo . IDENTIFICADOR masparametrosimplementacion

    IDENTIFICADOR   shift and go to state 141


state 106

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion . RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER

    RPAR            shift and go to state 142


state 107

    (16) id -> IDENTIFICADOR CORCHETEL ENTERO . CORCHETER

    CORCHETER       shift and go to state 143


state 108

    (48) variable -> AUTO id IGUAL valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 144


state 109

    (50) variable -> CHAR id IGUAL CHARACTER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 145


state 110

    (51) variable -> STRING id IGUAL CADENA . PUNTOCOMA
    (59) concat -> CADENA .

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
    PUNTOCOMA       shift and go to state 146
    MAS             reduce using rule 59 (concat -> CADENA .)

  ! PUNTOCOMA       [ reduce using rule 59 (concat -> CADENA .) ]


state 111

    (52) variable -> STRING id IGUAL stringappend . PUNTOCOMA

    PUNTOCOMA       shift and go to state 147


state 112

    (53) variable -> STRING id IGUAL concat . PUNTOCOMA
    (57) concat -> concat . MAS CADENA
    (58) concat -> concat . MAS IDENTIFICADOR

    PUNTOCOMA       shift and go to state 148
    MAS             shift and go to state 149


state 113

    (54) stringappend -> IDENTIFICADOR . PUNTO APPEND LPAR stringdata RPAR

    PUNTO           shift and go to state 150


state 114

    (67) while -> WHILE LPAR statement RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 151


state 115

    (68) expresion -> expresion comparador expresion .
    (68) expresion -> expresion . comparador expresion
    (93) comparador -> . IGUAL IGUAL
    (94) comparador -> . MENOR
    (95) comparador -> . MAYOR
    (96) comparador -> . MENOR IGUAL
    (97) comparador -> . MAYOR IGUAL
    (98) comparador -> . EXCLAMACION IGUAL

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for EXCLAMACION resolved as shift
    RPAR            reduce using rule 68 (expresion -> expresion comparador expresion .)
    IGUAL           shift and go to state 73
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    EXCLAMACION     shift and go to state 76

  ! IGUAL           [ reduce using rule 68 (expresion -> expresion comparador expresion .) ]
  ! MENOR           [ reduce using rule 68 (expresion -> expresion comparador expresion .) ]
  ! MAYOR           [ reduce using rule 68 (expresion -> expresion comparador expresion .) ]
  ! EXCLAMACION     [ reduce using rule 68 (expresion -> expresion comparador expresion .) ]

    comparador                     shift and go to state 72

state 116

    (93) comparador -> IGUAL IGUAL .

    ENTERO          reduce using rule 93 (comparador -> IGUAL IGUAL .)
    FLOTANTE        reduce using rule 93 (comparador -> IGUAL IGUAL .)
    CHARACTER       reduce using rule 93 (comparador -> IGUAL IGUAL .)
    CADENA          reduce using rule 93 (comparador -> IGUAL IGUAL .)
    TRUE            reduce using rule 93 (comparador -> IGUAL IGUAL .)
    FALSE           reduce using rule 93 (comparador -> IGUAL IGUAL .)
    IDENTIFICADOR   reduce using rule 93 (comparador -> IGUAL IGUAL .)


state 117

    (96) comparador -> MENOR IGUAL .

    ENTERO          reduce using rule 96 (comparador -> MENOR IGUAL .)
    FLOTANTE        reduce using rule 96 (comparador -> MENOR IGUAL .)
    CHARACTER       reduce using rule 96 (comparador -> MENOR IGUAL .)
    CADENA          reduce using rule 96 (comparador -> MENOR IGUAL .)
    TRUE            reduce using rule 96 (comparador -> MENOR IGUAL .)
    FALSE           reduce using rule 96 (comparador -> MENOR IGUAL .)
    IDENTIFICADOR   reduce using rule 96 (comparador -> MENOR IGUAL .)


state 118

    (97) comparador -> MAYOR IGUAL .

    ENTERO          reduce using rule 97 (comparador -> MAYOR IGUAL .)
    FLOTANTE        reduce using rule 97 (comparador -> MAYOR IGUAL .)
    CHARACTER       reduce using rule 97 (comparador -> MAYOR IGUAL .)
    CADENA          reduce using rule 97 (comparador -> MAYOR IGUAL .)
    TRUE            reduce using rule 97 (comparador -> MAYOR IGUAL .)
    FALSE           reduce using rule 97 (comparador -> MAYOR IGUAL .)
    IDENTIFICADOR   reduce using rule 97 (comparador -> MAYOR IGUAL .)


state 119

    (98) comparador -> EXCLAMACION IGUAL .

    ENTERO          reduce using rule 98 (comparador -> EXCLAMACION IGUAL .)
    FLOTANTE        reduce using rule 98 (comparador -> EXCLAMACION IGUAL .)
    CHARACTER       reduce using rule 98 (comparador -> EXCLAMACION IGUAL .)
    CADENA          reduce using rule 98 (comparador -> EXCLAMACION IGUAL .)
    TRUE            reduce using rule 98 (comparador -> EXCLAMACION IGUAL .)
    FALSE           reduce using rule 98 (comparador -> EXCLAMACION IGUAL .)
    IDENTIFICADOR   reduce using rule 98 (comparador -> EXCLAMACION IGUAL .)


state 120

    (88) statement -> EXCLAMACION LPAR expresion . RPAR
    (68) expresion -> expresion . comparador expresion
    (93) comparador -> . IGUAL IGUAL
    (94) comparador -> . MENOR
    (95) comparador -> . MAYOR
    (96) comparador -> . MENOR IGUAL
    (97) comparador -> . MAYOR IGUAL
    (98) comparador -> . EXCLAMACION IGUAL

    RPAR            shift and go to state 152
    IGUAL           shift and go to state 73
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    EXCLAMACION     shift and go to state 76

    comparador                     shift and go to state 72

state 121

    (70) expresionif -> IF LPAR condicionif RPAR . conllaves expresionpos
    (71) expresionif -> IF LPAR condicionif RPAR . sinllaves expresionpos
    (82) conllaves -> . LLAVEL bodyblock LLAVER
    (80) sinllaves -> . while
    (81) sinllaves -> . variable
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVEL          shift and go to state 155
    WHILE           shift and go to state 19
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 153
    sinllaves                      shift and go to state 154
    while                          shift and go to state 156
    variable                       shift and go to state 157
    tipo                           shift and go to state 124

state 122

    (85) initcondicion -> varblock statement .

    RPAR            reduce using rule 85 (initcondicion -> varblock statement .)


state 123

    (39) varblock -> varblock variable .

    EXCLAMACION     reduce using rule 39 (varblock -> varblock variable .)
    AUTO            reduce using rule 39 (varblock -> varblock variable .)
    CHAR            reduce using rule 39 (varblock -> varblock variable .)
    STRING          reduce using rule 39 (varblock -> varblock variable .)
    INT             reduce using rule 39 (varblock -> varblock variable .)
    FLOAT           reduce using rule 39 (varblock -> varblock variable .)
    LONG            reduce using rule 39 (varblock -> varblock variable .)
    ENTERO          reduce using rule 39 (varblock -> varblock variable .)
    FLOTANTE        reduce using rule 39 (varblock -> varblock variable .)
    CHARACTER       reduce using rule 39 (varblock -> varblock variable .)
    CADENA          reduce using rule 39 (varblock -> varblock variable .)
    TRUE            reduce using rule 39 (varblock -> varblock variable .)
    FALSE           reduce using rule 39 (varblock -> varblock variable .)
    IDENTIFICADOR   reduce using rule 39 (varblock -> varblock variable .)
    LLAVER          reduce using rule 39 (varblock -> varblock variable .)


state 124

    (46) variable -> tipo . id IGUAL numero PUNTOCOMA
    (47) variable -> tipo . id PUNTOCOMA
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 36

    id                             shift and go to state 158

state 125

    (115) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase . LLAVER
    (116) bloqueclase -> bloqueclase . definicion
    (117) bloqueclase -> bloqueclase . funcionclaseimpl
    (119) definicion -> . tipo IDENTIFICADOR PUNTOCOMA
    (120) definicion -> .
    (121) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (122) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (123) funcionclaseimpl -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 120 (definicion -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 120 (definicion -> .)
  ! reduce/reduce conflict for LONG resolved using rule 120 (definicion -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 120 (definicion -> .)
  ! reduce/reduce conflict for STRING resolved using rule 120 (definicion -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 120 (definicion -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    LLAVER          shift and go to state 159
    VOID            shift and go to state 25
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 93
    STRING          shift and go to state 94
    CHAR            shift and go to state 95

  ! LLAVER          [ reduce using rule 120 (definicion -> .) ]
  ! VOID            [ reduce using rule 120 (definicion -> .) ]
  ! INT             [ reduce using rule 120 (definicion -> .) ]
  ! FLOAT           [ reduce using rule 120 (definicion -> .) ]
  ! LONG            [ reduce using rule 120 (definicion -> .) ]
  ! AUTO            [ reduce using rule 120 (definicion -> .) ]
  ! STRING          [ reduce using rule 120 (definicion -> .) ]
  ! CHAR            [ reduce using rule 120 (definicion -> .) ]
  ! LLAVER          [ reduce using rule 123 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 123 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 123 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 123 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 123 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 123 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 123 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 123 (funcionclaseimpl -> .) ]

    definicion                     shift and go to state 160
    funcionclaseimpl               shift and go to state 161
    tipo                           shift and go to state 162

state 126

    (134) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL . valor PUNTOCOMA
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 163

state 127

    (138) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR . parametrosfuncion RPAR PUNTOCOMA
    (126) parametrosfuncion -> . IDENTIFICADOR masparametrosfuncion
    (127) parametrosfuncion -> . valor masparametrosfuncion
    (128) parametrosfuncion -> .
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 164
    RPAR            reduce using rule 128 (parametrosfuncion -> .)
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    parametrosfuncion              shift and go to state 165
    valor                          shift and go to state 166

state 128

    (54) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR . stringdata RPAR
    (55) stringdata -> . CADENA
    (56) stringdata -> . IDENTIFICADOR

    CADENA          shift and go to state 169
    IDENTIFICADOR   shift and go to state 167

    stringdata                     shift and go to state 168

state 129

    (109) for -> FOR LPAR initfor PUNTOCOMA . condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (100) condfor -> . IDENTIFICADOR comparador valor

    IDENTIFICADOR   shift and go to state 171

    condfor                        shift and go to state 170

state 130

    (99) initfor -> tipo IDENTIFICADOR . IGUAL valor

    IGUAL           shift and go to state 172


state 131

    (122) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 173


state 132

    (137) asignarvalorobjeto -> EXCLAMACION LPAR statement RPAR .

    $end            reduce using rule 137 (asignarvalorobjeto -> EXCLAMACION LPAR statement RPAR .)


state 133

    (69) struct -> STRUCT IDENTIFICADOR LLAVEL varblock . LLAVER IDENTIFICADOR PUNTOCOMA
    (39) varblock -> varblock . variable
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVER          shift and go to state 174
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    variable                       shift and go to state 123
    tipo                           shift and go to state 124

state 134

    (23) imprimir -> PRINT LPAR valor RPAR .

    $end            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    LLAVER          reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    AUTO            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    CHAR            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    STRING          reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    WHILE           reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    IF              reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    FOR             reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    PRINT           reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    COUT            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    INT             reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    FLOAT           reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    LONG            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    RETURN          reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)


state 135

    (24) imprimir -> COUT MENOR MENOR valor .

    $end            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    LLAVER          reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    AUTO            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    CHAR            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    STRING          reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    WHILE           reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    IF              reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    FOR             reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    PRINT           reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    COUT            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    INT             reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    FLOAT           reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    LONG            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    RETURN          reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)


state 136

    (25) imprimir -> COUT MENOR MENOR variable .

    $end            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    LLAVER          reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    AUTO            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    CHAR            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    STRING          reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    WHILE           reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    IF              reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    FOR             reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    PRINT           reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    COUT            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    INT             reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    FLOAT           reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    LONG            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    RETURN          reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)


state 137

    (46) variable -> tipo id IGUAL numero PUNTOCOMA .

    $end            reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    EXCLAMACION     reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    AUTO            reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    CHAR            reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    STRING          reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    INT             reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FLOAT           reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    LONG            reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    ENTERO          reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FLOTANTE        reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    CHARACTER       reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    CADENA          reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    TRUE            reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FALSE           reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    LLAVER          reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    WHILE           reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    IF              reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FOR             reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    PRINT           reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    COUT            reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    RETURN          reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    ELSE            reduce using rule 46 (variable -> tipo id IGUAL numero PUNTOCOMA .)


state 138

    (111) arraydeclaration -> tipo id IGUAL LLAVEL arraydata . LLAVER PUNTOCOMA
    (113) arraydata -> arraydata . COMMA valor

    LLAVER          shift and go to state 175
    COMMA           shift and go to state 176


state 139

    (112) arraydeclaration -> tipo id IGUAL LLAVEL LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 177


state 140

    (114) arraydata -> valor .

    LLAVER          reduce using rule 114 (arraydata -> valor .)
    COMMA           reduce using rule 114 (arraydata -> valor .)


state 141

    (124) parametrosimplementacion -> tipo IDENTIFICADOR . masparametrosimplementacion
    (129) masparametrosimplementacion -> . COMMA parametrosimplementacion
    (130) masparametrosimplementacion -> .

    COMMA           shift and go to state 179
    RPAR            reduce using rule 130 (masparametrosimplementacion -> .)

    masparametrosimplementacion    shift and go to state 178

state 142

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR . LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER

    LLAVEL          shift and go to state 180


state 143

    (16) id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .

    IGUAL           reduce using rule 16 (id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .)
    PUNTOCOMA       reduce using rule 16 (id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .)


state 144

    (48) variable -> AUTO id IGUAL valor PUNTOCOMA .

    $end            reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    EXCLAMACION     reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    AUTO            reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    CHAR            reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    STRING          reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    INT             reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FLOAT           reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    LONG            reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    ENTERO          reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    CHARACTER       reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    CADENA          reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    TRUE            reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FALSE           reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    LLAVER          reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    WHILE           reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    IF              reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FOR             reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    PRINT           reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    COUT            reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    RETURN          reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    ELSE            reduce using rule 48 (variable -> AUTO id IGUAL valor PUNTOCOMA .)


state 145

    (50) variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .

    $end            reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    AUTO            reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CHAR            reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    STRING          reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    INT             reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FLOAT           reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    LONG            reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    ENTERO          reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FLOTANTE        reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CHARACTER       reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CADENA          reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    TRUE            reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FALSE           reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    LLAVER          reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    WHILE           reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    IF              reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FOR             reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    PRINT           reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    COUT            reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    RETURN          reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    ELSE            reduce using rule 50 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)


state 146

    (51) variable -> STRING id IGUAL CADENA PUNTOCOMA .

    $end            reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    EXCLAMACION     reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    AUTO            reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    CHAR            reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    STRING          reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    INT             reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FLOAT           reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    LONG            reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    ENTERO          reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FLOTANTE        reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    CHARACTER       reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    CADENA          reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    TRUE            reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FALSE           reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    LLAVER          reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    WHILE           reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    IF              reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FOR             reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    PRINT           reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    COUT            reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    RETURN          reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    ELSE            reduce using rule 51 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)


state 147

    (52) variable -> STRING id IGUAL stringappend PUNTOCOMA .

    $end            reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    EXCLAMACION     reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    AUTO            reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    CHAR            reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    STRING          reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    INT             reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FLOAT           reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    LONG            reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    ENTERO          reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FLOTANTE        reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    CHARACTER       reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    CADENA          reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    TRUE            reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FALSE           reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    LLAVER          reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    WHILE           reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    IF              reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FOR             reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    PRINT           reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    COUT            reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    RETURN          reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    ELSE            reduce using rule 52 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)


state 148

    (53) variable -> STRING id IGUAL concat PUNTOCOMA .

    $end            reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    EXCLAMACION     reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    AUTO            reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    CHAR            reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    STRING          reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    INT             reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FLOAT           reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    LONG            reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    ENTERO          reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FLOTANTE        reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    CHARACTER       reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    CADENA          reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    TRUE            reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FALSE           reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    LLAVER          reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    WHILE           reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    IF              reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FOR             reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    PRINT           reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    COUT            reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    RETURN          reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    ELSE            reduce using rule 53 (variable -> STRING id IGUAL concat PUNTOCOMA .)


state 149

    (57) concat -> concat MAS . CADENA
    (58) concat -> concat MAS . IDENTIFICADOR

    CADENA          shift and go to state 181
    IDENTIFICADOR   shift and go to state 182


state 150

    (54) stringappend -> IDENTIFICADOR PUNTO . APPEND LPAR stringdata RPAR

    APPEND          shift and go to state 90


state 151

    (67) while -> WHILE LPAR statement RPAR LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock for
    (30) bodyblock -> . bodyblock imprimir
    (31) bodyblock -> .

    LLAVER          reduce using rule 31 (bodyblock -> .)
    AUTO            reduce using rule 31 (bodyblock -> .)
    CHAR            reduce using rule 31 (bodyblock -> .)
    STRING          reduce using rule 31 (bodyblock -> .)
    WHILE           reduce using rule 31 (bodyblock -> .)
    IF              reduce using rule 31 (bodyblock -> .)
    FOR             reduce using rule 31 (bodyblock -> .)
    PRINT           reduce using rule 31 (bodyblock -> .)
    COUT            reduce using rule 31 (bodyblock -> .)
    INT             reduce using rule 31 (bodyblock -> .)
    FLOAT           reduce using rule 31 (bodyblock -> .)
    LONG            reduce using rule 31 (bodyblock -> .)

    bodyblock                      shift and go to state 183

state 152

    (88) statement -> EXCLAMACION LPAR expresion RPAR .

    RPAR            reduce using rule 88 (statement -> EXCLAMACION LPAR expresion RPAR .)


state 153

    (70) expresionif -> IF LPAR condicionif RPAR conllaves . expresionpos
    (72) expresionpos -> . else
    (73) expresionpos -> . elseif
    (74) expresionpos -> .
    (78) else -> . ELSE conllaves
    (79) else -> . ELSE sinllaves
    (75) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (76) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (77) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for STRING resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for IF resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for COUT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 74 (expresionpos -> .)
    $end            reduce using rule 74 (expresionpos -> .)
    LLAVER          reduce using rule 74 (expresionpos -> .)
    AUTO            reduce using rule 74 (expresionpos -> .)
    CHAR            reduce using rule 74 (expresionpos -> .)
    STRING          reduce using rule 74 (expresionpos -> .)
    WHILE           reduce using rule 74 (expresionpos -> .)
    IF              reduce using rule 74 (expresionpos -> .)
    FOR             reduce using rule 74 (expresionpos -> .)
    PRINT           reduce using rule 74 (expresionpos -> .)
    COUT            reduce using rule 74 (expresionpos -> .)
    INT             reduce using rule 74 (expresionpos -> .)
    FLOAT           reduce using rule 74 (expresionpos -> .)
    LONG            reduce using rule 74 (expresionpos -> .)
    RETURN          reduce using rule 74 (expresionpos -> .)
    ELSE            shift and go to state 187

  ! $end            [ reduce using rule 77 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 77 (elseif -> .) ]
  ! AUTO            [ reduce using rule 77 (elseif -> .) ]
  ! CHAR            [ reduce using rule 77 (elseif -> .) ]
  ! STRING          [ reduce using rule 77 (elseif -> .) ]
  ! WHILE           [ reduce using rule 77 (elseif -> .) ]
  ! IF              [ reduce using rule 77 (elseif -> .) ]
  ! FOR             [ reduce using rule 77 (elseif -> .) ]
  ! PRINT           [ reduce using rule 77 (elseif -> .) ]
  ! COUT            [ reduce using rule 77 (elseif -> .) ]
  ! INT             [ reduce using rule 77 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 77 (elseif -> .) ]
  ! LONG            [ reduce using rule 77 (elseif -> .) ]
  ! RETURN          [ reduce using rule 77 (elseif -> .) ]

    expresionpos                   shift and go to state 184
    else                           shift and go to state 185
    elseif                         shift and go to state 186

state 154

    (71) expresionif -> IF LPAR condicionif RPAR sinllaves . expresionpos
    (72) expresionpos -> . else
    (73) expresionpos -> . elseif
    (74) expresionpos -> .
    (78) else -> . ELSE conllaves
    (79) else -> . ELSE sinllaves
    (75) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (76) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (77) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for STRING resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for IF resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for FOR resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for COUT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 74 (expresionpos -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 74 (expresionpos -> .)
    $end            reduce using rule 74 (expresionpos -> .)
    LLAVER          reduce using rule 74 (expresionpos -> .)
    AUTO            reduce using rule 74 (expresionpos -> .)
    CHAR            reduce using rule 74 (expresionpos -> .)
    STRING          reduce using rule 74 (expresionpos -> .)
    WHILE           reduce using rule 74 (expresionpos -> .)
    IF              reduce using rule 74 (expresionpos -> .)
    FOR             reduce using rule 74 (expresionpos -> .)
    PRINT           reduce using rule 74 (expresionpos -> .)
    COUT            reduce using rule 74 (expresionpos -> .)
    INT             reduce using rule 74 (expresionpos -> .)
    FLOAT           reduce using rule 74 (expresionpos -> .)
    LONG            reduce using rule 74 (expresionpos -> .)
    RETURN          reduce using rule 74 (expresionpos -> .)
    ELSE            shift and go to state 187

  ! $end            [ reduce using rule 77 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 77 (elseif -> .) ]
  ! AUTO            [ reduce using rule 77 (elseif -> .) ]
  ! CHAR            [ reduce using rule 77 (elseif -> .) ]
  ! STRING          [ reduce using rule 77 (elseif -> .) ]
  ! WHILE           [ reduce using rule 77 (elseif -> .) ]
  ! IF              [ reduce using rule 77 (elseif -> .) ]
  ! FOR             [ reduce using rule 77 (elseif -> .) ]
  ! PRINT           [ reduce using rule 77 (elseif -> .) ]
  ! COUT            [ reduce using rule 77 (elseif -> .) ]
  ! INT             [ reduce using rule 77 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 77 (elseif -> .) ]
  ! LONG            [ reduce using rule 77 (elseif -> .) ]
  ! RETURN          [ reduce using rule 77 (elseif -> .) ]

    expresionpos                   shift and go to state 188
    else                           shift and go to state 185
    elseif                         shift and go to state 186

state 155

    (82) conllaves -> LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock for
    (30) bodyblock -> . bodyblock imprimir
    (31) bodyblock -> .

    LLAVER          reduce using rule 31 (bodyblock -> .)
    AUTO            reduce using rule 31 (bodyblock -> .)
    CHAR            reduce using rule 31 (bodyblock -> .)
    STRING          reduce using rule 31 (bodyblock -> .)
    WHILE           reduce using rule 31 (bodyblock -> .)
    IF              reduce using rule 31 (bodyblock -> .)
    FOR             reduce using rule 31 (bodyblock -> .)
    PRINT           reduce using rule 31 (bodyblock -> .)
    COUT            reduce using rule 31 (bodyblock -> .)
    INT             reduce using rule 31 (bodyblock -> .)
    FLOAT           reduce using rule 31 (bodyblock -> .)
    LONG            reduce using rule 31 (bodyblock -> .)

    bodyblock                      shift and go to state 189

state 156

    (80) sinllaves -> while .

    ELSE            reduce using rule 80 (sinllaves -> while .)
    $end            reduce using rule 80 (sinllaves -> while .)
    LLAVER          reduce using rule 80 (sinllaves -> while .)
    AUTO            reduce using rule 80 (sinllaves -> while .)
    CHAR            reduce using rule 80 (sinllaves -> while .)
    STRING          reduce using rule 80 (sinllaves -> while .)
    WHILE           reduce using rule 80 (sinllaves -> while .)
    IF              reduce using rule 80 (sinllaves -> while .)
    FOR             reduce using rule 80 (sinllaves -> while .)
    PRINT           reduce using rule 80 (sinllaves -> while .)
    COUT            reduce using rule 80 (sinllaves -> while .)
    INT             reduce using rule 80 (sinllaves -> while .)
    FLOAT           reduce using rule 80 (sinllaves -> while .)
    LONG            reduce using rule 80 (sinllaves -> while .)
    RETURN          reduce using rule 80 (sinllaves -> while .)


state 157

    (81) sinllaves -> variable .

    ELSE            reduce using rule 81 (sinllaves -> variable .)
    $end            reduce using rule 81 (sinllaves -> variable .)
    LLAVER          reduce using rule 81 (sinllaves -> variable .)
    AUTO            reduce using rule 81 (sinllaves -> variable .)
    CHAR            reduce using rule 81 (sinllaves -> variable .)
    STRING          reduce using rule 81 (sinllaves -> variable .)
    WHILE           reduce using rule 81 (sinllaves -> variable .)
    IF              reduce using rule 81 (sinllaves -> variable .)
    FOR             reduce using rule 81 (sinllaves -> variable .)
    PRINT           reduce using rule 81 (sinllaves -> variable .)
    COUT            reduce using rule 81 (sinllaves -> variable .)
    INT             reduce using rule 81 (sinllaves -> variable .)
    FLOAT           reduce using rule 81 (sinllaves -> variable .)
    LONG            reduce using rule 81 (sinllaves -> variable .)
    RETURN          reduce using rule 81 (sinllaves -> variable .)


state 158

    (46) variable -> tipo id . IGUAL numero PUNTOCOMA
    (47) variable -> tipo id . PUNTOCOMA

    IGUAL           shift and go to state 190
    PUNTOCOMA       shift and go to state 191


state 159

    (115) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .

    $end            reduce using rule 115 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)


state 160

    (116) bloqueclase -> bloqueclase definicion .

    LLAVER          reduce using rule 116 (bloqueclase -> bloqueclase definicion .)
    VOID            reduce using rule 116 (bloqueclase -> bloqueclase definicion .)
    INT             reduce using rule 116 (bloqueclase -> bloqueclase definicion .)
    FLOAT           reduce using rule 116 (bloqueclase -> bloqueclase definicion .)
    LONG            reduce using rule 116 (bloqueclase -> bloqueclase definicion .)
    AUTO            reduce using rule 116 (bloqueclase -> bloqueclase definicion .)
    STRING          reduce using rule 116 (bloqueclase -> bloqueclase definicion .)
    CHAR            reduce using rule 116 (bloqueclase -> bloqueclase definicion .)


state 161

    (117) bloqueclase -> bloqueclase funcionclaseimpl .

    LLAVER          reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)
    VOID            reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)
    INT             reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)
    FLOAT           reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)
    LONG            reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)
    AUTO            reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)
    STRING          reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)
    CHAR            reduce using rule 117 (bloqueclase -> bloqueclase funcionclaseimpl .)


state 162

    (119) definicion -> tipo . IDENTIFICADOR PUNTOCOMA
    (121) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER

    IDENTIFICADOR   shift and go to state 192


state 163

    (134) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 193


state 164

    (126) parametrosfuncion -> IDENTIFICADOR . masparametrosfuncion
    (66) valor -> IDENTIFICADOR .
    (131) masparametrosfuncion -> . COMMA parametrosfuncion
    (132) masparametrosfuncion -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAR resolved using rule 66 (valor -> IDENTIFICADOR .)
    RPAR            reduce using rule 66 (valor -> IDENTIFICADOR .)
    COMMA           shift and go to state 195

  ! COMMA           [ reduce using rule 66 (valor -> IDENTIFICADOR .) ]
  ! RPAR            [ reduce using rule 132 (masparametrosfuncion -> .) ]

    masparametrosfuncion           shift and go to state 194

state 165

    (138) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion . RPAR PUNTOCOMA

    RPAR            shift and go to state 196


state 166

    (127) parametrosfuncion -> valor . masparametrosfuncion
    (131) masparametrosfuncion -> . COMMA parametrosfuncion
    (132) masparametrosfuncion -> .

    COMMA           shift and go to state 195
    RPAR            reduce using rule 132 (masparametrosfuncion -> .)

    masparametrosfuncion           shift and go to state 197

state 167

    (56) stringdata -> IDENTIFICADOR .

    RPAR            reduce using rule 56 (stringdata -> IDENTIFICADOR .)


state 168

    (54) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata . RPAR

    RPAR            shift and go to state 198


state 169

    (55) stringdata -> CADENA .

    RPAR            reduce using rule 55 (stringdata -> CADENA .)


state 170

    (109) for -> FOR LPAR initfor PUNTOCOMA condfor . PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER

    PUNTOCOMA       shift and go to state 199


state 171

    (100) condfor -> IDENTIFICADOR . comparador valor
    (93) comparador -> . IGUAL IGUAL
    (94) comparador -> . MENOR
    (95) comparador -> . MAYOR
    (96) comparador -> . MENOR IGUAL
    (97) comparador -> . MAYOR IGUAL
    (98) comparador -> . EXCLAMACION IGUAL

    IGUAL           shift and go to state 73
    MENOR           shift and go to state 74
    MAYOR           shift and go to state 75
    EXCLAMACION     shift and go to state 76

    comparador                     shift and go to state 200

state 172

    (99) initfor -> tipo IDENTIFICADOR IGUAL . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 201

state 173

    (122) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 202


state 174

    (69) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 203


state 175

    (111) arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 204


state 176

    (113) arraydata -> arraydata COMMA . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 205

state 177

    (112) arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .

    $end            reduce using rule 112 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)


state 178

    (124) parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion .

    RPAR            reduce using rule 124 (parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion .)


state 179

    (129) masparametrosimplementacion -> COMMA . parametrosimplementacion
    (124) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (125) parametrosimplementacion -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    RPAR            reduce using rule 125 (parametrosimplementacion -> .)
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 93
    STRING          shift and go to state 94
    CHAR            shift and go to state 95

    parametrosimplementacion       shift and go to state 206
    tipo                           shift and go to state 105

state 180

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL . bodyblock RETURN valor PUNTOCOMA LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock for
    (30) bodyblock -> . bodyblock imprimir
    (31) bodyblock -> .

    RETURN          reduce using rule 31 (bodyblock -> .)
    AUTO            reduce using rule 31 (bodyblock -> .)
    CHAR            reduce using rule 31 (bodyblock -> .)
    STRING          reduce using rule 31 (bodyblock -> .)
    WHILE           reduce using rule 31 (bodyblock -> .)
    IF              reduce using rule 31 (bodyblock -> .)
    FOR             reduce using rule 31 (bodyblock -> .)
    PRINT           reduce using rule 31 (bodyblock -> .)
    COUT            reduce using rule 31 (bodyblock -> .)
    INT             reduce using rule 31 (bodyblock -> .)
    FLOAT           reduce using rule 31 (bodyblock -> .)
    LONG            reduce using rule 31 (bodyblock -> .)

    bodyblock                      shift and go to state 207

state 181

    (57) concat -> concat MAS CADENA .

    PUNTOCOMA       reduce using rule 57 (concat -> concat MAS CADENA .)
    MAS             reduce using rule 57 (concat -> concat MAS CADENA .)


state 182

    (58) concat -> concat MAS IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 58 (concat -> concat MAS IDENTIFICADOR .)
    MAS             reduce using rule 58 (concat -> concat MAS IDENTIFICADOR .)


state 183

    (67) while -> WHILE LPAR statement RPAR LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . for
    (30) bodyblock -> bodyblock . imprimir
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (70) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (71) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (109) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVER          shift and go to state 208
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 21
    FOR             shift and go to state 24
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    variable                       shift and go to state 209
    while                          shift and go to state 210
    expresionif                    shift and go to state 211
    for                            shift and go to state 212
    imprimir                       shift and go to state 213
    tipo                           shift and go to state 124

state 184

    (70) expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .

    $end            reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LLAVER          reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    AUTO            reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    CHAR            reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    STRING          reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    WHILE           reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    IF              reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FOR             reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    PRINT           reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    COUT            reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    INT             reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FLOAT           reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LONG            reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    RETURN          reduce using rule 70 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)


state 185

    (72) expresionpos -> else .

    $end            reduce using rule 72 (expresionpos -> else .)
    LLAVER          reduce using rule 72 (expresionpos -> else .)
    AUTO            reduce using rule 72 (expresionpos -> else .)
    CHAR            reduce using rule 72 (expresionpos -> else .)
    STRING          reduce using rule 72 (expresionpos -> else .)
    WHILE           reduce using rule 72 (expresionpos -> else .)
    IF              reduce using rule 72 (expresionpos -> else .)
    FOR             reduce using rule 72 (expresionpos -> else .)
    PRINT           reduce using rule 72 (expresionpos -> else .)
    COUT            reduce using rule 72 (expresionpos -> else .)
    INT             reduce using rule 72 (expresionpos -> else .)
    FLOAT           reduce using rule 72 (expresionpos -> else .)
    LONG            reduce using rule 72 (expresionpos -> else .)
    RETURN          reduce using rule 72 (expresionpos -> else .)


state 186

    (73) expresionpos -> elseif .

    $end            reduce using rule 73 (expresionpos -> elseif .)
    LLAVER          reduce using rule 73 (expresionpos -> elseif .)
    AUTO            reduce using rule 73 (expresionpos -> elseif .)
    CHAR            reduce using rule 73 (expresionpos -> elseif .)
    STRING          reduce using rule 73 (expresionpos -> elseif .)
    WHILE           reduce using rule 73 (expresionpos -> elseif .)
    IF              reduce using rule 73 (expresionpos -> elseif .)
    FOR             reduce using rule 73 (expresionpos -> elseif .)
    PRINT           reduce using rule 73 (expresionpos -> elseif .)
    COUT            reduce using rule 73 (expresionpos -> elseif .)
    INT             reduce using rule 73 (expresionpos -> elseif .)
    FLOAT           reduce using rule 73 (expresionpos -> elseif .)
    LONG            reduce using rule 73 (expresionpos -> elseif .)
    RETURN          reduce using rule 73 (expresionpos -> elseif .)


state 187

    (78) else -> ELSE . conllaves
    (79) else -> ELSE . sinllaves
    (75) elseif -> ELSE . IF LPAR condicionif RPAR conllaves else
    (76) elseif -> ELSE . IF LPAR condicionif RPAR sinllaves else
    (82) conllaves -> . LLAVEL bodyblock LLAVER
    (80) sinllaves -> . while
    (81) sinllaves -> . variable
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    IF              shift and go to state 216
    LLAVEL          shift and go to state 155
    WHILE           shift and go to state 19
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 214
    sinllaves                      shift and go to state 215
    while                          shift and go to state 156
    variable                       shift and go to state 157
    tipo                           shift and go to state 124

state 188

    (71) expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .

    $end            reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LLAVER          reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    AUTO            reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    CHAR            reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    STRING          reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    WHILE           reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    IF              reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FOR             reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    PRINT           reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    COUT            reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    INT             reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FLOAT           reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LONG            reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    RETURN          reduce using rule 71 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)


state 189

    (82) conllaves -> LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . for
    (30) bodyblock -> bodyblock . imprimir
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (70) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (71) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (109) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVER          shift and go to state 217
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 21
    FOR             shift and go to state 24
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    variable                       shift and go to state 209
    while                          shift and go to state 210
    expresionif                    shift and go to state 211
    for                            shift and go to state 212
    imprimir                       shift and go to state 213
    tipo                           shift and go to state 124

state 190

    (46) variable -> tipo id IGUAL . numero PUNTOCOMA
    (44) numero -> . ENTERO
    (45) numero -> . FLOTANTE

    ENTERO          shift and go to state 103
    FLOTANTE        shift and go to state 104

    numero                         shift and go to state 101

state 191

    (47) variable -> tipo id PUNTOCOMA .

    EXCLAMACION     reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    AUTO            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    CHAR            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    STRING          reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    INT             reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    FLOAT           reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    LONG            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    ENTERO          reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    FLOTANTE        reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    CHARACTER       reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    CADENA          reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    TRUE            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    FALSE           reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    $end            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    LLAVER          reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    WHILE           reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    IF              reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    FOR             reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    PRINT           reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    COUT            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    RETURN          reduce using rule 47 (variable -> tipo id PUNTOCOMA .)
    ELSE            reduce using rule 47 (variable -> tipo id PUNTOCOMA .)


state 192

    (119) definicion -> tipo IDENTIFICADOR . PUNTOCOMA
    (121) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 218
    LPAR            shift and go to state 63


state 193

    (134) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .

    $end            reduce using rule 134 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)


state 194

    (126) parametrosfuncion -> IDENTIFICADOR masparametrosfuncion .

    RPAR            reduce using rule 126 (parametrosfuncion -> IDENTIFICADOR masparametrosfuncion .)


state 195

    (131) masparametrosfuncion -> COMMA . parametrosfuncion
    (126) parametrosfuncion -> . IDENTIFICADOR masparametrosfuncion
    (127) parametrosfuncion -> . valor masparametrosfuncion
    (128) parametrosfuncion -> .
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 164
    RPAR            reduce using rule 128 (parametrosfuncion -> .)
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50

    parametrosfuncion              shift and go to state 219
    valor                          shift and go to state 166

state 196

    (138) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 220


state 197

    (127) parametrosfuncion -> valor masparametrosfuncion .

    RPAR            reduce using rule 127 (parametrosfuncion -> valor masparametrosfuncion .)


state 198

    (54) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .

    $end            reduce using rule 54 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    PUNTOCOMA       reduce using rule 54 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)


state 199

    (109) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA . loopfor RPAR LLAVEL bodyblock LLAVER
    (101) loopfor -> . asign
    (102) loopfor -> . unaryexp
    (103) asign -> . IDENTIFICADOR MAS valor
    (104) asign -> . IDENTIFICADOR MENOS valor
    (105) asign -> . IDENTIFICADOR ASTERISCO valor
    (106) asign -> . IDENTIFICADOR SLASH valor
    (107) unaryexp -> . IDENTIFICADOR MAS MAS
    (108) unaryexp -> . IDENTIFICADOR MENOS MENOS

    IDENTIFICADOR   shift and go to state 224

    loopfor                        shift and go to state 221
    asign                          shift and go to state 222
    unaryexp                       shift and go to state 223

state 200

    (100) condfor -> IDENTIFICADOR comparador . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 225

state 201

    (99) initfor -> tipo IDENTIFICADOR IGUAL valor .

    PUNTOCOMA       reduce using rule 99 (initfor -> tipo IDENTIFICADOR IGUAL valor .)


state 202

    (122) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock for
    (30) bodyblock -> . bodyblock imprimir
    (31) bodyblock -> .

    LLAVER          reduce using rule 31 (bodyblock -> .)
    AUTO            reduce using rule 31 (bodyblock -> .)
    CHAR            reduce using rule 31 (bodyblock -> .)
    STRING          reduce using rule 31 (bodyblock -> .)
    WHILE           reduce using rule 31 (bodyblock -> .)
    IF              reduce using rule 31 (bodyblock -> .)
    FOR             reduce using rule 31 (bodyblock -> .)
    PRINT           reduce using rule 31 (bodyblock -> .)
    COUT            reduce using rule 31 (bodyblock -> .)
    INT             reduce using rule 31 (bodyblock -> .)
    FLOAT           reduce using rule 31 (bodyblock -> .)
    LONG            reduce using rule 31 (bodyblock -> .)

    bodyblock                      shift and go to state 226

state 203

    (69) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 227


state 204

    (111) arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .

    $end            reduce using rule 111 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)


state 205

    (113) arraydata -> arraydata COMMA valor .

    LLAVER          reduce using rule 113 (arraydata -> arraydata COMMA valor .)
    COMMA           reduce using rule 113 (arraydata -> arraydata COMMA valor .)


state 206

    (129) masparametrosimplementacion -> COMMA parametrosimplementacion .

    RPAR            reduce using rule 129 (masparametrosimplementacion -> COMMA parametrosimplementacion .)


state 207

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock . RETURN valor PUNTOCOMA LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . for
    (30) bodyblock -> bodyblock . imprimir
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (70) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (71) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (109) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    RETURN          shift and go to state 228
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 21
    FOR             shift and go to state 24
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    tipo                           shift and go to state 124
    variable                       shift and go to state 209
    while                          shift and go to state 210
    expresionif                    shift and go to state 211
    for                            shift and go to state 212
    imprimir                       shift and go to state 213

state 208

    (67) while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    ELSE            reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 67 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)


state 209

    (26) bodyblock -> bodyblock variable .

    LLAVER          reduce using rule 26 (bodyblock -> bodyblock variable .)
    AUTO            reduce using rule 26 (bodyblock -> bodyblock variable .)
    CHAR            reduce using rule 26 (bodyblock -> bodyblock variable .)
    STRING          reduce using rule 26 (bodyblock -> bodyblock variable .)
    WHILE           reduce using rule 26 (bodyblock -> bodyblock variable .)
    IF              reduce using rule 26 (bodyblock -> bodyblock variable .)
    FOR             reduce using rule 26 (bodyblock -> bodyblock variable .)
    PRINT           reduce using rule 26 (bodyblock -> bodyblock variable .)
    COUT            reduce using rule 26 (bodyblock -> bodyblock variable .)
    INT             reduce using rule 26 (bodyblock -> bodyblock variable .)
    FLOAT           reduce using rule 26 (bodyblock -> bodyblock variable .)
    LONG            reduce using rule 26 (bodyblock -> bodyblock variable .)
    RETURN          reduce using rule 26 (bodyblock -> bodyblock variable .)


state 210

    (27) bodyblock -> bodyblock while .

    LLAVER          reduce using rule 27 (bodyblock -> bodyblock while .)
    AUTO            reduce using rule 27 (bodyblock -> bodyblock while .)
    CHAR            reduce using rule 27 (bodyblock -> bodyblock while .)
    STRING          reduce using rule 27 (bodyblock -> bodyblock while .)
    WHILE           reduce using rule 27 (bodyblock -> bodyblock while .)
    IF              reduce using rule 27 (bodyblock -> bodyblock while .)
    FOR             reduce using rule 27 (bodyblock -> bodyblock while .)
    PRINT           reduce using rule 27 (bodyblock -> bodyblock while .)
    COUT            reduce using rule 27 (bodyblock -> bodyblock while .)
    INT             reduce using rule 27 (bodyblock -> bodyblock while .)
    FLOAT           reduce using rule 27 (bodyblock -> bodyblock while .)
    LONG            reduce using rule 27 (bodyblock -> bodyblock while .)
    RETURN          reduce using rule 27 (bodyblock -> bodyblock while .)


state 211

    (28) bodyblock -> bodyblock expresionif .

    LLAVER          reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    AUTO            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    CHAR            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    STRING          reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    WHILE           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    IF              reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    FOR             reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    PRINT           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    COUT            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    INT             reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    FLOAT           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    LONG            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    RETURN          reduce using rule 28 (bodyblock -> bodyblock expresionif .)


state 212

    (29) bodyblock -> bodyblock for .

    LLAVER          reduce using rule 29 (bodyblock -> bodyblock for .)
    AUTO            reduce using rule 29 (bodyblock -> bodyblock for .)
    CHAR            reduce using rule 29 (bodyblock -> bodyblock for .)
    STRING          reduce using rule 29 (bodyblock -> bodyblock for .)
    WHILE           reduce using rule 29 (bodyblock -> bodyblock for .)
    IF              reduce using rule 29 (bodyblock -> bodyblock for .)
    FOR             reduce using rule 29 (bodyblock -> bodyblock for .)
    PRINT           reduce using rule 29 (bodyblock -> bodyblock for .)
    COUT            reduce using rule 29 (bodyblock -> bodyblock for .)
    INT             reduce using rule 29 (bodyblock -> bodyblock for .)
    FLOAT           reduce using rule 29 (bodyblock -> bodyblock for .)
    LONG            reduce using rule 29 (bodyblock -> bodyblock for .)
    RETURN          reduce using rule 29 (bodyblock -> bodyblock for .)


state 213

    (30) bodyblock -> bodyblock imprimir .

    LLAVER          reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    AUTO            reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    CHAR            reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    STRING          reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    WHILE           reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    IF              reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    FOR             reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    PRINT           reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    COUT            reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    INT             reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    FLOAT           reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    LONG            reduce using rule 30 (bodyblock -> bodyblock imprimir .)
    RETURN          reduce using rule 30 (bodyblock -> bodyblock imprimir .)


state 214

    (78) else -> ELSE conllaves .

    $end            reduce using rule 78 (else -> ELSE conllaves .)
    LLAVER          reduce using rule 78 (else -> ELSE conllaves .)
    AUTO            reduce using rule 78 (else -> ELSE conllaves .)
    CHAR            reduce using rule 78 (else -> ELSE conllaves .)
    STRING          reduce using rule 78 (else -> ELSE conllaves .)
    WHILE           reduce using rule 78 (else -> ELSE conllaves .)
    IF              reduce using rule 78 (else -> ELSE conllaves .)
    FOR             reduce using rule 78 (else -> ELSE conllaves .)
    PRINT           reduce using rule 78 (else -> ELSE conllaves .)
    COUT            reduce using rule 78 (else -> ELSE conllaves .)
    INT             reduce using rule 78 (else -> ELSE conllaves .)
    FLOAT           reduce using rule 78 (else -> ELSE conllaves .)
    LONG            reduce using rule 78 (else -> ELSE conllaves .)
    RETURN          reduce using rule 78 (else -> ELSE conllaves .)


state 215

    (79) else -> ELSE sinllaves .

    $end            reduce using rule 79 (else -> ELSE sinllaves .)
    LLAVER          reduce using rule 79 (else -> ELSE sinllaves .)
    AUTO            reduce using rule 79 (else -> ELSE sinllaves .)
    CHAR            reduce using rule 79 (else -> ELSE sinllaves .)
    STRING          reduce using rule 79 (else -> ELSE sinllaves .)
    WHILE           reduce using rule 79 (else -> ELSE sinllaves .)
    IF              reduce using rule 79 (else -> ELSE sinllaves .)
    FOR             reduce using rule 79 (else -> ELSE sinllaves .)
    PRINT           reduce using rule 79 (else -> ELSE sinllaves .)
    COUT            reduce using rule 79 (else -> ELSE sinllaves .)
    INT             reduce using rule 79 (else -> ELSE sinllaves .)
    FLOAT           reduce using rule 79 (else -> ELSE sinllaves .)
    LONG            reduce using rule 79 (else -> ELSE sinllaves .)
    RETURN          reduce using rule 79 (else -> ELSE sinllaves .)


state 216

    (75) elseif -> ELSE IF . LPAR condicionif RPAR conllaves else
    (76) elseif -> ELSE IF . LPAR condicionif RPAR sinllaves else

    LPAR            shift and go to state 229


state 217

    (82) conllaves -> LLAVEL bodyblock LLAVER .

    ELSE            reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    $end            reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 82 (conllaves -> LLAVEL bodyblock LLAVER .)


state 218

    (119) definicion -> tipo IDENTIFICADOR PUNTOCOMA .

    LLAVER          reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 119 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)


state 219

    (131) masparametrosfuncion -> COMMA parametrosfuncion .

    RPAR            reduce using rule 131 (masparametrosfuncion -> COMMA parametrosfuncion .)


state 220

    (138) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .

    $end            reduce using rule 138 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)


state 221

    (109) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 230


state 222

    (101) loopfor -> asign .

    RPAR            reduce using rule 101 (loopfor -> asign .)


state 223

    (102) loopfor -> unaryexp .

    RPAR            reduce using rule 102 (loopfor -> unaryexp .)


state 224

    (103) asign -> IDENTIFICADOR . MAS valor
    (104) asign -> IDENTIFICADOR . MENOS valor
    (105) asign -> IDENTIFICADOR . ASTERISCO valor
    (106) asign -> IDENTIFICADOR . SLASH valor
    (107) unaryexp -> IDENTIFICADOR . MAS MAS
    (108) unaryexp -> IDENTIFICADOR . MENOS MENOS

    MAS             shift and go to state 231
    MENOS           shift and go to state 232
    ASTERISCO       shift and go to state 233
    SLASH           shift and go to state 234


state 225

    (100) condfor -> IDENTIFICADOR comparador valor .

    PUNTOCOMA       reduce using rule 100 (condfor -> IDENTIFICADOR comparador valor .)


state 226

    (122) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . for
    (30) bodyblock -> bodyblock . imprimir
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (70) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (71) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (109) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVER          shift and go to state 235
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 21
    FOR             shift and go to state 24
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    variable                       shift and go to state 209
    while                          shift and go to state 210
    expresionif                    shift and go to state 211
    for                            shift and go to state 212
    imprimir                       shift and go to state 213
    tipo                           shift and go to state 124

state 227

    (69) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 69 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)


state 228

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN . valor PUNTOCOMA LLAVER
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 236

state 229

    (75) elseif -> ELSE IF LPAR . condicionif RPAR conllaves else
    (76) elseif -> ELSE IF LPAR . condicionif RPAR sinllaves else
    (83) condicionif -> . initcondicion
    (84) condicionif -> . statement
    (85) initcondicion -> . varblock statement
    (86) statement -> . expresion
    (87) statement -> . EXCLAMACION boolean
    (88) statement -> . EXCLAMACION LPAR expresion RPAR
    (89) statement -> . EXCLAMACION IDENTIFICADOR
    (39) varblock -> . varblock variable
    (40) varblock -> .
    (68) expresion -> . expresion comparador expresion
    (92) expresion -> . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 43
    AUTO            reduce using rule 40 (varblock -> .)
    CHAR            reduce using rule 40 (varblock -> .)
    STRING          reduce using rule 40 (varblock -> .)
    INT             reduce using rule 40 (varblock -> .)
    FLOAT           reduce using rule 40 (varblock -> .)
    LONG            reduce using rule 40 (varblock -> .)
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

  ! EXCLAMACION     [ reduce using rule 40 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 40 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 40 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 40 (varblock -> .) ]
  ! CADENA          [ reduce using rule 40 (varblock -> .) ]
  ! TRUE            [ reduce using rule 40 (varblock -> .) ]
  ! FALSE           [ reduce using rule 40 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 40 (varblock -> .) ]

    condicionif                    shift and go to state 237
    initcondicion                  shift and go to state 84
    statement                      shift and go to state 85
    varblock                       shift and go to state 86
    expresion                      shift and go to state 70
    valor                          shift and go to state 42

state 230

    (109) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 238


state 231

    (103) asign -> IDENTIFICADOR MAS . valor
    (107) unaryexp -> IDENTIFICADOR MAS . MAS
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    MAS             shift and go to state 239
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 240

state 232

    (104) asign -> IDENTIFICADOR MENOS . valor
    (108) unaryexp -> IDENTIFICADOR MENOS . MENOS
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    MENOS           shift and go to state 241
    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 242

state 233

    (105) asign -> IDENTIFICADOR ASTERISCO . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 243

state 234

    (106) asign -> IDENTIFICADOR SLASH . valor
    (60) valor -> . ENTERO
    (61) valor -> . FLOTANTE
    (62) valor -> . CHARACTER
    (63) valor -> . CADENA
    (64) valor -> . TRUE
    (65) valor -> . FALSE
    (66) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 45
    FLOTANTE        shift and go to state 46
    CHARACTER       shift and go to state 47
    CADENA          shift and go to state 48
    TRUE            shift and go to state 49
    FALSE           shift and go to state 50
    IDENTIFICADOR   shift and go to state 44

    valor                          shift and go to state 244

state 235

    (122) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    VOID            reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 122 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)


state 236

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 245


state 237

    (75) elseif -> ELSE IF LPAR condicionif . RPAR conllaves else
    (76) elseif -> ELSE IF LPAR condicionif . RPAR sinllaves else

    RPAR            shift and go to state 246


state 238

    (109) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock for
    (30) bodyblock -> . bodyblock imprimir
    (31) bodyblock -> .

    LLAVER          reduce using rule 31 (bodyblock -> .)
    AUTO            reduce using rule 31 (bodyblock -> .)
    CHAR            reduce using rule 31 (bodyblock -> .)
    STRING          reduce using rule 31 (bodyblock -> .)
    WHILE           reduce using rule 31 (bodyblock -> .)
    IF              reduce using rule 31 (bodyblock -> .)
    FOR             reduce using rule 31 (bodyblock -> .)
    PRINT           reduce using rule 31 (bodyblock -> .)
    COUT            reduce using rule 31 (bodyblock -> .)
    INT             reduce using rule 31 (bodyblock -> .)
    FLOAT           reduce using rule 31 (bodyblock -> .)
    LONG            reduce using rule 31 (bodyblock -> .)

    bodyblock                      shift and go to state 247

state 239

    (107) unaryexp -> IDENTIFICADOR MAS MAS .

    RPAR            reduce using rule 107 (unaryexp -> IDENTIFICADOR MAS MAS .)


state 240

    (103) asign -> IDENTIFICADOR MAS valor .

    RPAR            reduce using rule 103 (asign -> IDENTIFICADOR MAS valor .)


state 241

    (108) unaryexp -> IDENTIFICADOR MENOS MENOS .

    RPAR            reduce using rule 108 (unaryexp -> IDENTIFICADOR MENOS MENOS .)


state 242

    (104) asign -> IDENTIFICADOR MENOS valor .

    RPAR            reduce using rule 104 (asign -> IDENTIFICADOR MENOS valor .)


state 243

    (105) asign -> IDENTIFICADOR ASTERISCO valor .

    RPAR            reduce using rule 105 (asign -> IDENTIFICADOR ASTERISCO valor .)


state 244

    (106) asign -> IDENTIFICADOR SLASH valor .

    RPAR            reduce using rule 106 (asign -> IDENTIFICADOR SLASH valor .)


state 245

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 248


state 246

    (75) elseif -> ELSE IF LPAR condicionif RPAR . conllaves else
    (76) elseif -> ELSE IF LPAR condicionif RPAR . sinllaves else
    (82) conllaves -> . LLAVEL bodyblock LLAVER
    (80) sinllaves -> . while
    (81) sinllaves -> . variable
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVEL          shift and go to state 155
    WHILE           shift and go to state 19
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 249
    sinllaves                      shift and go to state 250
    while                          shift and go to state 156
    variable                       shift and go to state 157
    tipo                           shift and go to state 124

state 247

    (109) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . for
    (30) bodyblock -> bodyblock . imprimir
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (70) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (71) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (109) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVER          shift and go to state 251
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    WHILE           shift and go to state 19
    IF              shift and go to state 21
    FOR             shift and go to state 24
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    variable                       shift and go to state 209
    while                          shift and go to state 210
    expresionif                    shift and go to state 211
    for                            shift and go to state 212
    imprimir                       shift and go to state 213
    tipo                           shift and go to state 124

state 248

    (121) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .

    $end            reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    VOID            reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    INT             reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    LONG            reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    AUTO            reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    STRING          reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 121 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)


state 249

    (75) elseif -> ELSE IF LPAR condicionif RPAR conllaves . else
    (78) else -> . ELSE conllaves
    (79) else -> . ELSE sinllaves

    ELSE            shift and go to state 252

    else                           shift and go to state 253

state 250

    (76) elseif -> ELSE IF LPAR condicionif RPAR sinllaves . else
    (78) else -> . ELSE conllaves
    (79) else -> . ELSE sinllaves

    ELSE            shift and go to state 252

    else                           shift and go to state 254

state 251

    (109) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 109 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)


state 252

    (78) else -> ELSE . conllaves
    (79) else -> ELSE . sinllaves
    (82) conllaves -> . LLAVEL bodyblock LLAVER
    (80) sinllaves -> . while
    (81) sinllaves -> . variable
    (67) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (46) variable -> . tipo id IGUAL numero PUNTOCOMA
    (47) variable -> . tipo id PUNTOCOMA
    (48) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (49) variable -> . AUTO id PUNTOCOMA
    (50) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (51) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (52) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (53) variable -> . STRING id IGUAL concat PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVEL          shift and go to state 155
    WHILE           shift and go to state 19
    AUTO            shift and go to state 16
    CHAR            shift and go to state 17
    STRING          shift and go to state 18
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 214
    sinllaves                      shift and go to state 215
    while                          shift and go to state 156
    variable                       shift and go to state 157
    tipo                           shift and go to state 124

state 253

    (75) elseif -> ELSE IF LPAR condicionif RPAR conllaves else .

    $end            reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LLAVER          reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    AUTO            reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    CHAR            reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    STRING          reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    WHILE           reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    IF              reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FOR             reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    PRINT           reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    COUT            reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    INT             reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FLOAT           reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LONG            reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    RETURN          reduce using rule 75 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)


state 254

    (76) elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .

    $end            reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LLAVER          reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    AUTO            reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    CHAR            reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    STRING          reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    WHILE           reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    IF              reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    FOR             reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    PRINT           reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    COUT            reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    INT             reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    FLOAT           reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LONG            reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    RETURN          reduce using rule 76 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFICADOR in state 16 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 17 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 18 resolved as shift
WARNING: shift/reduce conflict for RPAR in state 40 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 51 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 51 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 51 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 51 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 51 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 51 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 51 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 51 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 110 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 115 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 115 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 115 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 115 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 125 resolved as shift
WARNING: shift/reduce conflict for VOID in state 125 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 125 resolved as shift
WARNING: shift/reduce conflict for VOID in state 125 resolved as shift
WARNING: shift/reduce conflict for INT in state 125 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 125 resolved as shift
WARNING: shift/reduce conflict for LONG in state 125 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 125 resolved as shift
WARNING: shift/reduce conflict for STRING in state 125 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 125 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 164 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 229 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 229 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 229 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 229 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 229 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 229 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 229 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 229 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (body -> <empty>)
WARNING: rejected rule (funcionclaseimpl -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 62 resolved using rule (variable -> tipo id PUNTOCOMA)
WARNING: rejected rule (arraydeclaration -> tipo id PUNTOCOMA) in state 62
WARNING: reduce/reduce conflict in state 125 resolved using rule (definicion -> <empty>)
WARNING: rejected rule (funcionclaseimpl -> <empty>) in state 125
WARNING: reduce/reduce conflict in state 153 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 153
WARNING: reduce/reduce conflict in state 154 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 154
WARNING: reduce/reduce conflict in state 164 resolved using rule (valor -> IDENTIFICADOR)
WARNING: rejected rule (masparametrosfuncion -> <empty>) in state 164
WARNING: Rule (funcionclaseimpl -> <empty>) is never reduced
WARNING: Rule (arraydeclaration -> tipo id PUNTOCOMA) is never reduced
WARNING: Rule (elseif -> <empty>) is never reduced
