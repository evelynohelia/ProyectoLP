Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BACKSLASH
    BOOL
    CIRCUNFLEJO
    COMADOBLE
    COMASIMPLE
    COMENTARIO
    DOBLEPUNTO
    INTERROGACION
    NEW
    NULLPOINTER
    NUMERAL
    PIPE
    PORCENTAJE
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTERO
    STATIC
    THEN
    VIRGUILA

Grammar

Rule 0     S' -> body
Rule 1     body -> variable
Rule 2     body -> while
Rule 3     body -> expresionif
Rule 4     body -> claseimplementacion
Rule 5     body -> funcionclaseimpl
Rule 6     body -> creacionobjeto
Rule 7     body -> asignarvalorobjeto
Rule 8     body -> usarfuncionobjeto
Rule 9     body -> struct
Rule 10    body -> <empty>
Rule 11    imprimir -> PRINT LPAR valor RPAR
Rule 12    bodyblock -> bodyblock variable
Rule 13    bodyblock -> bodyblock while
Rule 14    bodyblock -> bodyblock expresionif
Rule 15    bodyblock -> <empty>
Rule 16    funcionblock -> bodyblock variable
Rule 17    funcionblock -> bodyblock while
Rule 18    funcionblock -> bodyblock expresionif
Rule 19    funcionblock -> RETURN statement
Rule 20    funcionblock -> <empty>
Rule 21    varblock -> varblock variable
Rule 22    varblock -> <empty>
Rule 23    variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
Rule 24    variable -> AUTO IDENTIFICADOR PUNTOCOMA
Rule 25    variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
Rule 26    variable -> numerotipo IDENTIFICADOR PUNTOCOMA
Rule 27    variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
Rule 28    numerotipo -> INT
Rule 29    numerotipo -> FLOAT
Rule 30    numerotipo -> LONG
Rule 31    numero -> ENTERO
Rule 32    numero -> FLOTANTE
Rule 33    tipo -> INT
Rule 34    tipo -> FLOAT
Rule 35    tipo -> LONG
Rule 36    tipo -> AUTO
Rule 37    tipo -> CHAR
Rule 38    tipo -> VOID
Rule 39    valor -> ENTERO
Rule 40    valor -> FLOTANTE
Rule 41    valor -> CHARACTER
Rule 42    valor -> STRING
Rule 43    valor -> TRUE
Rule 44    valor -> FALSE
Rule 45    valor -> IDENTIFICADOR
Rule 46    while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
Rule 47    expresion -> expresion comparador expresion
Rule 48    struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
Rule 49    expresionif -> IF LPAR condicionif RPAR conllaves expresionpos
Rule 50    expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos
Rule 51    expresionpos -> else
Rule 52    expresionpos -> elseif
Rule 53    expresionpos -> <empty>
Rule 54    elseif -> ELSE IF LPAR condicionif RPAR conllaves else
Rule 55    elseif -> ELSE IF LPAR condicionif RPAR sinllaves else
Rule 56    elseif -> <empty>
Rule 57    else -> ELSE conllaves
Rule 58    else -> ELSE sinllaves
Rule 59    sinllaves -> while
Rule 60    sinllaves -> variable
Rule 61    conllaves -> LLAVEL bodyblock LLAVER
Rule 62    condicionif -> initcondicion
Rule 63    condicionif -> statement
Rule 64    initcondicion -> varblock statement
Rule 65    statement -> expresion
Rule 66    statement -> EXCLAMACION boolean
Rule 67    statement -> EXCLAMACION LPAR expresion RPAR
Rule 68    statement -> EXCLAMACION IDENTIFICADOR
Rule 69    boolean -> TRUE
Rule 70    boolean -> FALSE
Rule 71    expresion -> valor
Rule 72    comparador -> IGUAL IGUAL
Rule 73    comparador -> MENOR
Rule 74    comparador -> MAYOR
Rule 75    comparador -> MENOR IGUAL
Rule 76    comparador -> MAYOR IGUAL
Rule 77    comparador -> EXCLAMACION IGUAL
Rule 78    initfor -> tipo IDENTIFICADOR IGUAL valor
Rule 79    initfor -> IDENTIFICADOR comparador valor
Rule 80    loopfor -> asign
Rule 81    loopfor -> unaryexp
Rule 82    asign -> IDENTIFICADOR MAS valor
Rule 83    asign -> IDENTIFICADOR MENOS valor
Rule 84    asign -> IDENTIFICADOR ASTERISCO valor
Rule 85    asign -> IDENTIFICADOR SLASH valor
Rule 86    unaryexp -> IDENTIFICADOR MAS MAS
Rule 87    unaryexp -> IDENTIFICADOR MENOS MENOS
Rule 88    for -> FOR LPAR initfor PUNTOCOMA initfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
Rule 89    array_declaration -> tipo IDENTIFICADOR CORCHETEL ENTERO CORCHETER PUNTOCOMA
Rule 90    claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
Rule 91    bloqueclase -> bloqueclase definicion
Rule 92    bloqueclase -> bloqueclase funcionclaseimpl
Rule 93    bloqueclase -> <empty>
Rule 94    definicion -> tipo IDENTIFICADOR PUNTOCOMA
Rule 95    definicion -> <empty>
Rule 96    funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER
Rule 97    funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
Rule 98    funcionclaseimpl -> <empty>
Rule 99    parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion
Rule 100   parametrosimplementacion -> <empty>
Rule 101   parametrosfuncion -> IDENTIFICADOR masparametrosfuncion
Rule 102   parametrosfuncion -> <empty>
Rule 103   masparametrosimplementacion -> COMMA parametrosimplementacion
Rule 104   masparametrosimplementacion -> <empty>
Rule 105   masparametrosfuncion -> COMMA parametrosfuncion
Rule 106   masparametrosfuncion -> <empty>
Rule 107   creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
Rule 108   asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor
Rule 109   asignarvalorobjeto -> LPAR expresion RPAR
Rule 110   asignarvalorobjeto -> LPAR statement RPAR
Rule 111   asignarvalorobjeto -> EXCLAMACION LPAR statement RPAR
Rule 112   usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA

Terminals, with rules where they appear

AND                  : 
ASTERISCO            : 84
AUTO                 : 23 24 36
BACKSLASH            : 
BOOL                 : 
CHAR                 : 27 37
CHARACTER            : 27 41
CIRCUNFLEJO          : 
CLASS                : 90
COMADOBLE            : 
COMASIMPLE           : 
COMENTARIO           : 
COMMA                : 103 105
CORCHETEL            : 89
CORCHETER            : 89
DOBLEPUNTO           : 
ELSE                 : 54 55 57 58
ENTERO               : 31 39 89
EXCLAMACION          : 66 67 68 77 111
FALSE                : 44 70
FLOAT                : 29 34
FLOTANTE             : 32 40
FOR                  : 88
IDENTIFICADOR        : 23 24 25 26 27 45 48 48 68 78 79 82 83 84 85 86 87 89 90 94 96 97 99 101 107 107 108 108 112 112
IF                   : 49 50 54 55
IGUAL                : 23 25 27 72 72 75 76 77 78 108
INT                  : 28 33
INTERROGACION        : 
LLAVEL               : 46 48 61 88 90 96 97
LLAVER               : 46 48 61 88 90 96 97
LONG                 : 30 35
LPAR                 : 11 46 49 50 54 55 67 88 96 97 109 110 111 112
MAS                  : 82 86 86
MAYOR                : 74 76
MENOR                : 73 75
MENOS                : 83 87 87
NEW                  : 
NULLPOINTER          : 
NUMERAL              : 
PIPE                 : 
PORCENTAJE           : 
PRINT                : 11
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTERO              : 
PUNTO                : 108 112
PUNTOCOMA            : 23 24 25 26 27 48 88 88 89 94 107 112
RETURN               : 19
RPAR                 : 11 46 49 50 54 55 67 88 96 97 109 110 111 112
SLASH                : 85
STATIC               : 
STRING               : 42
STRUCT               : 48
THEN                 : 
TRUE                 : 43 69
VIRGUILA             : 
VOID                 : 38 97
WHILE                : 46
error                : 

Nonterminals, with rules where they appear

array_declaration    : 
asign                : 80
asignarvalorobjeto   : 7
bloqueclase          : 90 91 92
body                 : 0
bodyblock            : 12 13 14 16 17 18 46 61 88 97
boolean              : 66
claseimplementacion  : 4
comparador           : 47 79
condicionif          : 49 50 54 55
conllaves            : 49 54 57
creacionobjeto       : 6
definicion           : 91
else                 : 51 54 55
elseif               : 52
expresion            : 47 47 65 67 109
expresionif          : 3 14 18
expresionpos         : 49 50
for                  : 
funcionblock         : 96
funcionclaseimpl     : 5 92
imprimir             : 
initcondicion        : 62
initfor              : 88 88
loopfor              : 88
masparametrosfuncion : 101
masparametrosimplementacion : 99
numero               : 25
numerotipo           : 25 26
parametrosfuncion    : 105 112
parametrosimplementacion : 96 97 103
sinllaves            : 50 55 58
statement            : 19 46 63 64 110 111
struct               : 9
tipo                 : 78 89 94 96 99
unaryexp             : 81
usarfuncionobjeto    : 8
valor                : 11 23 71 78 79 82 83 84 85 108
varblock             : 21 48 64
variable             : 1 12 16 21 60
while                : 2 13 17 59

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . variable
    (2) body -> . while
    (3) body -> . expresionif
    (4) body -> . claseimplementacion
    (5) body -> . funcionclaseimpl
    (6) body -> . creacionobjeto
    (7) body -> . asignarvalorobjeto
    (8) body -> . usarfuncionobjeto
    (9) body -> . struct
    (10) body -> .
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (49) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (50) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (90) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (96) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER
    (97) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (98) funcionclaseimpl -> .
    (107) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (108) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor
    (109) asignarvalorobjeto -> . LPAR expresion RPAR
    (110) asignarvalorobjeto -> . LPAR statement RPAR
    (111) asignarvalorobjeto -> . EXCLAMACION LPAR statement RPAR
    (112) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (48) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG
    (33) tipo -> . INT
    (34) tipo -> . FLOAT
    (35) tipo -> . LONG
    (36) tipo -> . AUTO
    (37) tipo -> . CHAR
    (38) tipo -> . VOID

  ! reduce/reduce conflict for $end resolved using rule 10 (body -> .)
    $end            reduce using rule 10 (body -> .)
    AUTO            shift and go to state 11
    CHAR            shift and go to state 14
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    CLASS           shift and go to state 18
    VOID            shift and go to state 20
    IDENTIFICADOR   shift and go to state 12
    LPAR            shift and go to state 16
    EXCLAMACION     shift and go to state 21
    STRUCT          shift and go to state 22
    INT             shift and go to state 23
    FLOAT           shift and go to state 24
    LONG            shift and go to state 25

  ! $end            [ reduce using rule 98 (funcionclaseimpl -> .) ]

    body                           shift and go to state 1
    variable                       shift and go to state 2
    while                          shift and go to state 3
    expresionif                    shift and go to state 4
    claseimplementacion            shift and go to state 5
    funcionclaseimpl               shift and go to state 6
    creacionobjeto                 shift and go to state 7
    asignarvalorobjeto             shift and go to state 8
    usarfuncionobjeto              shift and go to state 9
    struct                         shift and go to state 10
    numerotipo                     shift and go to state 13
    tipo                           shift and go to state 19

state 1

    (0) S' -> body .



state 2

    (1) body -> variable .

    $end            reduce using rule 1 (body -> variable .)


state 3

    (2) body -> while .

    $end            reduce using rule 2 (body -> while .)


state 4

    (3) body -> expresionif .

    $end            reduce using rule 3 (body -> expresionif .)


state 5

    (4) body -> claseimplementacion .

    $end            reduce using rule 4 (body -> claseimplementacion .)


state 6

    (5) body -> funcionclaseimpl .

    $end            reduce using rule 5 (body -> funcionclaseimpl .)


state 7

    (6) body -> creacionobjeto .

    $end            reduce using rule 6 (body -> creacionobjeto .)


state 8

    (7) body -> asignarvalorobjeto .

    $end            reduce using rule 7 (body -> asignarvalorobjeto .)


state 9

    (8) body -> usarfuncionobjeto .

    $end            reduce using rule 8 (body -> usarfuncionobjeto .)


state 10

    (9) body -> struct .

    $end            reduce using rule 9 (body -> struct .)


state 11

    (23) variable -> AUTO . IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> AUTO . IDENTIFICADOR PUNTOCOMA
    (36) tipo -> AUTO .

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 26

  ! IDENTIFICADOR   [ reduce using rule 36 (tipo -> AUTO .) ]


state 12

    (107) creacionobjeto -> IDENTIFICADOR . IDENTIFICADOR PUNTOCOMA
    (108) asignarvalorobjeto -> IDENTIFICADOR . PUNTO IDENTIFICADOR IGUAL valor
    (112) usarfuncionobjeto -> IDENTIFICADOR . PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 27
    PUNTO           shift and go to state 28


state 13

    (25) variable -> numerotipo . IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> numerotipo . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 29


state 14

    (27) variable -> CHAR . IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (37) tipo -> CHAR .

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 30

  ! IDENTIFICADOR   [ reduce using rule 37 (tipo -> CHAR .) ]


state 15

    (46) while -> WHILE . LPAR statement RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 31


state 16

    (109) asignarvalorobjeto -> LPAR . expresion RPAR
    (110) asignarvalorobjeto -> LPAR . statement RPAR
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (65) statement -> . expresion
    (66) statement -> . EXCLAMACION boolean
    (67) statement -> . EXCLAMACION LPAR expresion RPAR
    (68) statement -> . EXCLAMACION IDENTIFICADOR
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 35
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    expresion                      shift and go to state 32
    statement                      shift and go to state 33
    valor                          shift and go to state 34

state 17

    (49) expresionif -> IF . LPAR condicionif RPAR conllaves expresionpos
    (50) expresionif -> IF . LPAR condicionif RPAR sinllaves expresionpos

    LPAR            shift and go to state 43


state 18

    (90) claseimplementacion -> CLASS . IDENTIFICADOR LLAVEL bloqueclase LLAVER

    IDENTIFICADOR   shift and go to state 44


state 19

    (96) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER

    IDENTIFICADOR   shift and go to state 45


state 20

    (97) funcionclaseimpl -> VOID . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (38) tipo -> VOID .

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 46

  ! IDENTIFICADOR   [ reduce using rule 38 (tipo -> VOID .) ]


state 21

    (111) asignarvalorobjeto -> EXCLAMACION . LPAR statement RPAR

    LPAR            shift and go to state 47


state 22

    (48) struct -> STRUCT . IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 48


state 23

    (28) numerotipo -> INT .
    (33) tipo -> INT .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 28 (numerotipo -> INT .)
    IDENTIFICADOR   reduce using rule 28 (numerotipo -> INT .)

  ! IDENTIFICADOR   [ reduce using rule 33 (tipo -> INT .) ]


state 24

    (29) numerotipo -> FLOAT .
    (34) tipo -> FLOAT .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 29 (numerotipo -> FLOAT .)
    IDENTIFICADOR   reduce using rule 29 (numerotipo -> FLOAT .)

  ! IDENTIFICADOR   [ reduce using rule 34 (tipo -> FLOAT .) ]


state 25

    (30) numerotipo -> LONG .
    (35) tipo -> LONG .

  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 30 (numerotipo -> LONG .)
    IDENTIFICADOR   reduce using rule 30 (numerotipo -> LONG .)

  ! IDENTIFICADOR   [ reduce using rule 35 (tipo -> LONG .) ]


state 26

    (23) variable -> AUTO IDENTIFICADOR . IGUAL valor PUNTOCOMA
    (24) variable -> AUTO IDENTIFICADOR . PUNTOCOMA

    IGUAL           shift and go to state 49
    PUNTOCOMA       shift and go to state 50


state 27

    (107) creacionobjeto -> IDENTIFICADOR IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 51


state 28

    (108) asignarvalorobjeto -> IDENTIFICADOR PUNTO . IDENTIFICADOR IGUAL valor
    (112) usarfuncionobjeto -> IDENTIFICADOR PUNTO . IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 52


state 29

    (25) variable -> numerotipo IDENTIFICADOR . IGUAL numero PUNTOCOMA
    (26) variable -> numerotipo IDENTIFICADOR . PUNTOCOMA

    IGUAL           shift and go to state 53
    PUNTOCOMA       shift and go to state 54


state 30

    (27) variable -> CHAR IDENTIFICADOR . IGUAL CHARACTER PUNTOCOMA

    IGUAL           shift and go to state 55


state 31

    (46) while -> WHILE LPAR . statement RPAR LLAVEL bodyblock LLAVER
    (65) statement -> . expresion
    (66) statement -> . EXCLAMACION boolean
    (67) statement -> . EXCLAMACION LPAR expresion RPAR
    (68) statement -> . EXCLAMACION IDENTIFICADOR
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 35
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    statement                      shift and go to state 56
    expresion                      shift and go to state 57
    valor                          shift and go to state 34

state 32

    (109) asignarvalorobjeto -> LPAR expresion . RPAR
    (47) expresion -> expresion . comparador expresion
    (65) statement -> expresion .
    (72) comparador -> . IGUAL IGUAL
    (73) comparador -> . MENOR
    (74) comparador -> . MAYOR
    (75) comparador -> . MENOR IGUAL
    (76) comparador -> . MAYOR IGUAL
    (77) comparador -> . EXCLAMACION IGUAL

  ! shift/reduce conflict for RPAR resolved as shift
    RPAR            shift and go to state 58
    IGUAL           shift and go to state 60
    MENOR           shift and go to state 61
    MAYOR           shift and go to state 62
    EXCLAMACION     shift and go to state 63

  ! RPAR            [ reduce using rule 65 (statement -> expresion .) ]

    comparador                     shift and go to state 59

state 33

    (110) asignarvalorobjeto -> LPAR statement . RPAR

    RPAR            shift and go to state 64


state 34

    (71) expresion -> valor .

    RPAR            reduce using rule 71 (expresion -> valor .)
    IGUAL           reduce using rule 71 (expresion -> valor .)
    MENOR           reduce using rule 71 (expresion -> valor .)
    MAYOR           reduce using rule 71 (expresion -> valor .)
    EXCLAMACION     reduce using rule 71 (expresion -> valor .)
    LLAVER          reduce using rule 71 (expresion -> valor .)


state 35

    (66) statement -> EXCLAMACION . boolean
    (67) statement -> EXCLAMACION . LPAR expresion RPAR
    (68) statement -> EXCLAMACION . IDENTIFICADOR
    (69) boolean -> . TRUE
    (70) boolean -> . FALSE

    LPAR            shift and go to state 66
    IDENTIFICADOR   shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    boolean                        shift and go to state 65

state 36

    (45) valor -> IDENTIFICADOR .

    RPAR            reduce using rule 45 (valor -> IDENTIFICADOR .)
    IGUAL           reduce using rule 45 (valor -> IDENTIFICADOR .)
    MENOR           reduce using rule 45 (valor -> IDENTIFICADOR .)
    MAYOR           reduce using rule 45 (valor -> IDENTIFICADOR .)
    EXCLAMACION     reduce using rule 45 (valor -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 45 (valor -> IDENTIFICADOR .)
    LLAVER          reduce using rule 45 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 45 (valor -> IDENTIFICADOR .)


state 37

    (39) valor -> ENTERO .

    RPAR            reduce using rule 39 (valor -> ENTERO .)
    IGUAL           reduce using rule 39 (valor -> ENTERO .)
    MENOR           reduce using rule 39 (valor -> ENTERO .)
    MAYOR           reduce using rule 39 (valor -> ENTERO .)
    EXCLAMACION     reduce using rule 39 (valor -> ENTERO .)
    PUNTOCOMA       reduce using rule 39 (valor -> ENTERO .)
    LLAVER          reduce using rule 39 (valor -> ENTERO .)
    $end            reduce using rule 39 (valor -> ENTERO .)


state 38

    (40) valor -> FLOTANTE .

    RPAR            reduce using rule 40 (valor -> FLOTANTE .)
    IGUAL           reduce using rule 40 (valor -> FLOTANTE .)
    MENOR           reduce using rule 40 (valor -> FLOTANTE .)
    MAYOR           reduce using rule 40 (valor -> FLOTANTE .)
    EXCLAMACION     reduce using rule 40 (valor -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 40 (valor -> FLOTANTE .)
    LLAVER          reduce using rule 40 (valor -> FLOTANTE .)
    $end            reduce using rule 40 (valor -> FLOTANTE .)


state 39

    (41) valor -> CHARACTER .

    RPAR            reduce using rule 41 (valor -> CHARACTER .)
    IGUAL           reduce using rule 41 (valor -> CHARACTER .)
    MENOR           reduce using rule 41 (valor -> CHARACTER .)
    MAYOR           reduce using rule 41 (valor -> CHARACTER .)
    EXCLAMACION     reduce using rule 41 (valor -> CHARACTER .)
    PUNTOCOMA       reduce using rule 41 (valor -> CHARACTER .)
    LLAVER          reduce using rule 41 (valor -> CHARACTER .)
    $end            reduce using rule 41 (valor -> CHARACTER .)


state 40

    (42) valor -> STRING .

    RPAR            reduce using rule 42 (valor -> STRING .)
    IGUAL           reduce using rule 42 (valor -> STRING .)
    MENOR           reduce using rule 42 (valor -> STRING .)
    MAYOR           reduce using rule 42 (valor -> STRING .)
    EXCLAMACION     reduce using rule 42 (valor -> STRING .)
    PUNTOCOMA       reduce using rule 42 (valor -> STRING .)
    LLAVER          reduce using rule 42 (valor -> STRING .)
    $end            reduce using rule 42 (valor -> STRING .)


state 41

    (43) valor -> TRUE .

    RPAR            reduce using rule 43 (valor -> TRUE .)
    IGUAL           reduce using rule 43 (valor -> TRUE .)
    MENOR           reduce using rule 43 (valor -> TRUE .)
    MAYOR           reduce using rule 43 (valor -> TRUE .)
    EXCLAMACION     reduce using rule 43 (valor -> TRUE .)
    PUNTOCOMA       reduce using rule 43 (valor -> TRUE .)
    LLAVER          reduce using rule 43 (valor -> TRUE .)
    $end            reduce using rule 43 (valor -> TRUE .)


state 42

    (44) valor -> FALSE .

    RPAR            reduce using rule 44 (valor -> FALSE .)
    IGUAL           reduce using rule 44 (valor -> FALSE .)
    MENOR           reduce using rule 44 (valor -> FALSE .)
    MAYOR           reduce using rule 44 (valor -> FALSE .)
    EXCLAMACION     reduce using rule 44 (valor -> FALSE .)
    PUNTOCOMA       reduce using rule 44 (valor -> FALSE .)
    LLAVER          reduce using rule 44 (valor -> FALSE .)
    $end            reduce using rule 44 (valor -> FALSE .)


state 43

    (49) expresionif -> IF LPAR . condicionif RPAR conllaves expresionpos
    (50) expresionif -> IF LPAR . condicionif RPAR sinllaves expresionpos
    (62) condicionif -> . initcondicion
    (63) condicionif -> . statement
    (64) initcondicion -> . varblock statement
    (65) statement -> . expresion
    (66) statement -> . EXCLAMACION boolean
    (67) statement -> . EXCLAMACION LPAR expresion RPAR
    (68) statement -> . EXCLAMACION IDENTIFICADOR
    (21) varblock -> . varblock variable
    (22) varblock -> .
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 35
    AUTO            reduce using rule 22 (varblock -> .)
    CHAR            reduce using rule 22 (varblock -> .)
    INT             reduce using rule 22 (varblock -> .)
    FLOAT           reduce using rule 22 (varblock -> .)
    LONG            reduce using rule 22 (varblock -> .)
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

  ! EXCLAMACION     [ reduce using rule 22 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 22 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 22 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 22 (varblock -> .) ]
  ! STRING          [ reduce using rule 22 (varblock -> .) ]
  ! TRUE            [ reduce using rule 22 (varblock -> .) ]
  ! FALSE           [ reduce using rule 22 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 22 (varblock -> .) ]

    condicionif                    shift and go to state 70
    initcondicion                  shift and go to state 71
    statement                      shift and go to state 72
    varblock                       shift and go to state 73
    expresion                      shift and go to state 57
    valor                          shift and go to state 34

state 44

    (90) claseimplementacion -> CLASS IDENTIFICADOR . LLAVEL bloqueclase LLAVER

    LLAVEL          shift and go to state 74


state 45

    (96) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER

    LPAR            shift and go to state 75


state 46

    (97) funcionclaseimpl -> VOID IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 76


state 47

    (111) asignarvalorobjeto -> EXCLAMACION LPAR . statement RPAR
    (65) statement -> . expresion
    (66) statement -> . EXCLAMACION boolean
    (67) statement -> . EXCLAMACION LPAR expresion RPAR
    (68) statement -> . EXCLAMACION IDENTIFICADOR
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 35
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    statement                      shift and go to state 77
    expresion                      shift and go to state 57
    valor                          shift and go to state 34

state 48

    (48) struct -> STRUCT IDENTIFICADOR . LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    LLAVEL          shift and go to state 78


state 49

    (23) variable -> AUTO IDENTIFICADOR IGUAL . valor PUNTOCOMA
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    valor                          shift and go to state 79

state 50

    (24) variable -> AUTO IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    EXCLAMACION     reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    CHARACTER       reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 24 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)


state 51

    (107) creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 107 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)


state 52

    (108) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR . IGUAL valor
    (112) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR . LPAR parametrosfuncion RPAR PUNTOCOMA

    IGUAL           shift and go to state 80
    LPAR            shift and go to state 81


state 53

    (25) variable -> numerotipo IDENTIFICADOR IGUAL . numero PUNTOCOMA
    (31) numero -> . ENTERO
    (32) numero -> . FLOTANTE

    ENTERO          shift and go to state 83
    FLOTANTE        shift and go to state 84

    numero                         shift and go to state 82

state 54

    (26) variable -> numerotipo IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    EXCLAMACION     reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    CHARACTER       reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 26 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)


state 55

    (27) variable -> CHAR IDENTIFICADOR IGUAL . CHARACTER PUNTOCOMA

    CHARACTER       shift and go to state 85


state 56

    (46) while -> WHILE LPAR statement . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 86


state 57

    (65) statement -> expresion .
    (47) expresion -> expresion . comparador expresion
    (72) comparador -> . IGUAL IGUAL
    (73) comparador -> . MENOR
    (74) comparador -> . MAYOR
    (75) comparador -> . MENOR IGUAL
    (76) comparador -> . MAYOR IGUAL
    (77) comparador -> . EXCLAMACION IGUAL

    RPAR            reduce using rule 65 (statement -> expresion .)
    LLAVER          reduce using rule 65 (statement -> expresion .)
    IGUAL           shift and go to state 60
    MENOR           shift and go to state 61
    MAYOR           shift and go to state 62
    EXCLAMACION     shift and go to state 63

    comparador                     shift and go to state 59

state 58

    (109) asignarvalorobjeto -> LPAR expresion RPAR .

    $end            reduce using rule 109 (asignarvalorobjeto -> LPAR expresion RPAR .)


state 59

    (47) expresion -> expresion comparador . expresion
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    expresion                      shift and go to state 87
    valor                          shift and go to state 34

state 60

    (72) comparador -> IGUAL . IGUAL

    IGUAL           shift and go to state 88


state 61

    (73) comparador -> MENOR .
    (75) comparador -> MENOR . IGUAL

    ENTERO          reduce using rule 73 (comparador -> MENOR .)
    FLOTANTE        reduce using rule 73 (comparador -> MENOR .)
    CHARACTER       reduce using rule 73 (comparador -> MENOR .)
    STRING          reduce using rule 73 (comparador -> MENOR .)
    TRUE            reduce using rule 73 (comparador -> MENOR .)
    FALSE           reduce using rule 73 (comparador -> MENOR .)
    IDENTIFICADOR   reduce using rule 73 (comparador -> MENOR .)
    IGUAL           shift and go to state 89


state 62

    (74) comparador -> MAYOR .
    (76) comparador -> MAYOR . IGUAL

    ENTERO          reduce using rule 74 (comparador -> MAYOR .)
    FLOTANTE        reduce using rule 74 (comparador -> MAYOR .)
    CHARACTER       reduce using rule 74 (comparador -> MAYOR .)
    STRING          reduce using rule 74 (comparador -> MAYOR .)
    TRUE            reduce using rule 74 (comparador -> MAYOR .)
    FALSE           reduce using rule 74 (comparador -> MAYOR .)
    IDENTIFICADOR   reduce using rule 74 (comparador -> MAYOR .)
    IGUAL           shift and go to state 90


state 63

    (77) comparador -> EXCLAMACION . IGUAL

    IGUAL           shift and go to state 91


state 64

    (110) asignarvalorobjeto -> LPAR statement RPAR .

    $end            reduce using rule 110 (asignarvalorobjeto -> LPAR statement RPAR .)


state 65

    (66) statement -> EXCLAMACION boolean .

    RPAR            reduce using rule 66 (statement -> EXCLAMACION boolean .)
    LLAVER          reduce using rule 66 (statement -> EXCLAMACION boolean .)


state 66

    (67) statement -> EXCLAMACION LPAR . expresion RPAR
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    expresion                      shift and go to state 92
    valor                          shift and go to state 34

state 67

    (68) statement -> EXCLAMACION IDENTIFICADOR .

    RPAR            reduce using rule 68 (statement -> EXCLAMACION IDENTIFICADOR .)
    LLAVER          reduce using rule 68 (statement -> EXCLAMACION IDENTIFICADOR .)


state 68

    (69) boolean -> TRUE .

    RPAR            reduce using rule 69 (boolean -> TRUE .)
    LLAVER          reduce using rule 69 (boolean -> TRUE .)


state 69

    (70) boolean -> FALSE .

    RPAR            reduce using rule 70 (boolean -> FALSE .)
    LLAVER          reduce using rule 70 (boolean -> FALSE .)


state 70

    (49) expresionif -> IF LPAR condicionif . RPAR conllaves expresionpos
    (50) expresionif -> IF LPAR condicionif . RPAR sinllaves expresionpos

    RPAR            shift and go to state 93


state 71

    (62) condicionif -> initcondicion .

    RPAR            reduce using rule 62 (condicionif -> initcondicion .)


state 72

    (63) condicionif -> statement .

    RPAR            reduce using rule 63 (condicionif -> statement .)


state 73

    (64) initcondicion -> varblock . statement
    (21) varblock -> varblock . variable
    (65) statement -> . expresion
    (66) statement -> . EXCLAMACION boolean
    (67) statement -> . EXCLAMACION LPAR expresion RPAR
    (68) statement -> . EXCLAMACION IDENTIFICADOR
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 35
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    statement                      shift and go to state 94
    variable                       shift and go to state 95
    expresion                      shift and go to state 57
    valor                          shift and go to state 34
    numerotipo                     shift and go to state 13

state 74

    (90) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL . bloqueclase LLAVER
    (91) bloqueclase -> . bloqueclase definicion
    (92) bloqueclase -> . bloqueclase funcionclaseimpl
    (93) bloqueclase -> .

    LLAVER          reduce using rule 93 (bloqueclase -> .)
    VOID            reduce using rule 93 (bloqueclase -> .)
    INT             reduce using rule 93 (bloqueclase -> .)
    FLOAT           reduce using rule 93 (bloqueclase -> .)
    LONG            reduce using rule 93 (bloqueclase -> .)
    AUTO            reduce using rule 93 (bloqueclase -> .)
    CHAR            reduce using rule 93 (bloqueclase -> .)

    bloqueclase                    shift and go to state 101

state 75

    (96) funcionclaseimpl -> tipo IDENTIFICADOR LPAR . parametrosimplementacion RPAR LLAVEL funcionblock LLAVER
    (99) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (100) parametrosimplementacion -> .
    (33) tipo -> . INT
    (34) tipo -> . FLOAT
    (35) tipo -> . LONG
    (36) tipo -> . AUTO
    (37) tipo -> . CHAR
    (38) tipo -> . VOID

    RPAR            reduce using rule 100 (parametrosimplementacion -> .)
    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    LONG            shift and go to state 106
    AUTO            shift and go to state 107
    CHAR            shift and go to state 108
    VOID            shift and go to state 109

    tipo                           shift and go to state 102
    parametrosimplementacion       shift and go to state 103

state 76

    (97) funcionclaseimpl -> VOID IDENTIFICADOR LPAR . parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (99) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (100) parametrosimplementacion -> .
    (33) tipo -> . INT
    (34) tipo -> . FLOAT
    (35) tipo -> . LONG
    (36) tipo -> . AUTO
    (37) tipo -> . CHAR
    (38) tipo -> . VOID

    RPAR            reduce using rule 100 (parametrosimplementacion -> .)
    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    LONG            shift and go to state 106
    AUTO            shift and go to state 107
    CHAR            shift and go to state 108
    VOID            shift and go to state 109

    parametrosimplementacion       shift and go to state 110
    tipo                           shift and go to state 102

state 77

    (111) asignarvalorobjeto -> EXCLAMACION LPAR statement . RPAR

    RPAR            shift and go to state 111


state 78

    (48) struct -> STRUCT IDENTIFICADOR LLAVEL . varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (21) varblock -> . varblock variable
    (22) varblock -> .

    LLAVER          reduce using rule 22 (varblock -> .)
    AUTO            reduce using rule 22 (varblock -> .)
    CHAR            reduce using rule 22 (varblock -> .)
    INT             reduce using rule 22 (varblock -> .)
    FLOAT           reduce using rule 22 (varblock -> .)
    LONG            reduce using rule 22 (varblock -> .)

    varblock                       shift and go to state 112

state 79

    (23) variable -> AUTO IDENTIFICADOR IGUAL valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 113


state 80

    (108) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    valor                          shift and go to state 114

state 81

    (112) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR . parametrosfuncion RPAR PUNTOCOMA
    (101) parametrosfuncion -> . IDENTIFICADOR masparametrosfuncion
    (102) parametrosfuncion -> .

    IDENTIFICADOR   shift and go to state 115
    RPAR            reduce using rule 102 (parametrosfuncion -> .)

    parametrosfuncion              shift and go to state 116

state 82

    (25) variable -> numerotipo IDENTIFICADOR IGUAL numero . PUNTOCOMA

    PUNTOCOMA       shift and go to state 117


state 83

    (31) numero -> ENTERO .

    PUNTOCOMA       reduce using rule 31 (numero -> ENTERO .)


state 84

    (32) numero -> FLOTANTE .

    PUNTOCOMA       reduce using rule 32 (numero -> FLOTANTE .)


state 85

    (27) variable -> CHAR IDENTIFICADOR IGUAL CHARACTER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 118


state 86

    (46) while -> WHILE LPAR statement RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 119


state 87

    (47) expresion -> expresion comparador expresion .
    (47) expresion -> expresion . comparador expresion
    (72) comparador -> . IGUAL IGUAL
    (73) comparador -> . MENOR
    (74) comparador -> . MAYOR
    (75) comparador -> . MENOR IGUAL
    (76) comparador -> . MAYOR IGUAL
    (77) comparador -> . EXCLAMACION IGUAL

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for EXCLAMACION resolved as shift
    RPAR            reduce using rule 47 (expresion -> expresion comparador expresion .)
    LLAVER          reduce using rule 47 (expresion -> expresion comparador expresion .)
    IGUAL           shift and go to state 60
    MENOR           shift and go to state 61
    MAYOR           shift and go to state 62
    EXCLAMACION     shift and go to state 63

  ! IGUAL           [ reduce using rule 47 (expresion -> expresion comparador expresion .) ]
  ! MENOR           [ reduce using rule 47 (expresion -> expresion comparador expresion .) ]
  ! MAYOR           [ reduce using rule 47 (expresion -> expresion comparador expresion .) ]
  ! EXCLAMACION     [ reduce using rule 47 (expresion -> expresion comparador expresion .) ]

    comparador                     shift and go to state 59

state 88

    (72) comparador -> IGUAL IGUAL .

    ENTERO          reduce using rule 72 (comparador -> IGUAL IGUAL .)
    FLOTANTE        reduce using rule 72 (comparador -> IGUAL IGUAL .)
    CHARACTER       reduce using rule 72 (comparador -> IGUAL IGUAL .)
    STRING          reduce using rule 72 (comparador -> IGUAL IGUAL .)
    TRUE            reduce using rule 72 (comparador -> IGUAL IGUAL .)
    FALSE           reduce using rule 72 (comparador -> IGUAL IGUAL .)
    IDENTIFICADOR   reduce using rule 72 (comparador -> IGUAL IGUAL .)


state 89

    (75) comparador -> MENOR IGUAL .

    ENTERO          reduce using rule 75 (comparador -> MENOR IGUAL .)
    FLOTANTE        reduce using rule 75 (comparador -> MENOR IGUAL .)
    CHARACTER       reduce using rule 75 (comparador -> MENOR IGUAL .)
    STRING          reduce using rule 75 (comparador -> MENOR IGUAL .)
    TRUE            reduce using rule 75 (comparador -> MENOR IGUAL .)
    FALSE           reduce using rule 75 (comparador -> MENOR IGUAL .)
    IDENTIFICADOR   reduce using rule 75 (comparador -> MENOR IGUAL .)


state 90

    (76) comparador -> MAYOR IGUAL .

    ENTERO          reduce using rule 76 (comparador -> MAYOR IGUAL .)
    FLOTANTE        reduce using rule 76 (comparador -> MAYOR IGUAL .)
    CHARACTER       reduce using rule 76 (comparador -> MAYOR IGUAL .)
    STRING          reduce using rule 76 (comparador -> MAYOR IGUAL .)
    TRUE            reduce using rule 76 (comparador -> MAYOR IGUAL .)
    FALSE           reduce using rule 76 (comparador -> MAYOR IGUAL .)
    IDENTIFICADOR   reduce using rule 76 (comparador -> MAYOR IGUAL .)


state 91

    (77) comparador -> EXCLAMACION IGUAL .

    ENTERO          reduce using rule 77 (comparador -> EXCLAMACION IGUAL .)
    FLOTANTE        reduce using rule 77 (comparador -> EXCLAMACION IGUAL .)
    CHARACTER       reduce using rule 77 (comparador -> EXCLAMACION IGUAL .)
    STRING          reduce using rule 77 (comparador -> EXCLAMACION IGUAL .)
    TRUE            reduce using rule 77 (comparador -> EXCLAMACION IGUAL .)
    FALSE           reduce using rule 77 (comparador -> EXCLAMACION IGUAL .)
    IDENTIFICADOR   reduce using rule 77 (comparador -> EXCLAMACION IGUAL .)


state 92

    (67) statement -> EXCLAMACION LPAR expresion . RPAR
    (47) expresion -> expresion . comparador expresion
    (72) comparador -> . IGUAL IGUAL
    (73) comparador -> . MENOR
    (74) comparador -> . MAYOR
    (75) comparador -> . MENOR IGUAL
    (76) comparador -> . MAYOR IGUAL
    (77) comparador -> . EXCLAMACION IGUAL

    RPAR            shift and go to state 120
    IGUAL           shift and go to state 60
    MENOR           shift and go to state 61
    MAYOR           shift and go to state 62
    EXCLAMACION     shift and go to state 63

    comparador                     shift and go to state 59

state 93

    (49) expresionif -> IF LPAR condicionif RPAR . conllaves expresionpos
    (50) expresionif -> IF LPAR condicionif RPAR . sinllaves expresionpos
    (61) conllaves -> . LLAVEL bodyblock LLAVER
    (59) sinllaves -> . while
    (60) sinllaves -> . variable
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    LLAVEL          shift and go to state 123
    WHILE           shift and go to state 15
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    conllaves                      shift and go to state 121
    sinllaves                      shift and go to state 122
    while                          shift and go to state 124
    variable                       shift and go to state 125
    numerotipo                     shift and go to state 13

state 94

    (64) initcondicion -> varblock statement .

    RPAR            reduce using rule 64 (initcondicion -> varblock statement .)


state 95

    (21) varblock -> varblock variable .

    EXCLAMACION     reduce using rule 21 (varblock -> varblock variable .)
    AUTO            reduce using rule 21 (varblock -> varblock variable .)
    CHAR            reduce using rule 21 (varblock -> varblock variable .)
    INT             reduce using rule 21 (varblock -> varblock variable .)
    FLOAT           reduce using rule 21 (varblock -> varblock variable .)
    LONG            reduce using rule 21 (varblock -> varblock variable .)
    ENTERO          reduce using rule 21 (varblock -> varblock variable .)
    FLOTANTE        reduce using rule 21 (varblock -> varblock variable .)
    CHARACTER       reduce using rule 21 (varblock -> varblock variable .)
    STRING          reduce using rule 21 (varblock -> varblock variable .)
    TRUE            reduce using rule 21 (varblock -> varblock variable .)
    FALSE           reduce using rule 21 (varblock -> varblock variable .)
    IDENTIFICADOR   reduce using rule 21 (varblock -> varblock variable .)
    LLAVER          reduce using rule 21 (varblock -> varblock variable .)


state 96

    (23) variable -> AUTO . IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> AUTO . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 26


state 97

    (27) variable -> CHAR . IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 30


state 98

    (28) numerotipo -> INT .

    IDENTIFICADOR   reduce using rule 28 (numerotipo -> INT .)


state 99

    (29) numerotipo -> FLOAT .

    IDENTIFICADOR   reduce using rule 29 (numerotipo -> FLOAT .)


state 100

    (30) numerotipo -> LONG .

    IDENTIFICADOR   reduce using rule 30 (numerotipo -> LONG .)


state 101

    (90) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase . LLAVER
    (91) bloqueclase -> bloqueclase . definicion
    (92) bloqueclase -> bloqueclase . funcionclaseimpl
    (94) definicion -> . tipo IDENTIFICADOR PUNTOCOMA
    (95) definicion -> .
    (96) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER
    (97) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (98) funcionclaseimpl -> .
    (33) tipo -> . INT
    (34) tipo -> . FLOAT
    (35) tipo -> . LONG
    (36) tipo -> . AUTO
    (37) tipo -> . CHAR
    (38) tipo -> . VOID

  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 95 (definicion -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 95 (definicion -> .)
  ! reduce/reduce conflict for LONG resolved using rule 95 (definicion -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 95 (definicion -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 95 (definicion -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    LLAVER          shift and go to state 126
    VOID            shift and go to state 20
    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    LONG            shift and go to state 106
    AUTO            shift and go to state 107
    CHAR            shift and go to state 108

  ! LLAVER          [ reduce using rule 95 (definicion -> .) ]
  ! VOID            [ reduce using rule 95 (definicion -> .) ]
  ! INT             [ reduce using rule 95 (definicion -> .) ]
  ! FLOAT           [ reduce using rule 95 (definicion -> .) ]
  ! LONG            [ reduce using rule 95 (definicion -> .) ]
  ! AUTO            [ reduce using rule 95 (definicion -> .) ]
  ! CHAR            [ reduce using rule 95 (definicion -> .) ]
  ! LLAVER          [ reduce using rule 98 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 98 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 98 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 98 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 98 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 98 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 98 (funcionclaseimpl -> .) ]

    definicion                     shift and go to state 127
    funcionclaseimpl               shift and go to state 128
    tipo                           shift and go to state 129

state 102

    (99) parametrosimplementacion -> tipo . IDENTIFICADOR masparametrosimplementacion

    IDENTIFICADOR   shift and go to state 130


state 103

    (96) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion . RPAR LLAVEL funcionblock LLAVER

    RPAR            shift and go to state 131


state 104

    (33) tipo -> INT .

    IDENTIFICADOR   reduce using rule 33 (tipo -> INT .)


state 105

    (34) tipo -> FLOAT .

    IDENTIFICADOR   reduce using rule 34 (tipo -> FLOAT .)


state 106

    (35) tipo -> LONG .

    IDENTIFICADOR   reduce using rule 35 (tipo -> LONG .)


state 107

    (36) tipo -> AUTO .

    IDENTIFICADOR   reduce using rule 36 (tipo -> AUTO .)


state 108

    (37) tipo -> CHAR .

    IDENTIFICADOR   reduce using rule 37 (tipo -> CHAR .)


state 109

    (38) tipo -> VOID .

    IDENTIFICADOR   reduce using rule 38 (tipo -> VOID .)


state 110

    (97) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 132


state 111

    (111) asignarvalorobjeto -> EXCLAMACION LPAR statement RPAR .

    $end            reduce using rule 111 (asignarvalorobjeto -> EXCLAMACION LPAR statement RPAR .)


state 112

    (48) struct -> STRUCT IDENTIFICADOR LLAVEL varblock . LLAVER IDENTIFICADOR PUNTOCOMA
    (21) varblock -> varblock . variable
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    LLAVER          shift and go to state 133
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    variable                       shift and go to state 95
    numerotipo                     shift and go to state 13

state 113

    (23) variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .

    $end            reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    EXCLAMACION     reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    AUTO            reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    CHAR            reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    INT             reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FLOAT           reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    LONG            reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    ENTERO          reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    CHARACTER       reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    STRING          reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    TRUE            reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FALSE           reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    ELSE            reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    LLAVER          reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    WHILE           reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    IF              reduce using rule 23 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)


state 114

    (108) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor .

    $end            reduce using rule 108 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor .)


state 115

    (101) parametrosfuncion -> IDENTIFICADOR . masparametrosfuncion
    (105) masparametrosfuncion -> . COMMA parametrosfuncion
    (106) masparametrosfuncion -> .

    COMMA           shift and go to state 135
    RPAR            reduce using rule 106 (masparametrosfuncion -> .)

    masparametrosfuncion           shift and go to state 134

state 116

    (112) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion . RPAR PUNTOCOMA

    RPAR            shift and go to state 136


state 117

    (25) variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .

    $end            reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    EXCLAMACION     reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    AUTO            reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    CHAR            reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    INT             reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    FLOAT           reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    LONG            reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    ENTERO          reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    FLOTANTE        reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    CHARACTER       reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    STRING          reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    TRUE            reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    FALSE           reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    ELSE            reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    LLAVER          reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    WHILE           reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    IF              reduce using rule 25 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)


state 118

    (27) variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .

    $end            reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    AUTO            reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    CHAR            reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    INT             reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    FLOAT           reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    LONG            reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    ENTERO          reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    FLOTANTE        reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    CHARACTER       reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    STRING          reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    TRUE            reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    FALSE           reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    ELSE            reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    LLAVER          reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    WHILE           reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    IF              reduce using rule 27 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)


state 119

    (46) while -> WHILE LPAR statement RPAR LLAVEL . bodyblock LLAVER
    (12) bodyblock -> . bodyblock variable
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock expresionif
    (15) bodyblock -> .

    LLAVER          reduce using rule 15 (bodyblock -> .)
    AUTO            reduce using rule 15 (bodyblock -> .)
    CHAR            reduce using rule 15 (bodyblock -> .)
    WHILE           reduce using rule 15 (bodyblock -> .)
    IF              reduce using rule 15 (bodyblock -> .)
    INT             reduce using rule 15 (bodyblock -> .)
    FLOAT           reduce using rule 15 (bodyblock -> .)
    LONG            reduce using rule 15 (bodyblock -> .)

    bodyblock                      shift and go to state 137

state 120

    (67) statement -> EXCLAMACION LPAR expresion RPAR .

    RPAR            reduce using rule 67 (statement -> EXCLAMACION LPAR expresion RPAR .)
    LLAVER          reduce using rule 67 (statement -> EXCLAMACION LPAR expresion RPAR .)


state 121

    (49) expresionif -> IF LPAR condicionif RPAR conllaves . expresionpos
    (51) expresionpos -> . else
    (52) expresionpos -> . elseif
    (53) expresionpos -> .
    (57) else -> . ELSE conllaves
    (58) else -> . ELSE sinllaves
    (54) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (55) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (56) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for IF resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 53 (expresionpos -> .)
    $end            reduce using rule 53 (expresionpos -> .)
    LLAVER          reduce using rule 53 (expresionpos -> .)
    AUTO            reduce using rule 53 (expresionpos -> .)
    CHAR            reduce using rule 53 (expresionpos -> .)
    WHILE           reduce using rule 53 (expresionpos -> .)
    IF              reduce using rule 53 (expresionpos -> .)
    INT             reduce using rule 53 (expresionpos -> .)
    FLOAT           reduce using rule 53 (expresionpos -> .)
    LONG            reduce using rule 53 (expresionpos -> .)
    ELSE            shift and go to state 141

  ! $end            [ reduce using rule 56 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 56 (elseif -> .) ]
  ! AUTO            [ reduce using rule 56 (elseif -> .) ]
  ! CHAR            [ reduce using rule 56 (elseif -> .) ]
  ! WHILE           [ reduce using rule 56 (elseif -> .) ]
  ! IF              [ reduce using rule 56 (elseif -> .) ]
  ! INT             [ reduce using rule 56 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 56 (elseif -> .) ]
  ! LONG            [ reduce using rule 56 (elseif -> .) ]

    expresionpos                   shift and go to state 138
    else                           shift and go to state 139
    elseif                         shift and go to state 140

state 122

    (50) expresionif -> IF LPAR condicionif RPAR sinllaves . expresionpos
    (51) expresionpos -> . else
    (52) expresionpos -> . elseif
    (53) expresionpos -> .
    (57) else -> . ELSE conllaves
    (58) else -> . ELSE sinllaves
    (54) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (55) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (56) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for IF resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 53 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 53 (expresionpos -> .)
    $end            reduce using rule 53 (expresionpos -> .)
    LLAVER          reduce using rule 53 (expresionpos -> .)
    AUTO            reduce using rule 53 (expresionpos -> .)
    CHAR            reduce using rule 53 (expresionpos -> .)
    WHILE           reduce using rule 53 (expresionpos -> .)
    IF              reduce using rule 53 (expresionpos -> .)
    INT             reduce using rule 53 (expresionpos -> .)
    FLOAT           reduce using rule 53 (expresionpos -> .)
    LONG            reduce using rule 53 (expresionpos -> .)
    ELSE            shift and go to state 141

  ! $end            [ reduce using rule 56 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 56 (elseif -> .) ]
  ! AUTO            [ reduce using rule 56 (elseif -> .) ]
  ! CHAR            [ reduce using rule 56 (elseif -> .) ]
  ! WHILE           [ reduce using rule 56 (elseif -> .) ]
  ! IF              [ reduce using rule 56 (elseif -> .) ]
  ! INT             [ reduce using rule 56 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 56 (elseif -> .) ]
  ! LONG            [ reduce using rule 56 (elseif -> .) ]

    expresionpos                   shift and go to state 142
    else                           shift and go to state 139
    elseif                         shift and go to state 140

state 123

    (61) conllaves -> LLAVEL . bodyblock LLAVER
    (12) bodyblock -> . bodyblock variable
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock expresionif
    (15) bodyblock -> .

    LLAVER          reduce using rule 15 (bodyblock -> .)
    AUTO            reduce using rule 15 (bodyblock -> .)
    CHAR            reduce using rule 15 (bodyblock -> .)
    WHILE           reduce using rule 15 (bodyblock -> .)
    IF              reduce using rule 15 (bodyblock -> .)
    INT             reduce using rule 15 (bodyblock -> .)
    FLOAT           reduce using rule 15 (bodyblock -> .)
    LONG            reduce using rule 15 (bodyblock -> .)

    bodyblock                      shift and go to state 143

state 124

    (59) sinllaves -> while .

    ELSE            reduce using rule 59 (sinllaves -> while .)
    $end            reduce using rule 59 (sinllaves -> while .)
    LLAVER          reduce using rule 59 (sinllaves -> while .)
    AUTO            reduce using rule 59 (sinllaves -> while .)
    CHAR            reduce using rule 59 (sinllaves -> while .)
    WHILE           reduce using rule 59 (sinllaves -> while .)
    IF              reduce using rule 59 (sinllaves -> while .)
    INT             reduce using rule 59 (sinllaves -> while .)
    FLOAT           reduce using rule 59 (sinllaves -> while .)
    LONG            reduce using rule 59 (sinllaves -> while .)


state 125

    (60) sinllaves -> variable .

    ELSE            reduce using rule 60 (sinllaves -> variable .)
    $end            reduce using rule 60 (sinllaves -> variable .)
    LLAVER          reduce using rule 60 (sinllaves -> variable .)
    AUTO            reduce using rule 60 (sinllaves -> variable .)
    CHAR            reduce using rule 60 (sinllaves -> variable .)
    WHILE           reduce using rule 60 (sinllaves -> variable .)
    IF              reduce using rule 60 (sinllaves -> variable .)
    INT             reduce using rule 60 (sinllaves -> variable .)
    FLOAT           reduce using rule 60 (sinllaves -> variable .)
    LONG            reduce using rule 60 (sinllaves -> variable .)


state 126

    (90) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .

    $end            reduce using rule 90 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)


state 127

    (91) bloqueclase -> bloqueclase definicion .

    LLAVER          reduce using rule 91 (bloqueclase -> bloqueclase definicion .)
    VOID            reduce using rule 91 (bloqueclase -> bloqueclase definicion .)
    INT             reduce using rule 91 (bloqueclase -> bloqueclase definicion .)
    FLOAT           reduce using rule 91 (bloqueclase -> bloqueclase definicion .)
    LONG            reduce using rule 91 (bloqueclase -> bloqueclase definicion .)
    AUTO            reduce using rule 91 (bloqueclase -> bloqueclase definicion .)
    CHAR            reduce using rule 91 (bloqueclase -> bloqueclase definicion .)


state 128

    (92) bloqueclase -> bloqueclase funcionclaseimpl .

    LLAVER          reduce using rule 92 (bloqueclase -> bloqueclase funcionclaseimpl .)
    VOID            reduce using rule 92 (bloqueclase -> bloqueclase funcionclaseimpl .)
    INT             reduce using rule 92 (bloqueclase -> bloqueclase funcionclaseimpl .)
    FLOAT           reduce using rule 92 (bloqueclase -> bloqueclase funcionclaseimpl .)
    LONG            reduce using rule 92 (bloqueclase -> bloqueclase funcionclaseimpl .)
    AUTO            reduce using rule 92 (bloqueclase -> bloqueclase funcionclaseimpl .)
    CHAR            reduce using rule 92 (bloqueclase -> bloqueclase funcionclaseimpl .)


state 129

    (94) definicion -> tipo . IDENTIFICADOR PUNTOCOMA
    (96) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER

    IDENTIFICADOR   shift and go to state 144


state 130

    (99) parametrosimplementacion -> tipo IDENTIFICADOR . masparametrosimplementacion
    (103) masparametrosimplementacion -> . COMMA parametrosimplementacion
    (104) masparametrosimplementacion -> .

    COMMA           shift and go to state 146
    RPAR            reduce using rule 104 (masparametrosimplementacion -> .)

    masparametrosimplementacion    shift and go to state 145

state 131

    (96) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR . LLAVEL funcionblock LLAVER

    LLAVEL          shift and go to state 147


state 132

    (97) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 148


state 133

    (48) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 149


state 134

    (101) parametrosfuncion -> IDENTIFICADOR masparametrosfuncion .

    RPAR            reduce using rule 101 (parametrosfuncion -> IDENTIFICADOR masparametrosfuncion .)


state 135

    (105) masparametrosfuncion -> COMMA . parametrosfuncion
    (101) parametrosfuncion -> . IDENTIFICADOR masparametrosfuncion
    (102) parametrosfuncion -> .

    IDENTIFICADOR   shift and go to state 115
    RPAR            reduce using rule 102 (parametrosfuncion -> .)

    parametrosfuncion              shift and go to state 150

state 136

    (112) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 151


state 137

    (46) while -> WHILE LPAR statement RPAR LLAVEL bodyblock . LLAVER
    (12) bodyblock -> bodyblock . variable
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . expresionif
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (49) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (50) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    LLAVER          shift and go to state 152
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    variable                       shift and go to state 153
    while                          shift and go to state 154
    expresionif                    shift and go to state 155
    numerotipo                     shift and go to state 13

state 138

    (49) expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .

    $end            reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LLAVER          reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    AUTO            reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    CHAR            reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    WHILE           reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    IF              reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    INT             reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FLOAT           reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LONG            reduce using rule 49 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)


state 139

    (51) expresionpos -> else .

    $end            reduce using rule 51 (expresionpos -> else .)
    LLAVER          reduce using rule 51 (expresionpos -> else .)
    AUTO            reduce using rule 51 (expresionpos -> else .)
    CHAR            reduce using rule 51 (expresionpos -> else .)
    WHILE           reduce using rule 51 (expresionpos -> else .)
    IF              reduce using rule 51 (expresionpos -> else .)
    INT             reduce using rule 51 (expresionpos -> else .)
    FLOAT           reduce using rule 51 (expresionpos -> else .)
    LONG            reduce using rule 51 (expresionpos -> else .)


state 140

    (52) expresionpos -> elseif .

    $end            reduce using rule 52 (expresionpos -> elseif .)
    LLAVER          reduce using rule 52 (expresionpos -> elseif .)
    AUTO            reduce using rule 52 (expresionpos -> elseif .)
    CHAR            reduce using rule 52 (expresionpos -> elseif .)
    WHILE           reduce using rule 52 (expresionpos -> elseif .)
    IF              reduce using rule 52 (expresionpos -> elseif .)
    INT             reduce using rule 52 (expresionpos -> elseif .)
    FLOAT           reduce using rule 52 (expresionpos -> elseif .)
    LONG            reduce using rule 52 (expresionpos -> elseif .)


state 141

    (57) else -> ELSE . conllaves
    (58) else -> ELSE . sinllaves
    (54) elseif -> ELSE . IF LPAR condicionif RPAR conllaves else
    (55) elseif -> ELSE . IF LPAR condicionif RPAR sinllaves else
    (61) conllaves -> . LLAVEL bodyblock LLAVER
    (59) sinllaves -> . while
    (60) sinllaves -> . variable
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    IF              shift and go to state 158
    LLAVEL          shift and go to state 123
    WHILE           shift and go to state 15
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    conllaves                      shift and go to state 156
    sinllaves                      shift and go to state 157
    while                          shift and go to state 124
    variable                       shift and go to state 125
    numerotipo                     shift and go to state 13

state 142

    (50) expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .

    $end            reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LLAVER          reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    AUTO            reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    CHAR            reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    WHILE           reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    IF              reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    INT             reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FLOAT           reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LONG            reduce using rule 50 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)


state 143

    (61) conllaves -> LLAVEL bodyblock . LLAVER
    (12) bodyblock -> bodyblock . variable
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . expresionif
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (49) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (50) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    LLAVER          shift and go to state 159
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    variable                       shift and go to state 153
    while                          shift and go to state 154
    expresionif                    shift and go to state 155
    numerotipo                     shift and go to state 13

state 144

    (94) definicion -> tipo IDENTIFICADOR . PUNTOCOMA
    (96) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER

    PUNTOCOMA       shift and go to state 160
    LPAR            shift and go to state 75


state 145

    (99) parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion .

    RPAR            reduce using rule 99 (parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion .)


state 146

    (103) masparametrosimplementacion -> COMMA . parametrosimplementacion
    (99) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (100) parametrosimplementacion -> .
    (33) tipo -> . INT
    (34) tipo -> . FLOAT
    (35) tipo -> . LONG
    (36) tipo -> . AUTO
    (37) tipo -> . CHAR
    (38) tipo -> . VOID

    RPAR            reduce using rule 100 (parametrosimplementacion -> .)
    INT             shift and go to state 104
    FLOAT           shift and go to state 105
    LONG            shift and go to state 106
    AUTO            shift and go to state 107
    CHAR            shift and go to state 108
    VOID            shift and go to state 109

    parametrosimplementacion       shift and go to state 161
    tipo                           shift and go to state 102

state 147

    (96) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL . funcionblock LLAVER
    (16) funcionblock -> . bodyblock variable
    (17) funcionblock -> . bodyblock while
    (18) funcionblock -> . bodyblock expresionif
    (19) funcionblock -> . RETURN statement
    (20) funcionblock -> .
    (12) bodyblock -> . bodyblock variable
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock expresionif
    (15) bodyblock -> .

    RETURN          shift and go to state 164
    LLAVER          reduce using rule 20 (funcionblock -> .)
    AUTO            reduce using rule 15 (bodyblock -> .)
    CHAR            reduce using rule 15 (bodyblock -> .)
    WHILE           reduce using rule 15 (bodyblock -> .)
    IF              reduce using rule 15 (bodyblock -> .)
    INT             reduce using rule 15 (bodyblock -> .)
    FLOAT           reduce using rule 15 (bodyblock -> .)
    LONG            reduce using rule 15 (bodyblock -> .)

    funcionblock                   shift and go to state 162
    bodyblock                      shift and go to state 163

state 148

    (97) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL . bodyblock LLAVER
    (12) bodyblock -> . bodyblock variable
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock expresionif
    (15) bodyblock -> .

    LLAVER          reduce using rule 15 (bodyblock -> .)
    AUTO            reduce using rule 15 (bodyblock -> .)
    CHAR            reduce using rule 15 (bodyblock -> .)
    WHILE           reduce using rule 15 (bodyblock -> .)
    IF              reduce using rule 15 (bodyblock -> .)
    INT             reduce using rule 15 (bodyblock -> .)
    FLOAT           reduce using rule 15 (bodyblock -> .)
    LONG            reduce using rule 15 (bodyblock -> .)

    bodyblock                      shift and go to state 165

state 149

    (48) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 166


state 150

    (105) masparametrosfuncion -> COMMA parametrosfuncion .

    RPAR            reduce using rule 105 (masparametrosfuncion -> COMMA parametrosfuncion .)


state 151

    (112) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .

    $end            reduce using rule 112 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)


state 152

    (46) while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    ELSE            reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 46 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)


state 153

    (12) bodyblock -> bodyblock variable .

    LLAVER          reduce using rule 12 (bodyblock -> bodyblock variable .)
    AUTO            reduce using rule 12 (bodyblock -> bodyblock variable .)
    CHAR            reduce using rule 12 (bodyblock -> bodyblock variable .)
    WHILE           reduce using rule 12 (bodyblock -> bodyblock variable .)
    IF              reduce using rule 12 (bodyblock -> bodyblock variable .)
    INT             reduce using rule 12 (bodyblock -> bodyblock variable .)
    FLOAT           reduce using rule 12 (bodyblock -> bodyblock variable .)
    LONG            reduce using rule 12 (bodyblock -> bodyblock variable .)


state 154

    (13) bodyblock -> bodyblock while .

    LLAVER          reduce using rule 13 (bodyblock -> bodyblock while .)
    AUTO            reduce using rule 13 (bodyblock -> bodyblock while .)
    CHAR            reduce using rule 13 (bodyblock -> bodyblock while .)
    WHILE           reduce using rule 13 (bodyblock -> bodyblock while .)
    IF              reduce using rule 13 (bodyblock -> bodyblock while .)
    INT             reduce using rule 13 (bodyblock -> bodyblock while .)
    FLOAT           reduce using rule 13 (bodyblock -> bodyblock while .)
    LONG            reduce using rule 13 (bodyblock -> bodyblock while .)


state 155

    (14) bodyblock -> bodyblock expresionif .

    LLAVER          reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    AUTO            reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    CHAR            reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    WHILE           reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    IF              reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    INT             reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    FLOAT           reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    LONG            reduce using rule 14 (bodyblock -> bodyblock expresionif .)


state 156

    (57) else -> ELSE conllaves .

    $end            reduce using rule 57 (else -> ELSE conllaves .)
    LLAVER          reduce using rule 57 (else -> ELSE conllaves .)
    AUTO            reduce using rule 57 (else -> ELSE conllaves .)
    CHAR            reduce using rule 57 (else -> ELSE conllaves .)
    WHILE           reduce using rule 57 (else -> ELSE conllaves .)
    IF              reduce using rule 57 (else -> ELSE conllaves .)
    INT             reduce using rule 57 (else -> ELSE conllaves .)
    FLOAT           reduce using rule 57 (else -> ELSE conllaves .)
    LONG            reduce using rule 57 (else -> ELSE conllaves .)


state 157

    (58) else -> ELSE sinllaves .

    $end            reduce using rule 58 (else -> ELSE sinllaves .)
    LLAVER          reduce using rule 58 (else -> ELSE sinllaves .)
    AUTO            reduce using rule 58 (else -> ELSE sinllaves .)
    CHAR            reduce using rule 58 (else -> ELSE sinllaves .)
    WHILE           reduce using rule 58 (else -> ELSE sinllaves .)
    IF              reduce using rule 58 (else -> ELSE sinllaves .)
    INT             reduce using rule 58 (else -> ELSE sinllaves .)
    FLOAT           reduce using rule 58 (else -> ELSE sinllaves .)
    LONG            reduce using rule 58 (else -> ELSE sinllaves .)


state 158

    (54) elseif -> ELSE IF . LPAR condicionif RPAR conllaves else
    (55) elseif -> ELSE IF . LPAR condicionif RPAR sinllaves else

    LPAR            shift and go to state 167


state 159

    (61) conllaves -> LLAVEL bodyblock LLAVER .

    ELSE            reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    $end            reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 61 (conllaves -> LLAVEL bodyblock LLAVER .)


state 160

    (94) definicion -> tipo IDENTIFICADOR PUNTOCOMA .

    LLAVER          reduce using rule 94 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 94 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 94 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 94 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 94 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 94 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 94 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)


state 161

    (103) masparametrosimplementacion -> COMMA parametrosimplementacion .

    RPAR            reduce using rule 103 (masparametrosimplementacion -> COMMA parametrosimplementacion .)


state 162

    (96) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock . LLAVER

    LLAVER          shift and go to state 168


state 163

    (16) funcionblock -> bodyblock . variable
    (17) funcionblock -> bodyblock . while
    (18) funcionblock -> bodyblock . expresionif
    (12) bodyblock -> bodyblock . variable
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . expresionif
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (49) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (50) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    variable                       shift and go to state 169
    while                          shift and go to state 170
    expresionif                    shift and go to state 171
    numerotipo                     shift and go to state 13

state 164

    (19) funcionblock -> RETURN . statement
    (65) statement -> . expresion
    (66) statement -> . EXCLAMACION boolean
    (67) statement -> . EXCLAMACION LPAR expresion RPAR
    (68) statement -> . EXCLAMACION IDENTIFICADOR
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 35
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

    statement                      shift and go to state 172
    expresion                      shift and go to state 57
    valor                          shift and go to state 34

state 165

    (97) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock . LLAVER
    (12) bodyblock -> bodyblock . variable
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . expresionif
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (49) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (50) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    LLAVER          shift and go to state 173
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    WHILE           shift and go to state 15
    IF              shift and go to state 17
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    variable                       shift and go to state 153
    while                          shift and go to state 154
    expresionif                    shift and go to state 155
    numerotipo                     shift and go to state 13

state 166

    (48) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 48 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)


state 167

    (54) elseif -> ELSE IF LPAR . condicionif RPAR conllaves else
    (55) elseif -> ELSE IF LPAR . condicionif RPAR sinllaves else
    (62) condicionif -> . initcondicion
    (63) condicionif -> . statement
    (64) initcondicion -> . varblock statement
    (65) statement -> . expresion
    (66) statement -> . EXCLAMACION boolean
    (67) statement -> . EXCLAMACION LPAR expresion RPAR
    (68) statement -> . EXCLAMACION IDENTIFICADOR
    (21) varblock -> . varblock variable
    (22) varblock -> .
    (47) expresion -> . expresion comparador expresion
    (71) expresion -> . valor
    (39) valor -> . ENTERO
    (40) valor -> . FLOTANTE
    (41) valor -> . CHARACTER
    (42) valor -> . STRING
    (43) valor -> . TRUE
    (44) valor -> . FALSE
    (45) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 35
    AUTO            reduce using rule 22 (varblock -> .)
    CHAR            reduce using rule 22 (varblock -> .)
    INT             reduce using rule 22 (varblock -> .)
    FLOAT           reduce using rule 22 (varblock -> .)
    LONG            reduce using rule 22 (varblock -> .)
    ENTERO          shift and go to state 37
    FLOTANTE        shift and go to state 38
    CHARACTER       shift and go to state 39
    STRING          shift and go to state 40
    TRUE            shift and go to state 41
    FALSE           shift and go to state 42
    IDENTIFICADOR   shift and go to state 36

  ! EXCLAMACION     [ reduce using rule 22 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 22 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 22 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 22 (varblock -> .) ]
  ! STRING          [ reduce using rule 22 (varblock -> .) ]
  ! TRUE            [ reduce using rule 22 (varblock -> .) ]
  ! FALSE           [ reduce using rule 22 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 22 (varblock -> .) ]

    condicionif                    shift and go to state 174
    initcondicion                  shift and go to state 71
    statement                      shift and go to state 72
    varblock                       shift and go to state 73
    expresion                      shift and go to state 57
    valor                          shift and go to state 34

state 168

    (96) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .

    $end            reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)
    LLAVER          reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)
    VOID            reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)
    INT             reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)
    FLOAT           reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)
    LONG            reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)
    AUTO            reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)
    CHAR            reduce using rule 96 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL funcionblock LLAVER .)


state 169

    (16) funcionblock -> bodyblock variable .
    (12) bodyblock -> bodyblock variable .

    LLAVER          reduce using rule 16 (funcionblock -> bodyblock variable .)
    AUTO            reduce using rule 12 (bodyblock -> bodyblock variable .)
    CHAR            reduce using rule 12 (bodyblock -> bodyblock variable .)
    WHILE           reduce using rule 12 (bodyblock -> bodyblock variable .)
    IF              reduce using rule 12 (bodyblock -> bodyblock variable .)
    INT             reduce using rule 12 (bodyblock -> bodyblock variable .)
    FLOAT           reduce using rule 12 (bodyblock -> bodyblock variable .)
    LONG            reduce using rule 12 (bodyblock -> bodyblock variable .)


state 170

    (17) funcionblock -> bodyblock while .
    (13) bodyblock -> bodyblock while .

    LLAVER          reduce using rule 17 (funcionblock -> bodyblock while .)
    AUTO            reduce using rule 13 (bodyblock -> bodyblock while .)
    CHAR            reduce using rule 13 (bodyblock -> bodyblock while .)
    WHILE           reduce using rule 13 (bodyblock -> bodyblock while .)
    IF              reduce using rule 13 (bodyblock -> bodyblock while .)
    INT             reduce using rule 13 (bodyblock -> bodyblock while .)
    FLOAT           reduce using rule 13 (bodyblock -> bodyblock while .)
    LONG            reduce using rule 13 (bodyblock -> bodyblock while .)


state 171

    (18) funcionblock -> bodyblock expresionif .
    (14) bodyblock -> bodyblock expresionif .

    LLAVER          reduce using rule 18 (funcionblock -> bodyblock expresionif .)
    AUTO            reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    CHAR            reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    WHILE           reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    IF              reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    INT             reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    FLOAT           reduce using rule 14 (bodyblock -> bodyblock expresionif .)
    LONG            reduce using rule 14 (bodyblock -> bodyblock expresionif .)


state 172

    (19) funcionblock -> RETURN statement .

    LLAVER          reduce using rule 19 (funcionblock -> RETURN statement .)


state 173

    (97) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    VOID            reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 97 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)


state 174

    (54) elseif -> ELSE IF LPAR condicionif . RPAR conllaves else
    (55) elseif -> ELSE IF LPAR condicionif . RPAR sinllaves else

    RPAR            shift and go to state 175


state 175

    (54) elseif -> ELSE IF LPAR condicionif RPAR . conllaves else
    (55) elseif -> ELSE IF LPAR condicionif RPAR . sinllaves else
    (61) conllaves -> . LLAVEL bodyblock LLAVER
    (59) sinllaves -> . while
    (60) sinllaves -> . variable
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    LLAVEL          shift and go to state 123
    WHILE           shift and go to state 15
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    conllaves                      shift and go to state 176
    sinllaves                      shift and go to state 177
    while                          shift and go to state 124
    variable                       shift and go to state 125
    numerotipo                     shift and go to state 13

state 176

    (54) elseif -> ELSE IF LPAR condicionif RPAR conllaves . else
    (57) else -> . ELSE conllaves
    (58) else -> . ELSE sinllaves

    ELSE            shift and go to state 178

    else                           shift and go to state 179

state 177

    (55) elseif -> ELSE IF LPAR condicionif RPAR sinllaves . else
    (57) else -> . ELSE conllaves
    (58) else -> . ELSE sinllaves

    ELSE            shift and go to state 178

    else                           shift and go to state 180

state 178

    (57) else -> ELSE . conllaves
    (58) else -> ELSE . sinllaves
    (61) conllaves -> . LLAVEL bodyblock LLAVER
    (59) sinllaves -> . while
    (60) sinllaves -> . variable
    (46) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (23) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (24) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (25) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (26) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (27) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (28) numerotipo -> . INT
    (29) numerotipo -> . FLOAT
    (30) numerotipo -> . LONG

    LLAVEL          shift and go to state 123
    WHILE           shift and go to state 15
    AUTO            shift and go to state 96
    CHAR            shift and go to state 97
    INT             shift and go to state 98
    FLOAT           shift and go to state 99
    LONG            shift and go to state 100

    conllaves                      shift and go to state 156
    sinllaves                      shift and go to state 157
    while                          shift and go to state 124
    variable                       shift and go to state 125
    numerotipo                     shift and go to state 13

state 179

    (54) elseif -> ELSE IF LPAR condicionif RPAR conllaves else .

    $end            reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LLAVER          reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    AUTO            reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    CHAR            reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    WHILE           reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    IF              reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    INT             reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FLOAT           reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LONG            reduce using rule 54 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)


state 180

    (55) elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .

    $end            reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LLAVER          reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    AUTO            reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    CHAR            reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    WHILE           reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    IF              reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    INT             reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    FLOAT           reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LONG            reduce using rule 55 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for IDENTIFICADOR in state 11 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 14 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 20 resolved as shift
WARNING: shift/reduce conflict for RPAR in state 32 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 43 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 43 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 43 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 43 resolved as shift
WARNING: shift/reduce conflict for STRING in state 43 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 43 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 43 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 43 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 87 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 87 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 87 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 87 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 101 resolved as shift
WARNING: shift/reduce conflict for VOID in state 101 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 101 resolved as shift
WARNING: shift/reduce conflict for VOID in state 101 resolved as shift
WARNING: shift/reduce conflict for INT in state 101 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 101 resolved as shift
WARNING: shift/reduce conflict for LONG in state 101 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 101 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 101 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 167 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 167 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 167 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 167 resolved as shift
WARNING: shift/reduce conflict for STRING in state 167 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 167 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 167 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 167 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (body -> <empty>)
WARNING: rejected rule (funcionclaseimpl -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 23 resolved using rule (numerotipo -> INT)
WARNING: rejected rule (tipo -> INT) in state 23
WARNING: reduce/reduce conflict in state 24 resolved using rule (numerotipo -> FLOAT)
WARNING: rejected rule (tipo -> FLOAT) in state 24
WARNING: reduce/reduce conflict in state 25 resolved using rule (numerotipo -> LONG)
WARNING: rejected rule (tipo -> LONG) in state 25
WARNING: reduce/reduce conflict in state 101 resolved using rule (definicion -> <empty>)
WARNING: rejected rule (funcionclaseimpl -> <empty>) in state 101
WARNING: reduce/reduce conflict in state 121 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 121
WARNING: reduce/reduce conflict in state 122 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 122
WARNING: Rule (funcionclaseimpl -> <empty>) is never reduced
WARNING: Rule (elseif -> <empty>) is never reduced
