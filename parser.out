Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BACKSLASH
    CIRCUNFLEJO
    COMADOBLE
    COMASIMPLE
    COMENTARIO
    FINDELEMENT
    INTERROGACION
    NEW
    NULLPOINTER
    NUMERAL
    PIPE
    PORCENTAJE
    PUNTERO
    STATIC
    THEN
    VIRGUILA

Grammar

Rule 0     S' -> body
Rule 1     body -> comparar PUNTOCOMA
Rule 2     body -> variable
Rule 3     body -> imprimir
Rule 4     body -> while
Rule 5     body -> for
Rule 6     body -> struct
Rule 7     body -> claseimplementacion
Rule 8     body -> funcionclaseimpl
Rule 9     body -> expresionif
Rule 10    body -> mathoperation
Rule 11    empty -> <empty>
Rule 12    bodyblock -> empty
Rule 13    bodyblock -> bodyblock while
Rule 14    bodyblock -> bodyblock variable
Rule 15    bodyblock -> bodyblock for
Rule 16    bodyblock -> bodyblock struct
Rule 17    bodyblock -> bodyblock imprimir
Rule 18    bodyblock -> bodyblock expresionif
Rule 19    bodyblock -> bodyblock mathoperation
Rule 20    bodyblock -> bodyblock operacionbool
Rule 21    expresionif -> IF LPAR condicionif RPAR conllaves expresionpos
Rule 22    expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos
Rule 23    expresionif -> IF LPAR condicionif RPAR conllaves
Rule 24    expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA
Rule 25    expresionpos -> else
Rule 26    expresionpos -> elseif
Rule 27    elseif -> ELSE IF LPAR condicionif RPAR conllaves else
Rule 28    elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else
Rule 29    elseif -> ELSE IF LPAR condicionif RPAR conllaves
Rule 30    elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA
Rule 31    else -> ELSE conllaves
Rule 32    else -> ELSE sinllaves PUNTOCOMA
Rule 33    sinllaves -> while
Rule 34    sinllaves -> variable
Rule 35    conllaves -> LLAVEL bodyblock LLAVER
Rule 36    condicionif -> initcondicion
Rule 37    condicionif -> statement
Rule 38    initcondicion -> varblock statement
Rule 39    claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA
Rule 40    claseimplementacion -> CLASS IDENTIFICADOR LLAVEL LLAVER PUNTOCOMA
Rule 41    claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA
Rule 42    acceso -> PUBLIC DOBLEPUNTO
Rule 43    acceso -> PRIVATE DOBLEPUNTO
Rule 44    acceso -> PROTECTED DOBLEPUNTO
Rule 45    bloqueclase -> bloqueclase atributoclase
Rule 46    bloqueclase -> atributoclase
Rule 47    atributoclase -> definicion
Rule 48    atributoclase -> funcionclaseimpl
Rule 49    definicion -> numerotipo IDENTIFICADOR PUNTOCOMA
Rule 50    definicion -> STRING IDENTIFICADOR PUNTOCOMA
Rule 51    definicion -> CHAR IDENTIFICADOR PUNTOCOMA
Rule 52    definicion -> BOOL IDENTIFICADOR PUNTOCOMA
Rule 53    funcionclaseimpl -> funcionimplvoid
Rule 54    funcionclaseimpl -> funcionimplnumero
Rule 55    funcionclaseimpl -> funcionimplstring
Rule 56    funcionclaseimpl -> funcionimplbool
Rule 57    funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
Rule 58    funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
Rule 59    funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
Rule 60    funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER
Rule 61    funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
Rule 62    funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
Rule 63    funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA
Rule 64    funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
Rule 65    funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
Rule 66    funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA
Rule 67    parametrosimpl -> LPAR RPAR
Rule 68    parametrosimpl -> LPAR parametros RPAR
Rule 69    parametros -> tipo IDENTIFICADOR
Rule 70    parametros -> tipo IDENTIFICADOR masparametros
Rule 71    masparametros -> COMMA parametros
Rule 72    imprimir -> PRINT LPAR concat RPAR PUNTOCOMA
Rule 73    imprimir -> COUT MENOR MENOR concat PUNTOCOMA
Rule 74    while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
Rule 75    for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
Rule 76    varblock -> varblock variable
Rule 77    varblock -> variable
Rule 78    struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
Rule 79    struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
Rule 80    unaryexp -> IDENTIFICADOR MAS MAS
Rule 81    unaryexp -> IDENTIFICADOR MENOS MENOS
Rule 82    statement -> expresion
Rule 83    statement -> EXCLAMACION boolean
Rule 84    statement -> EXCLAMACION LPAR expresion RPAR
Rule 85    statement -> EXCLAMACION IDENTIFICADOR
Rule 86    statement -> boolean
Rule 87    statement -> numero
Rule 88    variable -> variableauto
Rule 89    variable -> variablenumero
Rule 90    variable -> variablechar
Rule 91    variable -> variablestring
Rule 92    variable -> variablearraynumero
Rule 93    variable -> variablearraychar
Rule 94    variable -> variableboolean
Rule 95    variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA
Rule 96    variablenumero -> numerotipo id PUNTOCOMA
Rule 97    variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
Rule 98    variableauto -> AUTO id IGUAL valor PUNTOCOMA
Rule 99    variableauto -> AUTO id PUNTOCOMA
Rule 100   variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA
Rule 101   variablechar -> CHAR id PUNTOCOMA
Rule 102   variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
Rule 103   variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA
Rule 104   variableboolean -> BOOL id PUNTOCOMA
Rule 105   variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
Rule 106   variablestring -> STRING id IGUAL stringappend PUNTOCOMA
Rule 107   variablestring -> STRING id IGUAL concat PUNTOCOMA
Rule 108   variablestring -> STRING id PUNTOCOMA
Rule 109   variablearraynumero -> numerotipo idarray PUNTOCOMA
Rule 110   variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
Rule 111   variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
Rule 112   arraydatanumero -> arraydatanumero COMMA numero
Rule 113   arraydatanumero -> numero
Rule 114   variablearraychar -> CHAR idarray PUNTOCOMA
Rule 115   variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
Rule 116   variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
Rule 117   variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA
Rule 118   datachar -> CHARACTER
Rule 119   datachar -> datachar COMMA CHARACTER
Rule 120   stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
Rule 121   concat -> stringdata MAS concat
Rule 122   concat -> stringdata
Rule 123   expresion -> valor comparador valor
Rule 124   expresion -> LPAR valor comparador valor RPAR
Rule 125   comparar -> expresion
Rule 126   comparar -> expresion comparador comparar
Rule 127   mathoperation -> numero operation
Rule 128   mathoperation -> numero
Rule 129   operation -> MAS mathoperation
Rule 130   operation -> MENOS mathoperation
Rule 131   operation -> ASTERISCO mathoperation
Rule 132   operation -> SLASH mathoperation
Rule 133   operacionbool -> boolean comparador boolean
Rule 134   operacionbool -> boolean
Rule 135   boolean -> TRUE
Rule 136   boolean -> FALSE
Rule 137   comparador -> IGUAL IGUAL
Rule 138   comparador -> MENOR
Rule 139   comparador -> MAYOR
Rule 140   comparador -> MENOR IGUAL
Rule 141   comparador -> MAYOR IGUAL
Rule 142   comparador -> EXCLAMACION IGUAL
Rule 143   id -> IDENTIFICADOR
Rule 144   idarray -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER
Rule 145   numero -> ENTERO
Rule 146   numero -> FLOTANTE
Rule 147   numerotipo -> INT
Rule 148   numerotipo -> FLOAT
Rule 149   numerotipo -> LONG
Rule 150   stringdata -> CADENA
Rule 151   stringdata -> IDENTIFICADOR
Rule 152   tipo -> numerotipo
Rule 153   tipo -> STRING
Rule 154   tipo -> CHAR
Rule 155   valor -> numero
Rule 156   valor -> CHARACTER
Rule 157   valor -> boolean
Rule 158   valor -> stringdata

Terminals, with rules where they appear

AND                  : 
APPEND               : 120
ASTERISCO            : 131
AUTO                 : 98 99
BACKSLASH            : 
BOOL                 : 52 64 65 66 103 104 105
CADENA               : 117 150
CHAR                 : 51 58 59 100 101 102 114 115 116 117 154
CHARACTER            : 58 100 118 119 156
CIRCUNFLEJO          : 
CLASS                : 39 40 41
COMADOBLE            : 
COMASIMPLE           : 
COMENTARIO           : 
COMMA                : 71 112 119
CORCHETEL            : 144
CORCHETER            : 144
COUT                 : 73
DOBLEPUNTO           : 42 43 44
ELSE                 : 27 28 29 30 31 32
ENTERO               : 144 145
EXCLAMACION          : 83 84 85 142
FALSE                : 136
FINDELEMENT          : 
FLOAT                : 148
FLOTANTE             : 146
FOR                  : 75
IDENTIFICADOR        : 39 40 41 49 50 51 52 57 58 59 59 60 61 62 62 63 64 65 65 66 69 70 75 78 78 79 79 80 81 85 97 102 105 120 143 144 151
IF                   : 21 22 23 24 27 28 29 30
IGUAL                : 75 95 97 98 100 102 103 105 106 107 110 111 115 116 117 137 137 140 141 142
INT                  : 147
INTERROGACION        : 
LLAVEL               : 35 39 40 41 57 58 59 60 61 62 64 65 74 75 78 79 110 111 115 116
LLAVER               : 35 39 40 41 57 58 59 60 61 62 64 65 74 75 78 79 110 111 115 116
LONG                 : 149
LPAR                 : 21 22 23 24 27 28 29 30 67 68 72 74 75 84 120 124
MAS                  : 80 80 121 129
MAYOR                : 139 141
MENOR                : 73 73 138 140
MENOS                : 81 81 130
NEW                  : 
NULLPOINTER          : 
NUMERAL              : 
PIPE                 : 
PORCENTAJE           : 
PRINT                : 72
PRIVATE              : 43
PROTECTED            : 44
PUBLIC               : 42
PUNTERO              : 
PUNTO                : 120
PUNTOCOMA            : 1 24 28 30 32 39 40 41 49 50 51 52 57 58 59 61 62 63 64 65 66 72 73 75 75 78 79 95 96 97 98 99 100 101 102 103 104 105 106 107 108 109 110 111 114 115 116 117
RETURN               : 57 58 59 61 62 64 65
RPAR                 : 21 22 23 24 27 28 29 30 67 68 72 74 75 84 120 124
SLASH                : 132
STATIC               : 
STRING               : 50 57 106 107 108 153
STRUCT               : 78 79
THEN                 : 
TRUE                 : 135
VIRGUILA             : 
VOID                 : 60
WHILE                : 74
error                : 

Nonterminals, with rules where they appear

acceso               : 41
arraydatanumero      : 110 112
atributoclase        : 45 46
bloqueclase          : 39 41 45
body                 : 0
bodyblock            : 13 14 15 16 17 18 19 20 35 57 58 59 60 61 62 64 65 74 75
boolean              : 64 83 86 133 133 134 157
claseimplementacion  : 7
comparador           : 123 124 126 133
comparar             : 1 126
concat               : 57 72 73 107 121
condicionif          : 21 22 23 24 27 28 29 30
conllaves            : 21 23 27 29 31
datachar             : 116 119
definicion           : 47
else                 : 25 27 28
elseif               : 26
empty                : 12
expresion            : 75 82 84 125 126
expresionif          : 9 18
expresionpos         : 21 22
for                  : 5 15
funcionclaseimpl     : 8 48
funcionimplbool      : 56
funcionimplnumero    : 54
funcionimplstring    : 55
funcionimplvoid      : 53
id                   : 95 96 97 98 99 100 101 102 103 104 105 106 107 108
idarray              : 109 110 111 114 115 116 117
imprimir             : 3 17
initcondicion        : 36
masparametros        : 70
mathoperation        : 10 19 95 129 130 131 132
numero               : 61 75 87 112 113 127 128 155
numerotipo           : 49 61 62 63 75 95 96 97 109 110 111 152
operacionbool        : 20 103
operation            : 127
parametros           : 68 71
parametrosimpl       : 57 58 59 60 61 62 63 64 65 66
sinllaves            : 22 24 28 30 32
statement            : 37 38 74
stringappend         : 106
stringdata           : 120 121 122 158
struct               : 6 16
tipo                 : 69 70
unaryexp             : 75
valor                : 98 123 123 124 124
varblock             : 38 76 79
variable             : 2 14 34 76 77
variablearraychar    : 93
variablearraynumero  : 92
variableauto         : 88
variableboolean      : 94
variablechar         : 90
variablenumero       : 89
variablestring       : 91
while                : 4 13 33

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . comparar PUNTOCOMA
    (2) body -> . variable
    (3) body -> . imprimir
    (4) body -> . while
    (5) body -> . for
    (6) body -> . struct
    (7) body -> . claseimplementacion
    (8) body -> . funcionclaseimpl
    (9) body -> . expresionif
    (10) body -> . mathoperation
    (125) comparar -> . expresion
    (126) comparar -> . expresion comparador comparar
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (39) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA
    (40) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL LLAVER PUNTOCOMA
    (41) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA
    (53) funcionclaseimpl -> . funcionimplvoid
    (54) funcionclaseimpl -> . funcionimplnumero
    (55) funcionclaseimpl -> . funcionimplstring
    (56) funcionclaseimpl -> . funcionimplbool
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (60) funcionimplvoid -> . VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER
    (61) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA
    (57) funcionimplstring -> . STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (58) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (64) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    CLASS           shift and go to state 29
    IF              shift and go to state 34
    LPAR            shift and go to state 21
    AUTO            shift and go to state 36
    CHAR            shift and go to state 37
    STRING          shift and go to state 39
    BOOL            shift and go to state 41
    VOID            shift and go to state 42
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    CHARACTER       shift and go to state 38
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    body                           shift and go to state 1
    comparar                       shift and go to state 2
    variable                       shift and go to state 3
    imprimir                       shift and go to state 4
    while                          shift and go to state 5
    for                            shift and go to state 6
    struct                         shift and go to state 7
    claseimplementacion            shift and go to state 8
    funcionclaseimpl               shift and go to state 9
    expresionif                    shift and go to state 10
    mathoperation                  shift and go to state 11
    expresion                      shift and go to state 12
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 25
    numero                         shift and go to state 27
    funcionimplvoid                shift and go to state 30
    funcionimplnumero              shift and go to state 31
    funcionimplstring              shift and go to state 32
    funcionimplbool                shift and go to state 33
    valor                          shift and go to state 35
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 1

    (0) S' -> body .



state 2

    (1) body -> comparar . PUNTOCOMA

    PUNTOCOMA       shift and go to state 52


state 3

    (2) body -> variable .

    $end            reduce using rule 2 (body -> variable .)


state 4

    (3) body -> imprimir .

    $end            reduce using rule 3 (body -> imprimir .)


state 5

    (4) body -> while .

    $end            reduce using rule 4 (body -> while .)


state 6

    (5) body -> for .

    $end            reduce using rule 5 (body -> for .)


state 7

    (6) body -> struct .

    $end            reduce using rule 6 (body -> struct .)


state 8

    (7) body -> claseimplementacion .

    $end            reduce using rule 7 (body -> claseimplementacion .)


state 9

    (8) body -> funcionclaseimpl .

    $end            reduce using rule 8 (body -> funcionclaseimpl .)


state 10

    (9) body -> expresionif .

    $end            reduce using rule 9 (body -> expresionif .)


state 11

    (10) body -> mathoperation .

    $end            reduce using rule 10 (body -> mathoperation .)


state 12

    (125) comparar -> expresion .
    (126) comparar -> expresion . comparador comparar
    (137) comparador -> . IGUAL IGUAL
    (138) comparador -> . MENOR
    (139) comparador -> . MAYOR
    (140) comparador -> . MENOR IGUAL
    (141) comparador -> . MAYOR IGUAL
    (142) comparador -> . EXCLAMACION IGUAL

    PUNTOCOMA       reduce using rule 125 (comparar -> expresion .)
    IGUAL           shift and go to state 54
    MENOR           shift and go to state 55
    MAYOR           shift and go to state 56
    EXCLAMACION     shift and go to state 57

    comparador                     shift and go to state 53

state 13

    (88) variable -> variableauto .

    $end            reduce using rule 88 (variable -> variableauto .)
    EXCLAMACION     reduce using rule 88 (variable -> variableauto .)
    LPAR            reduce using rule 88 (variable -> variableauto .)
    TRUE            reduce using rule 88 (variable -> variableauto .)
    FALSE           reduce using rule 88 (variable -> variableauto .)
    ENTERO          reduce using rule 88 (variable -> variableauto .)
    FLOTANTE        reduce using rule 88 (variable -> variableauto .)
    AUTO            reduce using rule 88 (variable -> variableauto .)
    CHAR            reduce using rule 88 (variable -> variableauto .)
    STRING          reduce using rule 88 (variable -> variableauto .)
    BOOL            reduce using rule 88 (variable -> variableauto .)
    CHARACTER       reduce using rule 88 (variable -> variableauto .)
    INT             reduce using rule 88 (variable -> variableauto .)
    FLOAT           reduce using rule 88 (variable -> variableauto .)
    LONG            reduce using rule 88 (variable -> variableauto .)
    CADENA          reduce using rule 88 (variable -> variableauto .)
    IDENTIFICADOR   reduce using rule 88 (variable -> variableauto .)
    LLAVER          reduce using rule 88 (variable -> variableauto .)
    PUNTOCOMA       reduce using rule 88 (variable -> variableauto .)
    ELSE            reduce using rule 88 (variable -> variableauto .)
    RETURN          reduce using rule 88 (variable -> variableauto .)
    WHILE           reduce using rule 88 (variable -> variableauto .)
    FOR             reduce using rule 88 (variable -> variableauto .)
    STRUCT          reduce using rule 88 (variable -> variableauto .)
    PRINT           reduce using rule 88 (variable -> variableauto .)
    COUT            reduce using rule 88 (variable -> variableauto .)
    IF              reduce using rule 88 (variable -> variableauto .)


state 14

    (89) variable -> variablenumero .

    $end            reduce using rule 89 (variable -> variablenumero .)
    EXCLAMACION     reduce using rule 89 (variable -> variablenumero .)
    LPAR            reduce using rule 89 (variable -> variablenumero .)
    TRUE            reduce using rule 89 (variable -> variablenumero .)
    FALSE           reduce using rule 89 (variable -> variablenumero .)
    ENTERO          reduce using rule 89 (variable -> variablenumero .)
    FLOTANTE        reduce using rule 89 (variable -> variablenumero .)
    AUTO            reduce using rule 89 (variable -> variablenumero .)
    CHAR            reduce using rule 89 (variable -> variablenumero .)
    STRING          reduce using rule 89 (variable -> variablenumero .)
    BOOL            reduce using rule 89 (variable -> variablenumero .)
    CHARACTER       reduce using rule 89 (variable -> variablenumero .)
    INT             reduce using rule 89 (variable -> variablenumero .)
    FLOAT           reduce using rule 89 (variable -> variablenumero .)
    LONG            reduce using rule 89 (variable -> variablenumero .)
    CADENA          reduce using rule 89 (variable -> variablenumero .)
    IDENTIFICADOR   reduce using rule 89 (variable -> variablenumero .)
    LLAVER          reduce using rule 89 (variable -> variablenumero .)
    PUNTOCOMA       reduce using rule 89 (variable -> variablenumero .)
    ELSE            reduce using rule 89 (variable -> variablenumero .)
    RETURN          reduce using rule 89 (variable -> variablenumero .)
    WHILE           reduce using rule 89 (variable -> variablenumero .)
    FOR             reduce using rule 89 (variable -> variablenumero .)
    STRUCT          reduce using rule 89 (variable -> variablenumero .)
    PRINT           reduce using rule 89 (variable -> variablenumero .)
    COUT            reduce using rule 89 (variable -> variablenumero .)
    IF              reduce using rule 89 (variable -> variablenumero .)


state 15

    (90) variable -> variablechar .

    $end            reduce using rule 90 (variable -> variablechar .)
    EXCLAMACION     reduce using rule 90 (variable -> variablechar .)
    LPAR            reduce using rule 90 (variable -> variablechar .)
    TRUE            reduce using rule 90 (variable -> variablechar .)
    FALSE           reduce using rule 90 (variable -> variablechar .)
    ENTERO          reduce using rule 90 (variable -> variablechar .)
    FLOTANTE        reduce using rule 90 (variable -> variablechar .)
    AUTO            reduce using rule 90 (variable -> variablechar .)
    CHAR            reduce using rule 90 (variable -> variablechar .)
    STRING          reduce using rule 90 (variable -> variablechar .)
    BOOL            reduce using rule 90 (variable -> variablechar .)
    CHARACTER       reduce using rule 90 (variable -> variablechar .)
    INT             reduce using rule 90 (variable -> variablechar .)
    FLOAT           reduce using rule 90 (variable -> variablechar .)
    LONG            reduce using rule 90 (variable -> variablechar .)
    CADENA          reduce using rule 90 (variable -> variablechar .)
    IDENTIFICADOR   reduce using rule 90 (variable -> variablechar .)
    LLAVER          reduce using rule 90 (variable -> variablechar .)
    PUNTOCOMA       reduce using rule 90 (variable -> variablechar .)
    ELSE            reduce using rule 90 (variable -> variablechar .)
    RETURN          reduce using rule 90 (variable -> variablechar .)
    WHILE           reduce using rule 90 (variable -> variablechar .)
    FOR             reduce using rule 90 (variable -> variablechar .)
    STRUCT          reduce using rule 90 (variable -> variablechar .)
    PRINT           reduce using rule 90 (variable -> variablechar .)
    COUT            reduce using rule 90 (variable -> variablechar .)
    IF              reduce using rule 90 (variable -> variablechar .)


state 16

    (91) variable -> variablestring .

    $end            reduce using rule 91 (variable -> variablestring .)
    EXCLAMACION     reduce using rule 91 (variable -> variablestring .)
    LPAR            reduce using rule 91 (variable -> variablestring .)
    TRUE            reduce using rule 91 (variable -> variablestring .)
    FALSE           reduce using rule 91 (variable -> variablestring .)
    ENTERO          reduce using rule 91 (variable -> variablestring .)
    FLOTANTE        reduce using rule 91 (variable -> variablestring .)
    AUTO            reduce using rule 91 (variable -> variablestring .)
    CHAR            reduce using rule 91 (variable -> variablestring .)
    STRING          reduce using rule 91 (variable -> variablestring .)
    BOOL            reduce using rule 91 (variable -> variablestring .)
    CHARACTER       reduce using rule 91 (variable -> variablestring .)
    INT             reduce using rule 91 (variable -> variablestring .)
    FLOAT           reduce using rule 91 (variable -> variablestring .)
    LONG            reduce using rule 91 (variable -> variablestring .)
    CADENA          reduce using rule 91 (variable -> variablestring .)
    IDENTIFICADOR   reduce using rule 91 (variable -> variablestring .)
    LLAVER          reduce using rule 91 (variable -> variablestring .)
    PUNTOCOMA       reduce using rule 91 (variable -> variablestring .)
    ELSE            reduce using rule 91 (variable -> variablestring .)
    RETURN          reduce using rule 91 (variable -> variablestring .)
    WHILE           reduce using rule 91 (variable -> variablestring .)
    FOR             reduce using rule 91 (variable -> variablestring .)
    STRUCT          reduce using rule 91 (variable -> variablestring .)
    PRINT           reduce using rule 91 (variable -> variablestring .)
    COUT            reduce using rule 91 (variable -> variablestring .)
    IF              reduce using rule 91 (variable -> variablestring .)


state 17

    (92) variable -> variablearraynumero .

    $end            reduce using rule 92 (variable -> variablearraynumero .)
    EXCLAMACION     reduce using rule 92 (variable -> variablearraynumero .)
    LPAR            reduce using rule 92 (variable -> variablearraynumero .)
    TRUE            reduce using rule 92 (variable -> variablearraynumero .)
    FALSE           reduce using rule 92 (variable -> variablearraynumero .)
    ENTERO          reduce using rule 92 (variable -> variablearraynumero .)
    FLOTANTE        reduce using rule 92 (variable -> variablearraynumero .)
    AUTO            reduce using rule 92 (variable -> variablearraynumero .)
    CHAR            reduce using rule 92 (variable -> variablearraynumero .)
    STRING          reduce using rule 92 (variable -> variablearraynumero .)
    BOOL            reduce using rule 92 (variable -> variablearraynumero .)
    CHARACTER       reduce using rule 92 (variable -> variablearraynumero .)
    INT             reduce using rule 92 (variable -> variablearraynumero .)
    FLOAT           reduce using rule 92 (variable -> variablearraynumero .)
    LONG            reduce using rule 92 (variable -> variablearraynumero .)
    CADENA          reduce using rule 92 (variable -> variablearraynumero .)
    IDENTIFICADOR   reduce using rule 92 (variable -> variablearraynumero .)
    LLAVER          reduce using rule 92 (variable -> variablearraynumero .)
    PUNTOCOMA       reduce using rule 92 (variable -> variablearraynumero .)
    ELSE            reduce using rule 92 (variable -> variablearraynumero .)
    RETURN          reduce using rule 92 (variable -> variablearraynumero .)
    WHILE           reduce using rule 92 (variable -> variablearraynumero .)
    FOR             reduce using rule 92 (variable -> variablearraynumero .)
    STRUCT          reduce using rule 92 (variable -> variablearraynumero .)
    PRINT           reduce using rule 92 (variable -> variablearraynumero .)
    COUT            reduce using rule 92 (variable -> variablearraynumero .)
    IF              reduce using rule 92 (variable -> variablearraynumero .)


state 18

    (93) variable -> variablearraychar .

    $end            reduce using rule 93 (variable -> variablearraychar .)
    EXCLAMACION     reduce using rule 93 (variable -> variablearraychar .)
    LPAR            reduce using rule 93 (variable -> variablearraychar .)
    TRUE            reduce using rule 93 (variable -> variablearraychar .)
    FALSE           reduce using rule 93 (variable -> variablearraychar .)
    ENTERO          reduce using rule 93 (variable -> variablearraychar .)
    FLOTANTE        reduce using rule 93 (variable -> variablearraychar .)
    AUTO            reduce using rule 93 (variable -> variablearraychar .)
    CHAR            reduce using rule 93 (variable -> variablearraychar .)
    STRING          reduce using rule 93 (variable -> variablearraychar .)
    BOOL            reduce using rule 93 (variable -> variablearraychar .)
    CHARACTER       reduce using rule 93 (variable -> variablearraychar .)
    INT             reduce using rule 93 (variable -> variablearraychar .)
    FLOAT           reduce using rule 93 (variable -> variablearraychar .)
    LONG            reduce using rule 93 (variable -> variablearraychar .)
    CADENA          reduce using rule 93 (variable -> variablearraychar .)
    IDENTIFICADOR   reduce using rule 93 (variable -> variablearraychar .)
    LLAVER          reduce using rule 93 (variable -> variablearraychar .)
    PUNTOCOMA       reduce using rule 93 (variable -> variablearraychar .)
    ELSE            reduce using rule 93 (variable -> variablearraychar .)
    RETURN          reduce using rule 93 (variable -> variablearraychar .)
    WHILE           reduce using rule 93 (variable -> variablearraychar .)
    FOR             reduce using rule 93 (variable -> variablearraychar .)
    STRUCT          reduce using rule 93 (variable -> variablearraychar .)
    PRINT           reduce using rule 93 (variable -> variablearraychar .)
    COUT            reduce using rule 93 (variable -> variablearraychar .)
    IF              reduce using rule 93 (variable -> variablearraychar .)


state 19

    (94) variable -> variableboolean .

    $end            reduce using rule 94 (variable -> variableboolean .)
    EXCLAMACION     reduce using rule 94 (variable -> variableboolean .)
    LPAR            reduce using rule 94 (variable -> variableboolean .)
    TRUE            reduce using rule 94 (variable -> variableboolean .)
    FALSE           reduce using rule 94 (variable -> variableboolean .)
    ENTERO          reduce using rule 94 (variable -> variableboolean .)
    FLOTANTE        reduce using rule 94 (variable -> variableboolean .)
    AUTO            reduce using rule 94 (variable -> variableboolean .)
    CHAR            reduce using rule 94 (variable -> variableboolean .)
    STRING          reduce using rule 94 (variable -> variableboolean .)
    BOOL            reduce using rule 94 (variable -> variableboolean .)
    CHARACTER       reduce using rule 94 (variable -> variableboolean .)
    INT             reduce using rule 94 (variable -> variableboolean .)
    FLOAT           reduce using rule 94 (variable -> variableboolean .)
    LONG            reduce using rule 94 (variable -> variableboolean .)
    CADENA          reduce using rule 94 (variable -> variableboolean .)
    IDENTIFICADOR   reduce using rule 94 (variable -> variableboolean .)
    LLAVER          reduce using rule 94 (variable -> variableboolean .)
    PUNTOCOMA       reduce using rule 94 (variable -> variableboolean .)
    ELSE            reduce using rule 94 (variable -> variableboolean .)
    RETURN          reduce using rule 94 (variable -> variableboolean .)
    WHILE           reduce using rule 94 (variable -> variableboolean .)
    FOR             reduce using rule 94 (variable -> variableboolean .)
    STRUCT          reduce using rule 94 (variable -> variableboolean .)
    PRINT           reduce using rule 94 (variable -> variableboolean .)
    COUT            reduce using rule 94 (variable -> variableboolean .)
    IF              reduce using rule 94 (variable -> variableboolean .)


state 20

    (72) imprimir -> PRINT . LPAR concat RPAR PUNTOCOMA

    LPAR            shift and go to state 58


state 21

    (124) expresion -> LPAR . valor comparador valor RPAR
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CHARACTER       shift and go to state 38
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    valor                          shift and go to state 59
    numero                         shift and go to state 60
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 22

    (73) imprimir -> COUT . MENOR MENOR concat PUNTOCOMA

    MENOR           shift and go to state 61


state 23

    (74) while -> WHILE . LPAR statement RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 62


state 24

    (75) for -> FOR . LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 63


state 25

    (95) variablenumero -> numerotipo . id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> numerotipo . id PUNTOCOMA
    (97) variablenumero -> numerotipo . id IGUAL IDENTIFICADOR PUNTOCOMA
    (109) variablearraynumero -> numerotipo . idarray PUNTOCOMA
    (110) variablearraynumero -> numerotipo . idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> numerotipo . idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (61) funcionimplnumero -> numerotipo . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> numerotipo . IDENTIFICADOR parametrosimpl PUNTOCOMA
    (143) id -> . IDENTIFICADOR
    (144) idarray -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 65

    id                             shift and go to state 64
    idarray                        shift and go to state 66

state 26

    (151) stringdata -> IDENTIFICADOR .

    IGUAL           reduce using rule 151 (stringdata -> IDENTIFICADOR .)
    MENOR           reduce using rule 151 (stringdata -> IDENTIFICADOR .)
    MAYOR           reduce using rule 151 (stringdata -> IDENTIFICADOR .)
    EXCLAMACION     reduce using rule 151 (stringdata -> IDENTIFICADOR .)
    MAS             reduce using rule 151 (stringdata -> IDENTIFICADOR .)
    RPAR            reduce using rule 151 (stringdata -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 151 (stringdata -> IDENTIFICADOR .)


state 27

    (127) mathoperation -> numero . operation
    (128) mathoperation -> numero .
    (155) valor -> numero .
    (129) operation -> . MAS mathoperation
    (130) operation -> . MENOS mathoperation
    (131) operation -> . ASTERISCO mathoperation
    (132) operation -> . SLASH mathoperation

    $end            reduce using rule 128 (mathoperation -> numero .)
    IGUAL           reduce using rule 155 (valor -> numero .)
    MENOR           reduce using rule 155 (valor -> numero .)
    MAYOR           reduce using rule 155 (valor -> numero .)
    EXCLAMACION     reduce using rule 155 (valor -> numero .)
    MAS             shift and go to state 68
    MENOS           shift and go to state 69
    ASTERISCO       shift and go to state 70
    SLASH           shift and go to state 71

    operation                      shift and go to state 67

state 28

    (78) struct -> STRUCT . IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> STRUCT . IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 72


state 29

    (39) claseimplementacion -> CLASS . IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA
    (40) claseimplementacion -> CLASS . IDENTIFICADOR LLAVEL LLAVER PUNTOCOMA
    (41) claseimplementacion -> CLASS . IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 73


state 30

    (53) funcionclaseimpl -> funcionimplvoid .

    $end            reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    LLAVER          reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    STRING          reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    CHAR            reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    BOOL            reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    INT             reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    FLOAT           reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    LONG            reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)
    VOID            reduce using rule 53 (funcionclaseimpl -> funcionimplvoid .)


state 31

    (54) funcionclaseimpl -> funcionimplnumero .

    $end            reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    LLAVER          reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    STRING          reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    CHAR            reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    BOOL            reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    INT             reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    FLOAT           reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    LONG            reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)
    VOID            reduce using rule 54 (funcionclaseimpl -> funcionimplnumero .)


state 32

    (55) funcionclaseimpl -> funcionimplstring .

    $end            reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    LLAVER          reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    STRING          reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    CHAR            reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    BOOL            reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    INT             reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    FLOAT           reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    LONG            reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)
    VOID            reduce using rule 55 (funcionclaseimpl -> funcionimplstring .)


state 33

    (56) funcionclaseimpl -> funcionimplbool .

    $end            reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    LLAVER          reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    STRING          reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    CHAR            reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    BOOL            reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    INT             reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    FLOAT           reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    LONG            reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)
    VOID            reduce using rule 56 (funcionclaseimpl -> funcionimplbool .)


state 34

    (21) expresionif -> IF . LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> IF . LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> IF . LPAR condicionif RPAR conllaves
    (24) expresionif -> IF . LPAR condicionif RPAR sinllaves PUNTOCOMA

    LPAR            shift and go to state 74


state 35

    (123) expresion -> valor . comparador valor
    (137) comparador -> . IGUAL IGUAL
    (138) comparador -> . MENOR
    (139) comparador -> . MAYOR
    (140) comparador -> . MENOR IGUAL
    (141) comparador -> . MAYOR IGUAL
    (142) comparador -> . EXCLAMACION IGUAL

    IGUAL           shift and go to state 54
    MENOR           shift and go to state 55
    MAYOR           shift and go to state 56
    EXCLAMACION     shift and go to state 57

    comparador                     shift and go to state 75

state 36

    (98) variableauto -> AUTO . id IGUAL valor PUNTOCOMA
    (99) variableauto -> AUTO . id PUNTOCOMA
    (143) id -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 77

    id                             shift and go to state 76

state 37

    (100) variablechar -> CHAR . id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> CHAR . id PUNTOCOMA
    (102) variablechar -> CHAR . id IGUAL IDENTIFICADOR PUNTOCOMA
    (114) variablearraychar -> CHAR . idarray PUNTOCOMA
    (115) variablearraychar -> CHAR . idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> CHAR . idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> CHAR . idarray IGUAL CADENA PUNTOCOMA
    (58) funcionimplstring -> CHAR . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (143) id -> . IDENTIFICADOR
    (144) idarray -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 79

    id                             shift and go to state 78
    idarray                        shift and go to state 80

state 38

    (156) valor -> CHARACTER .

    IGUAL           reduce using rule 156 (valor -> CHARACTER .)
    MENOR           reduce using rule 156 (valor -> CHARACTER .)
    MAYOR           reduce using rule 156 (valor -> CHARACTER .)
    EXCLAMACION     reduce using rule 156 (valor -> CHARACTER .)
    PUNTOCOMA       reduce using rule 156 (valor -> CHARACTER .)
    RPAR            reduce using rule 156 (valor -> CHARACTER .)


state 39

    (106) variablestring -> STRING . id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> STRING . id IGUAL concat PUNTOCOMA
    (108) variablestring -> STRING . id PUNTOCOMA
    (57) funcionimplstring -> STRING . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (143) id -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 82

    id                             shift and go to state 81

state 40

    (150) stringdata -> CADENA .

    IGUAL           reduce using rule 150 (stringdata -> CADENA .)
    MENOR           reduce using rule 150 (stringdata -> CADENA .)
    MAYOR           reduce using rule 150 (stringdata -> CADENA .)
    EXCLAMACION     reduce using rule 150 (stringdata -> CADENA .)
    MAS             reduce using rule 150 (stringdata -> CADENA .)
    RPAR            reduce using rule 150 (stringdata -> CADENA .)
    PUNTOCOMA       reduce using rule 150 (stringdata -> CADENA .)


state 41

    (103) variableboolean -> BOOL . id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> BOOL . id PUNTOCOMA
    (105) variableboolean -> BOOL . id IGUAL IDENTIFICADOR PUNTOCOMA
    (64) funcionimplbool -> BOOL . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> BOOL . IDENTIFICADOR parametrosimpl PUNTOCOMA
    (143) id -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 84

    id                             shift and go to state 83

state 42

    (60) funcionimplvoid -> VOID . IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER

    IDENTIFICADOR   shift and go to state 85


state 43

    (157) valor -> boolean .

    IGUAL           reduce using rule 157 (valor -> boolean .)
    MENOR           reduce using rule 157 (valor -> boolean .)
    MAYOR           reduce using rule 157 (valor -> boolean .)
    EXCLAMACION     reduce using rule 157 (valor -> boolean .)
    PUNTOCOMA       reduce using rule 157 (valor -> boolean .)
    RPAR            reduce using rule 157 (valor -> boolean .)


state 44

    (145) numero -> ENTERO .

    MAS             reduce using rule 145 (numero -> ENTERO .)
    MENOS           reduce using rule 145 (numero -> ENTERO .)
    ASTERISCO       reduce using rule 145 (numero -> ENTERO .)
    SLASH           reduce using rule 145 (numero -> ENTERO .)
    $end            reduce using rule 145 (numero -> ENTERO .)
    IGUAL           reduce using rule 145 (numero -> ENTERO .)
    MENOR           reduce using rule 145 (numero -> ENTERO .)
    MAYOR           reduce using rule 145 (numero -> ENTERO .)
    EXCLAMACION     reduce using rule 145 (numero -> ENTERO .)
    RPAR            reduce using rule 145 (numero -> ENTERO .)
    PUNTOCOMA       reduce using rule 145 (numero -> ENTERO .)
    RETURN          reduce using rule 145 (numero -> ENTERO .)
    WHILE           reduce using rule 145 (numero -> ENTERO .)
    FOR             reduce using rule 145 (numero -> ENTERO .)
    STRUCT          reduce using rule 145 (numero -> ENTERO .)
    PRINT           reduce using rule 145 (numero -> ENTERO .)
    COUT            reduce using rule 145 (numero -> ENTERO .)
    IF              reduce using rule 145 (numero -> ENTERO .)
    AUTO            reduce using rule 145 (numero -> ENTERO .)
    CHAR            reduce using rule 145 (numero -> ENTERO .)
    STRING          reduce using rule 145 (numero -> ENTERO .)
    BOOL            reduce using rule 145 (numero -> ENTERO .)
    ENTERO          reduce using rule 145 (numero -> ENTERO .)
    FLOTANTE        reduce using rule 145 (numero -> ENTERO .)
    TRUE            reduce using rule 145 (numero -> ENTERO .)
    FALSE           reduce using rule 145 (numero -> ENTERO .)
    INT             reduce using rule 145 (numero -> ENTERO .)
    FLOAT           reduce using rule 145 (numero -> ENTERO .)
    LONG            reduce using rule 145 (numero -> ENTERO .)
    LLAVER          reduce using rule 145 (numero -> ENTERO .)
    COMMA           reduce using rule 145 (numero -> ENTERO .)


state 45

    (146) numero -> FLOTANTE .

    MAS             reduce using rule 146 (numero -> FLOTANTE .)
    MENOS           reduce using rule 146 (numero -> FLOTANTE .)
    ASTERISCO       reduce using rule 146 (numero -> FLOTANTE .)
    SLASH           reduce using rule 146 (numero -> FLOTANTE .)
    $end            reduce using rule 146 (numero -> FLOTANTE .)
    IGUAL           reduce using rule 146 (numero -> FLOTANTE .)
    MENOR           reduce using rule 146 (numero -> FLOTANTE .)
    MAYOR           reduce using rule 146 (numero -> FLOTANTE .)
    EXCLAMACION     reduce using rule 146 (numero -> FLOTANTE .)
    RPAR            reduce using rule 146 (numero -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 146 (numero -> FLOTANTE .)
    RETURN          reduce using rule 146 (numero -> FLOTANTE .)
    WHILE           reduce using rule 146 (numero -> FLOTANTE .)
    FOR             reduce using rule 146 (numero -> FLOTANTE .)
    STRUCT          reduce using rule 146 (numero -> FLOTANTE .)
    PRINT           reduce using rule 146 (numero -> FLOTANTE .)
    COUT            reduce using rule 146 (numero -> FLOTANTE .)
    IF              reduce using rule 146 (numero -> FLOTANTE .)
    AUTO            reduce using rule 146 (numero -> FLOTANTE .)
    CHAR            reduce using rule 146 (numero -> FLOTANTE .)
    STRING          reduce using rule 146 (numero -> FLOTANTE .)
    BOOL            reduce using rule 146 (numero -> FLOTANTE .)
    ENTERO          reduce using rule 146 (numero -> FLOTANTE .)
    FLOTANTE        reduce using rule 146 (numero -> FLOTANTE .)
    TRUE            reduce using rule 146 (numero -> FLOTANTE .)
    FALSE           reduce using rule 146 (numero -> FLOTANTE .)
    INT             reduce using rule 146 (numero -> FLOTANTE .)
    FLOAT           reduce using rule 146 (numero -> FLOTANTE .)
    LONG            reduce using rule 146 (numero -> FLOTANTE .)
    LLAVER          reduce using rule 146 (numero -> FLOTANTE .)
    COMMA           reduce using rule 146 (numero -> FLOTANTE .)


state 46

    (158) valor -> stringdata .

    IGUAL           reduce using rule 158 (valor -> stringdata .)
    MENOR           reduce using rule 158 (valor -> stringdata .)
    MAYOR           reduce using rule 158 (valor -> stringdata .)
    EXCLAMACION     reduce using rule 158 (valor -> stringdata .)
    PUNTOCOMA       reduce using rule 158 (valor -> stringdata .)
    RPAR            reduce using rule 158 (valor -> stringdata .)


state 47

    (147) numerotipo -> INT .

    IDENTIFICADOR   reduce using rule 147 (numerotipo -> INT .)


state 48

    (148) numerotipo -> FLOAT .

    IDENTIFICADOR   reduce using rule 148 (numerotipo -> FLOAT .)


state 49

    (149) numerotipo -> LONG .

    IDENTIFICADOR   reduce using rule 149 (numerotipo -> LONG .)


state 50

    (135) boolean -> TRUE .

    IGUAL           reduce using rule 135 (boolean -> TRUE .)
    MENOR           reduce using rule 135 (boolean -> TRUE .)
    MAYOR           reduce using rule 135 (boolean -> TRUE .)
    EXCLAMACION     reduce using rule 135 (boolean -> TRUE .)
    RPAR            reduce using rule 135 (boolean -> TRUE .)
    PUNTOCOMA       reduce using rule 135 (boolean -> TRUE .)
    RETURN          reduce using rule 135 (boolean -> TRUE .)
    WHILE           reduce using rule 135 (boolean -> TRUE .)
    FOR             reduce using rule 135 (boolean -> TRUE .)
    STRUCT          reduce using rule 135 (boolean -> TRUE .)
    PRINT           reduce using rule 135 (boolean -> TRUE .)
    COUT            reduce using rule 135 (boolean -> TRUE .)
    IF              reduce using rule 135 (boolean -> TRUE .)
    AUTO            reduce using rule 135 (boolean -> TRUE .)
    CHAR            reduce using rule 135 (boolean -> TRUE .)
    STRING          reduce using rule 135 (boolean -> TRUE .)
    BOOL            reduce using rule 135 (boolean -> TRUE .)
    ENTERO          reduce using rule 135 (boolean -> TRUE .)
    FLOTANTE        reduce using rule 135 (boolean -> TRUE .)
    TRUE            reduce using rule 135 (boolean -> TRUE .)
    FALSE           reduce using rule 135 (boolean -> TRUE .)
    INT             reduce using rule 135 (boolean -> TRUE .)
    FLOAT           reduce using rule 135 (boolean -> TRUE .)
    LONG            reduce using rule 135 (boolean -> TRUE .)
    LLAVER          reduce using rule 135 (boolean -> TRUE .)


state 51

    (136) boolean -> FALSE .

    IGUAL           reduce using rule 136 (boolean -> FALSE .)
    MENOR           reduce using rule 136 (boolean -> FALSE .)
    MAYOR           reduce using rule 136 (boolean -> FALSE .)
    EXCLAMACION     reduce using rule 136 (boolean -> FALSE .)
    RPAR            reduce using rule 136 (boolean -> FALSE .)
    PUNTOCOMA       reduce using rule 136 (boolean -> FALSE .)
    RETURN          reduce using rule 136 (boolean -> FALSE .)
    WHILE           reduce using rule 136 (boolean -> FALSE .)
    FOR             reduce using rule 136 (boolean -> FALSE .)
    STRUCT          reduce using rule 136 (boolean -> FALSE .)
    PRINT           reduce using rule 136 (boolean -> FALSE .)
    COUT            reduce using rule 136 (boolean -> FALSE .)
    IF              reduce using rule 136 (boolean -> FALSE .)
    AUTO            reduce using rule 136 (boolean -> FALSE .)
    CHAR            reduce using rule 136 (boolean -> FALSE .)
    STRING          reduce using rule 136 (boolean -> FALSE .)
    BOOL            reduce using rule 136 (boolean -> FALSE .)
    ENTERO          reduce using rule 136 (boolean -> FALSE .)
    FLOTANTE        reduce using rule 136 (boolean -> FALSE .)
    TRUE            reduce using rule 136 (boolean -> FALSE .)
    FALSE           reduce using rule 136 (boolean -> FALSE .)
    INT             reduce using rule 136 (boolean -> FALSE .)
    FLOAT           reduce using rule 136 (boolean -> FALSE .)
    LONG            reduce using rule 136 (boolean -> FALSE .)
    LLAVER          reduce using rule 136 (boolean -> FALSE .)


state 52

    (1) body -> comparar PUNTOCOMA .

    $end            reduce using rule 1 (body -> comparar PUNTOCOMA .)


state 53

    (126) comparar -> expresion comparador . comparar
    (125) comparar -> . expresion
    (126) comparar -> . expresion comparador comparar
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    LPAR            shift and go to state 21
    CHARACTER       shift and go to state 38
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    expresion                      shift and go to state 12
    comparar                       shift and go to state 86
    valor                          shift and go to state 35
    numero                         shift and go to state 60
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 54

    (137) comparador -> IGUAL . IGUAL

    IGUAL           shift and go to state 87


state 55

    (138) comparador -> MENOR .
    (140) comparador -> MENOR . IGUAL

    LPAR            reduce using rule 138 (comparador -> MENOR .)
    CHARACTER       reduce using rule 138 (comparador -> MENOR .)
    ENTERO          reduce using rule 138 (comparador -> MENOR .)
    FLOTANTE        reduce using rule 138 (comparador -> MENOR .)
    TRUE            reduce using rule 138 (comparador -> MENOR .)
    FALSE           reduce using rule 138 (comparador -> MENOR .)
    CADENA          reduce using rule 138 (comparador -> MENOR .)
    IDENTIFICADOR   reduce using rule 138 (comparador -> MENOR .)
    IGUAL           shift and go to state 88


state 56

    (139) comparador -> MAYOR .
    (141) comparador -> MAYOR . IGUAL

    LPAR            reduce using rule 139 (comparador -> MAYOR .)
    CHARACTER       reduce using rule 139 (comparador -> MAYOR .)
    ENTERO          reduce using rule 139 (comparador -> MAYOR .)
    FLOTANTE        reduce using rule 139 (comparador -> MAYOR .)
    TRUE            reduce using rule 139 (comparador -> MAYOR .)
    FALSE           reduce using rule 139 (comparador -> MAYOR .)
    CADENA          reduce using rule 139 (comparador -> MAYOR .)
    IDENTIFICADOR   reduce using rule 139 (comparador -> MAYOR .)
    IGUAL           shift and go to state 89


state 57

    (142) comparador -> EXCLAMACION . IGUAL

    IGUAL           shift and go to state 90


state 58

    (72) imprimir -> PRINT LPAR . concat RPAR PUNTOCOMA
    (121) concat -> . stringdata MAS concat
    (122) concat -> . stringdata
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    concat                         shift and go to state 91
    stringdata                     shift and go to state 92

state 59

    (124) expresion -> LPAR valor . comparador valor RPAR
    (137) comparador -> . IGUAL IGUAL
    (138) comparador -> . MENOR
    (139) comparador -> . MAYOR
    (140) comparador -> . MENOR IGUAL
    (141) comparador -> . MAYOR IGUAL
    (142) comparador -> . EXCLAMACION IGUAL

    IGUAL           shift and go to state 54
    MENOR           shift and go to state 55
    MAYOR           shift and go to state 56
    EXCLAMACION     shift and go to state 57

    comparador                     shift and go to state 93

state 60

    (155) valor -> numero .

    IGUAL           reduce using rule 155 (valor -> numero .)
    MENOR           reduce using rule 155 (valor -> numero .)
    MAYOR           reduce using rule 155 (valor -> numero .)
    EXCLAMACION     reduce using rule 155 (valor -> numero .)
    PUNTOCOMA       reduce using rule 155 (valor -> numero .)
    RPAR            reduce using rule 155 (valor -> numero .)


state 61

    (73) imprimir -> COUT MENOR . MENOR concat PUNTOCOMA

    MENOR           shift and go to state 94


state 62

    (74) while -> WHILE LPAR . statement RPAR LLAVEL bodyblock LLAVER
    (82) statement -> . expresion
    (83) statement -> . EXCLAMACION boolean
    (84) statement -> . EXCLAMACION LPAR expresion RPAR
    (85) statement -> . EXCLAMACION IDENTIFICADOR
    (86) statement -> . boolean
    (87) statement -> . numero
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 97
    LPAR            shift and go to state 21
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    CHARACTER       shift and go to state 38
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    statement                      shift and go to state 95
    expresion                      shift and go to state 96
    boolean                        shift and go to state 98
    numero                         shift and go to state 99
    valor                          shift and go to state 35
    stringdata                     shift and go to state 46

state 63

    (75) for -> FOR LPAR . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    numerotipo                     shift and go to state 100

state 64

    (95) variablenumero -> numerotipo id . IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> numerotipo id . PUNTOCOMA
    (97) variablenumero -> numerotipo id . IGUAL IDENTIFICADOR PUNTOCOMA

    IGUAL           shift and go to state 101
    PUNTOCOMA       shift and go to state 102


state 65

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> numerotipo IDENTIFICADOR . parametrosimpl PUNTOCOMA
    (143) id -> IDENTIFICADOR .
    (144) idarray -> IDENTIFICADOR . CORCHETEL ENTERO CORCHETER
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    IGUAL           reduce using rule 143 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 143 (id -> IDENTIFICADOR .)
    CORCHETEL       shift and go to state 104
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 103

state 66

    (109) variablearraynumero -> numerotipo idarray . PUNTOCOMA
    (110) variablearraynumero -> numerotipo idarray . IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> numerotipo idarray . IGUAL LLAVEL LLAVER PUNTOCOMA

    PUNTOCOMA       shift and go to state 106
    IGUAL           shift and go to state 107


state 67

    (127) mathoperation -> numero operation .

    $end            reduce using rule 127 (mathoperation -> numero operation .)
    PUNTOCOMA       reduce using rule 127 (mathoperation -> numero operation .)
    RETURN          reduce using rule 127 (mathoperation -> numero operation .)
    WHILE           reduce using rule 127 (mathoperation -> numero operation .)
    FOR             reduce using rule 127 (mathoperation -> numero operation .)
    STRUCT          reduce using rule 127 (mathoperation -> numero operation .)
    PRINT           reduce using rule 127 (mathoperation -> numero operation .)
    COUT            reduce using rule 127 (mathoperation -> numero operation .)
    IF              reduce using rule 127 (mathoperation -> numero operation .)
    AUTO            reduce using rule 127 (mathoperation -> numero operation .)
    CHAR            reduce using rule 127 (mathoperation -> numero operation .)
    STRING          reduce using rule 127 (mathoperation -> numero operation .)
    BOOL            reduce using rule 127 (mathoperation -> numero operation .)
    ENTERO          reduce using rule 127 (mathoperation -> numero operation .)
    FLOTANTE        reduce using rule 127 (mathoperation -> numero operation .)
    TRUE            reduce using rule 127 (mathoperation -> numero operation .)
    FALSE           reduce using rule 127 (mathoperation -> numero operation .)
    INT             reduce using rule 127 (mathoperation -> numero operation .)
    FLOAT           reduce using rule 127 (mathoperation -> numero operation .)
    LONG            reduce using rule 127 (mathoperation -> numero operation .)
    LLAVER          reduce using rule 127 (mathoperation -> numero operation .)


state 68

    (129) operation -> MAS . mathoperation
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    mathoperation                  shift and go to state 108
    numero                         shift and go to state 109

state 69

    (130) operation -> MENOS . mathoperation
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    mathoperation                  shift and go to state 110
    numero                         shift and go to state 109

state 70

    (131) operation -> ASTERISCO . mathoperation
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    mathoperation                  shift and go to state 111
    numero                         shift and go to state 109

state 71

    (132) operation -> SLASH . mathoperation
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    mathoperation                  shift and go to state 112
    numero                         shift and go to state 109

state 72

    (78) struct -> STRUCT IDENTIFICADOR . LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> STRUCT IDENTIFICADOR . LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    LLAVEL          shift and go to state 113


state 73

    (39) claseimplementacion -> CLASS IDENTIFICADOR . LLAVEL bloqueclase LLAVER PUNTOCOMA
    (40) claseimplementacion -> CLASS IDENTIFICADOR . LLAVEL LLAVER PUNTOCOMA
    (41) claseimplementacion -> CLASS IDENTIFICADOR . LLAVEL acceso bloqueclase LLAVER PUNTOCOMA

    LLAVEL          shift and go to state 114


state 74

    (21) expresionif -> IF LPAR . condicionif RPAR conllaves expresionpos
    (22) expresionif -> IF LPAR . condicionif RPAR sinllaves expresionpos
    (23) expresionif -> IF LPAR . condicionif RPAR conllaves
    (24) expresionif -> IF LPAR . condicionif RPAR sinllaves PUNTOCOMA
    (36) condicionif -> . initcondicion
    (37) condicionif -> . statement
    (38) initcondicion -> . varblock statement
    (82) statement -> . expresion
    (83) statement -> . EXCLAMACION boolean
    (84) statement -> . EXCLAMACION LPAR expresion RPAR
    (85) statement -> . EXCLAMACION IDENTIFICADOR
    (86) statement -> . boolean
    (87) statement -> . numero
    (76) varblock -> . varblock variable
    (77) varblock -> . variable
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    EXCLAMACION     shift and go to state 97
    LPAR            shift and go to state 21
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    CHARACTER       shift and go to state 38
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    condicionif                    shift and go to state 115
    initcondicion                  shift and go to state 116
    statement                      shift and go to state 117
    varblock                       shift and go to state 118
    expresion                      shift and go to state 96
    boolean                        shift and go to state 98
    numero                         shift and go to state 99
    variable                       shift and go to state 119
    valor                          shift and go to state 35
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    stringdata                     shift and go to state 46
    numerotipo                     shift and go to state 120

state 75

    (123) expresion -> valor comparador . valor
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CHARACTER       shift and go to state 38
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    valor                          shift and go to state 124
    numero                         shift and go to state 60
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 76

    (98) variableauto -> AUTO id . IGUAL valor PUNTOCOMA
    (99) variableauto -> AUTO id . PUNTOCOMA

    IGUAL           shift and go to state 125
    PUNTOCOMA       shift and go to state 126


state 77

    (143) id -> IDENTIFICADOR .

    IGUAL           reduce using rule 143 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 143 (id -> IDENTIFICADOR .)


state 78

    (100) variablechar -> CHAR id . IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> CHAR id . PUNTOCOMA
    (102) variablechar -> CHAR id . IGUAL IDENTIFICADOR PUNTOCOMA

    IGUAL           shift and go to state 127
    PUNTOCOMA       shift and go to state 128


state 79

    (58) funcionimplstring -> CHAR IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (143) id -> IDENTIFICADOR .
    (144) idarray -> IDENTIFICADOR . CORCHETEL ENTERO CORCHETER
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    IGUAL           reduce using rule 143 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 143 (id -> IDENTIFICADOR .)
    CORCHETEL       shift and go to state 104
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 129

state 80

    (114) variablearraychar -> CHAR idarray . PUNTOCOMA
    (115) variablearraychar -> CHAR idarray . IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> CHAR idarray . IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> CHAR idarray . IGUAL CADENA PUNTOCOMA

    PUNTOCOMA       shift and go to state 130
    IGUAL           shift and go to state 131


state 81

    (106) variablestring -> STRING id . IGUAL stringappend PUNTOCOMA
    (107) variablestring -> STRING id . IGUAL concat PUNTOCOMA
    (108) variablestring -> STRING id . PUNTOCOMA

    IGUAL           shift and go to state 132
    PUNTOCOMA       shift and go to state 133


state 82

    (57) funcionimplstring -> STRING IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (143) id -> IDENTIFICADOR .
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    IGUAL           reduce using rule 143 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 143 (id -> IDENTIFICADOR .)
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 134

state 83

    (103) variableboolean -> BOOL id . IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> BOOL id . PUNTOCOMA
    (105) variableboolean -> BOOL id . IGUAL IDENTIFICADOR PUNTOCOMA

    IGUAL           shift and go to state 135
    PUNTOCOMA       shift and go to state 136


state 84

    (64) funcionimplbool -> BOOL IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> BOOL IDENTIFICADOR . parametrosimpl PUNTOCOMA
    (143) id -> IDENTIFICADOR .
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    IGUAL           reduce using rule 143 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 143 (id -> IDENTIFICADOR .)
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 137

state 85

    (60) funcionimplvoid -> VOID IDENTIFICADOR . parametrosimpl LLAVEL bodyblock LLAVER
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 138

state 86

    (126) comparar -> expresion comparador comparar .

    PUNTOCOMA       reduce using rule 126 (comparar -> expresion comparador comparar .)


state 87

    (137) comparador -> IGUAL IGUAL .

    LPAR            reduce using rule 137 (comparador -> IGUAL IGUAL .)
    CHARACTER       reduce using rule 137 (comparador -> IGUAL IGUAL .)
    ENTERO          reduce using rule 137 (comparador -> IGUAL IGUAL .)
    FLOTANTE        reduce using rule 137 (comparador -> IGUAL IGUAL .)
    TRUE            reduce using rule 137 (comparador -> IGUAL IGUAL .)
    FALSE           reduce using rule 137 (comparador -> IGUAL IGUAL .)
    CADENA          reduce using rule 137 (comparador -> IGUAL IGUAL .)
    IDENTIFICADOR   reduce using rule 137 (comparador -> IGUAL IGUAL .)


state 88

    (140) comparador -> MENOR IGUAL .

    LPAR            reduce using rule 140 (comparador -> MENOR IGUAL .)
    CHARACTER       reduce using rule 140 (comparador -> MENOR IGUAL .)
    ENTERO          reduce using rule 140 (comparador -> MENOR IGUAL .)
    FLOTANTE        reduce using rule 140 (comparador -> MENOR IGUAL .)
    TRUE            reduce using rule 140 (comparador -> MENOR IGUAL .)
    FALSE           reduce using rule 140 (comparador -> MENOR IGUAL .)
    CADENA          reduce using rule 140 (comparador -> MENOR IGUAL .)
    IDENTIFICADOR   reduce using rule 140 (comparador -> MENOR IGUAL .)


state 89

    (141) comparador -> MAYOR IGUAL .

    LPAR            reduce using rule 141 (comparador -> MAYOR IGUAL .)
    CHARACTER       reduce using rule 141 (comparador -> MAYOR IGUAL .)
    ENTERO          reduce using rule 141 (comparador -> MAYOR IGUAL .)
    FLOTANTE        reduce using rule 141 (comparador -> MAYOR IGUAL .)
    TRUE            reduce using rule 141 (comparador -> MAYOR IGUAL .)
    FALSE           reduce using rule 141 (comparador -> MAYOR IGUAL .)
    CADENA          reduce using rule 141 (comparador -> MAYOR IGUAL .)
    IDENTIFICADOR   reduce using rule 141 (comparador -> MAYOR IGUAL .)


state 90

    (142) comparador -> EXCLAMACION IGUAL .

    LPAR            reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)
    CHARACTER       reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)
    ENTERO          reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)
    FLOTANTE        reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)
    TRUE            reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)
    FALSE           reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)
    CADENA          reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)
    IDENTIFICADOR   reduce using rule 142 (comparador -> EXCLAMACION IGUAL .)


state 91

    (72) imprimir -> PRINT LPAR concat . RPAR PUNTOCOMA

    RPAR            shift and go to state 139


state 92

    (121) concat -> stringdata . MAS concat
    (122) concat -> stringdata .

    MAS             shift and go to state 140
    RPAR            reduce using rule 122 (concat -> stringdata .)
    PUNTOCOMA       reduce using rule 122 (concat -> stringdata .)


state 93

    (124) expresion -> LPAR valor comparador . valor RPAR
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CHARACTER       shift and go to state 38
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    valor                          shift and go to state 141
    numero                         shift and go to state 60
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 94

    (73) imprimir -> COUT MENOR MENOR . concat PUNTOCOMA
    (121) concat -> . stringdata MAS concat
    (122) concat -> . stringdata
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    concat                         shift and go to state 142
    stringdata                     shift and go to state 92

state 95

    (74) while -> WHILE LPAR statement . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 143


state 96

    (82) statement -> expresion .

    RPAR            reduce using rule 82 (statement -> expresion .)


state 97

    (83) statement -> EXCLAMACION . boolean
    (84) statement -> EXCLAMACION . LPAR expresion RPAR
    (85) statement -> EXCLAMACION . IDENTIFICADOR
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE

    LPAR            shift and go to state 145
    IDENTIFICADOR   shift and go to state 146
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    boolean                        shift and go to state 144

state 98

    (86) statement -> boolean .
    (157) valor -> boolean .

    RPAR            reduce using rule 86 (statement -> boolean .)
    IGUAL           reduce using rule 157 (valor -> boolean .)
    MENOR           reduce using rule 157 (valor -> boolean .)
    MAYOR           reduce using rule 157 (valor -> boolean .)
    EXCLAMACION     reduce using rule 157 (valor -> boolean .)


state 99

    (87) statement -> numero .
    (155) valor -> numero .

    RPAR            reduce using rule 87 (statement -> numero .)
    IGUAL           reduce using rule 155 (valor -> numero .)
    MENOR           reduce using rule 155 (valor -> numero .)
    MAYOR           reduce using rule 155 (valor -> numero .)
    EXCLAMACION     reduce using rule 155 (valor -> numero .)


state 100

    (75) for -> FOR LPAR numerotipo . IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER

    IDENTIFICADOR   shift and go to state 147


state 101

    (95) variablenumero -> numerotipo id IGUAL . mathoperation PUNTOCOMA
    (97) variablenumero -> numerotipo id IGUAL . IDENTIFICADOR PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 149
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    mathoperation                  shift and go to state 148
    numero                         shift and go to state 109

state 102

    (96) variablenumero -> numerotipo id PUNTOCOMA .

    $end            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    EXCLAMACION     reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    LPAR            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    TRUE            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    FALSE           reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    ENTERO          reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    FLOTANTE        reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    AUTO            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    CHAR            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    STRING          reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    BOOL            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    CHARACTER       reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    INT             reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    FLOAT           reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    LONG            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    CADENA          reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    LLAVER          reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    ELSE            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    RETURN          reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    WHILE           reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    FOR             reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    STRUCT          reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    PRINT           reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    COUT            reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)
    IF              reduce using rule 96 (variablenumero -> numerotipo id PUNTOCOMA .)


state 103

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl . LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl . LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl . PUNTOCOMA

    LLAVEL          shift and go to state 150
    PUNTOCOMA       shift and go to state 151


state 104

    (144) idarray -> IDENTIFICADOR CORCHETEL . ENTERO CORCHETER

    ENTERO          shift and go to state 152


state 105

    (67) parametrosimpl -> LPAR . RPAR
    (68) parametrosimpl -> LPAR . parametros RPAR
    (69) parametros -> . tipo IDENTIFICADOR
    (70) parametros -> . tipo IDENTIFICADOR masparametros
    (152) tipo -> . numerotipo
    (153) tipo -> . STRING
    (154) tipo -> . CHAR
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    RPAR            shift and go to state 153
    STRING          shift and go to state 157
    CHAR            shift and go to state 158
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    parametros                     shift and go to state 154
    tipo                           shift and go to state 155
    numerotipo                     shift and go to state 156

state 106

    (109) variablearraynumero -> numerotipo idarray PUNTOCOMA .

    $end            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    EXCLAMACION     reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    LPAR            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    TRUE            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    FALSE           reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    ENTERO          reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    FLOTANTE        reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    AUTO            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    CHAR            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    STRING          reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    BOOL            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    CHARACTER       reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    INT             reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    FLOAT           reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    LONG            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    CADENA          reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    LLAVER          reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    ELSE            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    RETURN          reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    WHILE           reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    FOR             reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    STRUCT          reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    PRINT           reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    COUT            reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)
    IF              reduce using rule 109 (variablearraynumero -> numerotipo idarray PUNTOCOMA .)


state 107

    (110) variablearraynumero -> numerotipo idarray IGUAL . LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> numerotipo idarray IGUAL . LLAVEL LLAVER PUNTOCOMA

    LLAVEL          shift and go to state 159


state 108

    (129) operation -> MAS mathoperation .

    $end            reduce using rule 129 (operation -> MAS mathoperation .)
    PUNTOCOMA       reduce using rule 129 (operation -> MAS mathoperation .)
    RETURN          reduce using rule 129 (operation -> MAS mathoperation .)
    WHILE           reduce using rule 129 (operation -> MAS mathoperation .)
    FOR             reduce using rule 129 (operation -> MAS mathoperation .)
    STRUCT          reduce using rule 129 (operation -> MAS mathoperation .)
    PRINT           reduce using rule 129 (operation -> MAS mathoperation .)
    COUT            reduce using rule 129 (operation -> MAS mathoperation .)
    IF              reduce using rule 129 (operation -> MAS mathoperation .)
    AUTO            reduce using rule 129 (operation -> MAS mathoperation .)
    CHAR            reduce using rule 129 (operation -> MAS mathoperation .)
    STRING          reduce using rule 129 (operation -> MAS mathoperation .)
    BOOL            reduce using rule 129 (operation -> MAS mathoperation .)
    ENTERO          reduce using rule 129 (operation -> MAS mathoperation .)
    FLOTANTE        reduce using rule 129 (operation -> MAS mathoperation .)
    TRUE            reduce using rule 129 (operation -> MAS mathoperation .)
    FALSE           reduce using rule 129 (operation -> MAS mathoperation .)
    INT             reduce using rule 129 (operation -> MAS mathoperation .)
    FLOAT           reduce using rule 129 (operation -> MAS mathoperation .)
    LONG            reduce using rule 129 (operation -> MAS mathoperation .)
    LLAVER          reduce using rule 129 (operation -> MAS mathoperation .)


state 109

    (127) mathoperation -> numero . operation
    (128) mathoperation -> numero .
    (129) operation -> . MAS mathoperation
    (130) operation -> . MENOS mathoperation
    (131) operation -> . ASTERISCO mathoperation
    (132) operation -> . SLASH mathoperation

    $end            reduce using rule 128 (mathoperation -> numero .)
    PUNTOCOMA       reduce using rule 128 (mathoperation -> numero .)
    RETURN          reduce using rule 128 (mathoperation -> numero .)
    WHILE           reduce using rule 128 (mathoperation -> numero .)
    FOR             reduce using rule 128 (mathoperation -> numero .)
    STRUCT          reduce using rule 128 (mathoperation -> numero .)
    PRINT           reduce using rule 128 (mathoperation -> numero .)
    COUT            reduce using rule 128 (mathoperation -> numero .)
    IF              reduce using rule 128 (mathoperation -> numero .)
    AUTO            reduce using rule 128 (mathoperation -> numero .)
    CHAR            reduce using rule 128 (mathoperation -> numero .)
    STRING          reduce using rule 128 (mathoperation -> numero .)
    BOOL            reduce using rule 128 (mathoperation -> numero .)
    ENTERO          reduce using rule 128 (mathoperation -> numero .)
    FLOTANTE        reduce using rule 128 (mathoperation -> numero .)
    TRUE            reduce using rule 128 (mathoperation -> numero .)
    FALSE           reduce using rule 128 (mathoperation -> numero .)
    INT             reduce using rule 128 (mathoperation -> numero .)
    FLOAT           reduce using rule 128 (mathoperation -> numero .)
    LONG            reduce using rule 128 (mathoperation -> numero .)
    LLAVER          reduce using rule 128 (mathoperation -> numero .)
    MAS             shift and go to state 68
    MENOS           shift and go to state 69
    ASTERISCO       shift and go to state 70
    SLASH           shift and go to state 71

    operation                      shift and go to state 67

state 110

    (130) operation -> MENOS mathoperation .

    $end            reduce using rule 130 (operation -> MENOS mathoperation .)
    PUNTOCOMA       reduce using rule 130 (operation -> MENOS mathoperation .)
    RETURN          reduce using rule 130 (operation -> MENOS mathoperation .)
    WHILE           reduce using rule 130 (operation -> MENOS mathoperation .)
    FOR             reduce using rule 130 (operation -> MENOS mathoperation .)
    STRUCT          reduce using rule 130 (operation -> MENOS mathoperation .)
    PRINT           reduce using rule 130 (operation -> MENOS mathoperation .)
    COUT            reduce using rule 130 (operation -> MENOS mathoperation .)
    IF              reduce using rule 130 (operation -> MENOS mathoperation .)
    AUTO            reduce using rule 130 (operation -> MENOS mathoperation .)
    CHAR            reduce using rule 130 (operation -> MENOS mathoperation .)
    STRING          reduce using rule 130 (operation -> MENOS mathoperation .)
    BOOL            reduce using rule 130 (operation -> MENOS mathoperation .)
    ENTERO          reduce using rule 130 (operation -> MENOS mathoperation .)
    FLOTANTE        reduce using rule 130 (operation -> MENOS mathoperation .)
    TRUE            reduce using rule 130 (operation -> MENOS mathoperation .)
    FALSE           reduce using rule 130 (operation -> MENOS mathoperation .)
    INT             reduce using rule 130 (operation -> MENOS mathoperation .)
    FLOAT           reduce using rule 130 (operation -> MENOS mathoperation .)
    LONG            reduce using rule 130 (operation -> MENOS mathoperation .)
    LLAVER          reduce using rule 130 (operation -> MENOS mathoperation .)


state 111

    (131) operation -> ASTERISCO mathoperation .

    $end            reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    PUNTOCOMA       reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    RETURN          reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    WHILE           reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    FOR             reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    STRUCT          reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    PRINT           reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    COUT            reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    IF              reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    AUTO            reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    CHAR            reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    STRING          reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    BOOL            reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    ENTERO          reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    FLOTANTE        reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    TRUE            reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    FALSE           reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    INT             reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    FLOAT           reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    LONG            reduce using rule 131 (operation -> ASTERISCO mathoperation .)
    LLAVER          reduce using rule 131 (operation -> ASTERISCO mathoperation .)


state 112

    (132) operation -> SLASH mathoperation .

    $end            reduce using rule 132 (operation -> SLASH mathoperation .)
    PUNTOCOMA       reduce using rule 132 (operation -> SLASH mathoperation .)
    RETURN          reduce using rule 132 (operation -> SLASH mathoperation .)
    WHILE           reduce using rule 132 (operation -> SLASH mathoperation .)
    FOR             reduce using rule 132 (operation -> SLASH mathoperation .)
    STRUCT          reduce using rule 132 (operation -> SLASH mathoperation .)
    PRINT           reduce using rule 132 (operation -> SLASH mathoperation .)
    COUT            reduce using rule 132 (operation -> SLASH mathoperation .)
    IF              reduce using rule 132 (operation -> SLASH mathoperation .)
    AUTO            reduce using rule 132 (operation -> SLASH mathoperation .)
    CHAR            reduce using rule 132 (operation -> SLASH mathoperation .)
    STRING          reduce using rule 132 (operation -> SLASH mathoperation .)
    BOOL            reduce using rule 132 (operation -> SLASH mathoperation .)
    ENTERO          reduce using rule 132 (operation -> SLASH mathoperation .)
    FLOTANTE        reduce using rule 132 (operation -> SLASH mathoperation .)
    TRUE            reduce using rule 132 (operation -> SLASH mathoperation .)
    FALSE           reduce using rule 132 (operation -> SLASH mathoperation .)
    INT             reduce using rule 132 (operation -> SLASH mathoperation .)
    FLOAT           reduce using rule 132 (operation -> SLASH mathoperation .)
    LONG            reduce using rule 132 (operation -> SLASH mathoperation .)
    LLAVER          reduce using rule 132 (operation -> SLASH mathoperation .)


state 113

    (78) struct -> STRUCT IDENTIFICADOR LLAVEL . LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> STRUCT IDENTIFICADOR LLAVEL . varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (76) varblock -> . varblock variable
    (77) varblock -> . variable
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVER          shift and go to state 160
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    varblock                       shift and go to state 161
    variable                       shift and go to state 119
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120

state 114

    (39) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL . bloqueclase LLAVER PUNTOCOMA
    (40) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL . LLAVER PUNTOCOMA
    (41) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL . acceso bloqueclase LLAVER PUNTOCOMA
    (45) bloqueclase -> . bloqueclase atributoclase
    (46) bloqueclase -> . atributoclase
    (42) acceso -> . PUBLIC DOBLEPUNTO
    (43) acceso -> . PRIVATE DOBLEPUNTO
    (44) acceso -> . PROTECTED DOBLEPUNTO
    (47) atributoclase -> . definicion
    (48) atributoclase -> . funcionclaseimpl
    (49) definicion -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (50) definicion -> . STRING IDENTIFICADOR PUNTOCOMA
    (51) definicion -> . CHAR IDENTIFICADOR PUNTOCOMA
    (52) definicion -> . BOOL IDENTIFICADOR PUNTOCOMA
    (53) funcionclaseimpl -> . funcionimplvoid
    (54) funcionclaseimpl -> . funcionimplnumero
    (55) funcionclaseimpl -> . funcionimplstring
    (56) funcionclaseimpl -> . funcionimplbool
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG
    (60) funcionimplvoid -> . VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER
    (61) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA
    (57) funcionimplstring -> . STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (58) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (64) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA

    LLAVER          shift and go to state 163
    PUBLIC          shift and go to state 166
    PRIVATE         shift and go to state 167
    PROTECTED       shift and go to state 168
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    BOOL            shift and go to state 174
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49
    VOID            shift and go to state 42

    bloqueclase                    shift and go to state 162
    acceso                         shift and go to state 164
    atributoclase                  shift and go to state 165
    definicion                     shift and go to state 169
    funcionclaseimpl               shift and go to state 170
    numerotipo                     shift and go to state 171
    funcionimplvoid                shift and go to state 30
    funcionimplnumero              shift and go to state 31
    funcionimplstring              shift and go to state 32
    funcionimplbool                shift and go to state 33

state 115

    (21) expresionif -> IF LPAR condicionif . RPAR conllaves expresionpos
    (22) expresionif -> IF LPAR condicionif . RPAR sinllaves expresionpos
    (23) expresionif -> IF LPAR condicionif . RPAR conllaves
    (24) expresionif -> IF LPAR condicionif . RPAR sinllaves PUNTOCOMA

    RPAR            shift and go to state 175


state 116

    (36) condicionif -> initcondicion .

    RPAR            reduce using rule 36 (condicionif -> initcondicion .)


state 117

    (37) condicionif -> statement .

    RPAR            reduce using rule 37 (condicionif -> statement .)


state 118

    (38) initcondicion -> varblock . statement
    (76) varblock -> varblock . variable
    (82) statement -> . expresion
    (83) statement -> . EXCLAMACION boolean
    (84) statement -> . EXCLAMACION LPAR expresion RPAR
    (85) statement -> . EXCLAMACION IDENTIFICADOR
    (86) statement -> . boolean
    (87) statement -> . numero
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 97
    LPAR            shift and go to state 21
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    CHARACTER       shift and go to state 38
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    statement                      shift and go to state 176
    variable                       shift and go to state 177
    expresion                      shift and go to state 96
    boolean                        shift and go to state 98
    numero                         shift and go to state 99
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    valor                          shift and go to state 35
    numerotipo                     shift and go to state 120
    stringdata                     shift and go to state 46

state 119

    (77) varblock -> variable .

    EXCLAMACION     reduce using rule 77 (varblock -> variable .)
    LPAR            reduce using rule 77 (varblock -> variable .)
    TRUE            reduce using rule 77 (varblock -> variable .)
    FALSE           reduce using rule 77 (varblock -> variable .)
    ENTERO          reduce using rule 77 (varblock -> variable .)
    FLOTANTE        reduce using rule 77 (varblock -> variable .)
    AUTO            reduce using rule 77 (varblock -> variable .)
    CHAR            reduce using rule 77 (varblock -> variable .)
    STRING          reduce using rule 77 (varblock -> variable .)
    BOOL            reduce using rule 77 (varblock -> variable .)
    CHARACTER       reduce using rule 77 (varblock -> variable .)
    INT             reduce using rule 77 (varblock -> variable .)
    FLOAT           reduce using rule 77 (varblock -> variable .)
    LONG            reduce using rule 77 (varblock -> variable .)
    CADENA          reduce using rule 77 (varblock -> variable .)
    IDENTIFICADOR   reduce using rule 77 (varblock -> variable .)
    LLAVER          reduce using rule 77 (varblock -> variable .)


state 120

    (95) variablenumero -> numerotipo . id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> numerotipo . id PUNTOCOMA
    (97) variablenumero -> numerotipo . id IGUAL IDENTIFICADOR PUNTOCOMA
    (109) variablearraynumero -> numerotipo . idarray PUNTOCOMA
    (110) variablearraynumero -> numerotipo . idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> numerotipo . idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (143) id -> . IDENTIFICADOR
    (144) idarray -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 178

    id                             shift and go to state 64
    idarray                        shift and go to state 66

state 121

    (100) variablechar -> CHAR . id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> CHAR . id PUNTOCOMA
    (102) variablechar -> CHAR . id IGUAL IDENTIFICADOR PUNTOCOMA
    (114) variablearraychar -> CHAR . idarray PUNTOCOMA
    (115) variablearraychar -> CHAR . idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> CHAR . idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> CHAR . idarray IGUAL CADENA PUNTOCOMA
    (143) id -> . IDENTIFICADOR
    (144) idarray -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 178

    id                             shift and go to state 78
    idarray                        shift and go to state 80

state 122

    (106) variablestring -> STRING . id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> STRING . id IGUAL concat PUNTOCOMA
    (108) variablestring -> STRING . id PUNTOCOMA
    (143) id -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 77

    id                             shift and go to state 81

state 123

    (103) variableboolean -> BOOL . id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> BOOL . id PUNTOCOMA
    (105) variableboolean -> BOOL . id IGUAL IDENTIFICADOR PUNTOCOMA
    (143) id -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 77

    id                             shift and go to state 83

state 124

    (123) expresion -> valor comparador valor .

    IGUAL           reduce using rule 123 (expresion -> valor comparador valor .)
    MENOR           reduce using rule 123 (expresion -> valor comparador valor .)
    MAYOR           reduce using rule 123 (expresion -> valor comparador valor .)
    EXCLAMACION     reduce using rule 123 (expresion -> valor comparador valor .)
    PUNTOCOMA       reduce using rule 123 (expresion -> valor comparador valor .)
    RPAR            reduce using rule 123 (expresion -> valor comparador valor .)


state 125

    (98) variableauto -> AUTO id IGUAL . valor PUNTOCOMA
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CHARACTER       shift and go to state 38
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    valor                          shift and go to state 179
    numero                         shift and go to state 60
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 126

    (99) variableauto -> AUTO id PUNTOCOMA .

    $end            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    EXCLAMACION     reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    LPAR            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    TRUE            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    FALSE           reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    ENTERO          reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    FLOTANTE        reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    AUTO            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    CHAR            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    STRING          reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    BOOL            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    CHARACTER       reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    INT             reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    FLOAT           reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    LONG            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    CADENA          reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    LLAVER          reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    ELSE            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    RETURN          reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    WHILE           reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    FOR             reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    STRUCT          reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    PRINT           reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    COUT            reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)
    IF              reduce using rule 99 (variableauto -> AUTO id PUNTOCOMA .)


state 127

    (100) variablechar -> CHAR id IGUAL . CHARACTER PUNTOCOMA
    (102) variablechar -> CHAR id IGUAL . IDENTIFICADOR PUNTOCOMA

    CHARACTER       shift and go to state 180
    IDENTIFICADOR   shift and go to state 181


state 128

    (101) variablechar -> CHAR id PUNTOCOMA .

    $end            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    EXCLAMACION     reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    LPAR            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    TRUE            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    FALSE           reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    ENTERO          reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    FLOTANTE        reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    AUTO            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    CHAR            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    STRING          reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    BOOL            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    CHARACTER       reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    INT             reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    FLOAT           reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    LONG            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    CADENA          reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    LLAVER          reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    ELSE            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    RETURN          reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    WHILE           reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    FOR             reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    STRUCT          reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    PRINT           reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    COUT            reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)
    IF              reduce using rule 101 (variablechar -> CHAR id PUNTOCOMA .)


state 129

    (58) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl . LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl . LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER

    LLAVEL          shift and go to state 182


state 130

    (114) variablearraychar -> CHAR idarray PUNTOCOMA .

    $end            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    EXCLAMACION     reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    LPAR            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    TRUE            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    FALSE           reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    ENTERO          reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    FLOTANTE        reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    AUTO            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    CHAR            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    STRING          reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    BOOL            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    CHARACTER       reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    INT             reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    FLOAT           reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    LONG            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    CADENA          reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    LLAVER          reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    ELSE            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    RETURN          reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    WHILE           reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    FOR             reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    STRUCT          reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    PRINT           reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    COUT            reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)
    IF              reduce using rule 114 (variablearraychar -> CHAR idarray PUNTOCOMA .)


state 131

    (115) variablearraychar -> CHAR idarray IGUAL . LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> CHAR idarray IGUAL . LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> CHAR idarray IGUAL . CADENA PUNTOCOMA

    LLAVEL          shift and go to state 183
    CADENA          shift and go to state 184


state 132

    (106) variablestring -> STRING id IGUAL . stringappend PUNTOCOMA
    (107) variablestring -> STRING id IGUAL . concat PUNTOCOMA
    (120) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (121) concat -> . stringdata MAS concat
    (122) concat -> . stringdata
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 187
    CADENA          shift and go to state 40

    stringappend                   shift and go to state 185
    concat                         shift and go to state 186
    stringdata                     shift and go to state 92

state 133

    (108) variablestring -> STRING id PUNTOCOMA .

    $end            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    EXCLAMACION     reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    LPAR            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    TRUE            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    FALSE           reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    ENTERO          reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    FLOTANTE        reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    AUTO            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    CHAR            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    STRING          reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    BOOL            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    CHARACTER       reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    INT             reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    FLOAT           reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    LONG            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    CADENA          reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    LLAVER          reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    ELSE            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    RETURN          reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    WHILE           reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    FOR             reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    STRUCT          reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    PRINT           reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    COUT            reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)
    IF              reduce using rule 108 (variablestring -> STRING id PUNTOCOMA .)


state 134

    (57) funcionimplstring -> STRING IDENTIFICADOR parametrosimpl . LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER

    LLAVEL          shift and go to state 188


state 135

    (103) variableboolean -> BOOL id IGUAL . operacionbool PUNTOCOMA
    (105) variableboolean -> BOOL id IGUAL . IDENTIFICADOR PUNTOCOMA
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE

    IDENTIFICADOR   shift and go to state 190
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    operacionbool                  shift and go to state 189
    boolean                        shift and go to state 191

state 136

    (104) variableboolean -> BOOL id PUNTOCOMA .

    $end            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    EXCLAMACION     reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    LPAR            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    TRUE            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    FALSE           reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    ENTERO          reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    FLOTANTE        reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    AUTO            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    CHAR            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    STRING          reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    BOOL            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    CHARACTER       reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    INT             reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    FLOAT           reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    LONG            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    CADENA          reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    LLAVER          reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    ELSE            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    RETURN          reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    WHILE           reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    FOR             reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    STRUCT          reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    PRINT           reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    COUT            reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)
    IF              reduce using rule 104 (variableboolean -> BOOL id PUNTOCOMA .)


state 137

    (64) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl . LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl . LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl . PUNTOCOMA

    LLAVEL          shift and go to state 192
    PUNTOCOMA       shift and go to state 193


state 138

    (60) funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 194


state 139

    (72) imprimir -> PRINT LPAR concat RPAR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 195


state 140

    (121) concat -> stringdata MAS . concat
    (121) concat -> . stringdata MAS concat
    (122) concat -> . stringdata
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    stringdata                     shift and go to state 92
    concat                         shift and go to state 196

state 141

    (124) expresion -> LPAR valor comparador valor . RPAR

    RPAR            shift and go to state 197


state 142

    (73) imprimir -> COUT MENOR MENOR concat . PUNTOCOMA

    PUNTOCOMA       shift and go to state 198


state 143

    (74) while -> WHILE LPAR statement RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 199


state 144

    (83) statement -> EXCLAMACION boolean .

    RPAR            reduce using rule 83 (statement -> EXCLAMACION boolean .)


state 145

    (84) statement -> EXCLAMACION LPAR . expresion RPAR
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    LPAR            shift and go to state 21
    CHARACTER       shift and go to state 38
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    expresion                      shift and go to state 200
    valor                          shift and go to state 35
    numero                         shift and go to state 60
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 146

    (85) statement -> EXCLAMACION IDENTIFICADOR .

    RPAR            reduce using rule 85 (statement -> EXCLAMACION IDENTIFICADOR .)


state 147

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR . IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER

    IGUAL           shift and go to state 201


state 148

    (95) variablenumero -> numerotipo id IGUAL mathoperation . PUNTOCOMA

    PUNTOCOMA       shift and go to state 202


state 149

    (97) variablenumero -> numerotipo id IGUAL IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 203


state 150

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL . bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL . bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    RETURN          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 204
    empty                          shift and go to state 205

state 151

    (63) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .

    $end            reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    LLAVER          reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    STRING          reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    CHAR            reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    BOOL            reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    INT             reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    FLOAT           reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    LONG            reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    VOID            reduce using rule 63 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA .)


state 152

    (144) idarray -> IDENTIFICADOR CORCHETEL ENTERO . CORCHETER

    CORCHETER       shift and go to state 206


state 153

    (67) parametrosimpl -> LPAR RPAR .

    LLAVEL          reduce using rule 67 (parametrosimpl -> LPAR RPAR .)
    PUNTOCOMA       reduce using rule 67 (parametrosimpl -> LPAR RPAR .)


state 154

    (68) parametrosimpl -> LPAR parametros . RPAR

    RPAR            shift and go to state 207


state 155

    (69) parametros -> tipo . IDENTIFICADOR
    (70) parametros -> tipo . IDENTIFICADOR masparametros

    IDENTIFICADOR   shift and go to state 208


state 156

    (152) tipo -> numerotipo .

    IDENTIFICADOR   reduce using rule 152 (tipo -> numerotipo .)


state 157

    (153) tipo -> STRING .

    IDENTIFICADOR   reduce using rule 153 (tipo -> STRING .)


state 158

    (154) tipo -> CHAR .

    IDENTIFICADOR   reduce using rule 154 (tipo -> CHAR .)


state 159

    (110) variablearraynumero -> numerotipo idarray IGUAL LLAVEL . arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> numerotipo idarray IGUAL LLAVEL . LLAVER PUNTOCOMA
    (112) arraydatanumero -> . arraydatanumero COMMA numero
    (113) arraydatanumero -> . numero
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    LLAVER          shift and go to state 210
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    arraydatanumero                shift and go to state 209
    numero                         shift and go to state 211

state 160

    (78) struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 212


state 161

    (79) struct -> STRUCT IDENTIFICADOR LLAVEL varblock . LLAVER IDENTIFICADOR PUNTOCOMA
    (76) varblock -> varblock . variable
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVER          shift and go to state 213
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    variable                       shift and go to state 177
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120

state 162

    (39) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase . LLAVER PUNTOCOMA
    (45) bloqueclase -> bloqueclase . atributoclase
    (47) atributoclase -> . definicion
    (48) atributoclase -> . funcionclaseimpl
    (49) definicion -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (50) definicion -> . STRING IDENTIFICADOR PUNTOCOMA
    (51) definicion -> . CHAR IDENTIFICADOR PUNTOCOMA
    (52) definicion -> . BOOL IDENTIFICADOR PUNTOCOMA
    (53) funcionclaseimpl -> . funcionimplvoid
    (54) funcionclaseimpl -> . funcionimplnumero
    (55) funcionclaseimpl -> . funcionimplstring
    (56) funcionclaseimpl -> . funcionimplbool
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG
    (60) funcionimplvoid -> . VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER
    (61) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA
    (57) funcionimplstring -> . STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (58) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (64) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA

    LLAVER          shift and go to state 214
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    BOOL            shift and go to state 174
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49
    VOID            shift and go to state 42

    atributoclase                  shift and go to state 215
    definicion                     shift and go to state 169
    funcionclaseimpl               shift and go to state 170
    numerotipo                     shift and go to state 171
    funcionimplvoid                shift and go to state 30
    funcionimplnumero              shift and go to state 31
    funcionimplstring              shift and go to state 32
    funcionimplbool                shift and go to state 33

state 163

    (40) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 216


state 164

    (41) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso . bloqueclase LLAVER PUNTOCOMA
    (45) bloqueclase -> . bloqueclase atributoclase
    (46) bloqueclase -> . atributoclase
    (47) atributoclase -> . definicion
    (48) atributoclase -> . funcionclaseimpl
    (49) definicion -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (50) definicion -> . STRING IDENTIFICADOR PUNTOCOMA
    (51) definicion -> . CHAR IDENTIFICADOR PUNTOCOMA
    (52) definicion -> . BOOL IDENTIFICADOR PUNTOCOMA
    (53) funcionclaseimpl -> . funcionimplvoid
    (54) funcionclaseimpl -> . funcionimplnumero
    (55) funcionclaseimpl -> . funcionimplstring
    (56) funcionclaseimpl -> . funcionimplbool
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG
    (60) funcionimplvoid -> . VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER
    (61) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA
    (57) funcionimplstring -> . STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (58) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (64) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA

    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    BOOL            shift and go to state 174
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49
    VOID            shift and go to state 42

    bloqueclase                    shift and go to state 217
    atributoclase                  shift and go to state 165
    definicion                     shift and go to state 169
    funcionclaseimpl               shift and go to state 170
    numerotipo                     shift and go to state 171
    funcionimplvoid                shift and go to state 30
    funcionimplnumero              shift and go to state 31
    funcionimplstring              shift and go to state 32
    funcionimplbool                shift and go to state 33

state 165

    (46) bloqueclase -> atributoclase .

    LLAVER          reduce using rule 46 (bloqueclase -> atributoclase .)
    STRING          reduce using rule 46 (bloqueclase -> atributoclase .)
    CHAR            reduce using rule 46 (bloqueclase -> atributoclase .)
    BOOL            reduce using rule 46 (bloqueclase -> atributoclase .)
    INT             reduce using rule 46 (bloqueclase -> atributoclase .)
    FLOAT           reduce using rule 46 (bloqueclase -> atributoclase .)
    LONG            reduce using rule 46 (bloqueclase -> atributoclase .)
    VOID            reduce using rule 46 (bloqueclase -> atributoclase .)


state 166

    (42) acceso -> PUBLIC . DOBLEPUNTO

    DOBLEPUNTO      shift and go to state 218


state 167

    (43) acceso -> PRIVATE . DOBLEPUNTO

    DOBLEPUNTO      shift and go to state 219


state 168

    (44) acceso -> PROTECTED . DOBLEPUNTO

    DOBLEPUNTO      shift and go to state 220


state 169

    (47) atributoclase -> definicion .

    LLAVER          reduce using rule 47 (atributoclase -> definicion .)
    STRING          reduce using rule 47 (atributoclase -> definicion .)
    CHAR            reduce using rule 47 (atributoclase -> definicion .)
    BOOL            reduce using rule 47 (atributoclase -> definicion .)
    INT             reduce using rule 47 (atributoclase -> definicion .)
    FLOAT           reduce using rule 47 (atributoclase -> definicion .)
    LONG            reduce using rule 47 (atributoclase -> definicion .)
    VOID            reduce using rule 47 (atributoclase -> definicion .)


state 170

    (48) atributoclase -> funcionclaseimpl .

    LLAVER          reduce using rule 48 (atributoclase -> funcionclaseimpl .)
    STRING          reduce using rule 48 (atributoclase -> funcionclaseimpl .)
    CHAR            reduce using rule 48 (atributoclase -> funcionclaseimpl .)
    BOOL            reduce using rule 48 (atributoclase -> funcionclaseimpl .)
    INT             reduce using rule 48 (atributoclase -> funcionclaseimpl .)
    FLOAT           reduce using rule 48 (atributoclase -> funcionclaseimpl .)
    LONG            reduce using rule 48 (atributoclase -> funcionclaseimpl .)
    VOID            reduce using rule 48 (atributoclase -> funcionclaseimpl .)


state 171

    (49) definicion -> numerotipo . IDENTIFICADOR PUNTOCOMA
    (61) funcionimplnumero -> numerotipo . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> numerotipo . IDENTIFICADOR parametrosimpl PUNTOCOMA

    IDENTIFICADOR   shift and go to state 221


state 172

    (50) definicion -> STRING . IDENTIFICADOR PUNTOCOMA
    (57) funcionimplstring -> STRING . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER

    IDENTIFICADOR   shift and go to state 222


state 173

    (51) definicion -> CHAR . IDENTIFICADOR PUNTOCOMA
    (58) funcionimplstring -> CHAR . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER

    IDENTIFICADOR   shift and go to state 223


state 174

    (52) definicion -> BOOL . IDENTIFICADOR PUNTOCOMA
    (64) funcionimplbool -> BOOL . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL . IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> BOOL . IDENTIFICADOR parametrosimpl PUNTOCOMA

    IDENTIFICADOR   shift and go to state 224


state 175

    (21) expresionif -> IF LPAR condicionif RPAR . conllaves expresionpos
    (22) expresionif -> IF LPAR condicionif RPAR . sinllaves expresionpos
    (23) expresionif -> IF LPAR condicionif RPAR . conllaves
    (24) expresionif -> IF LPAR condicionif RPAR . sinllaves PUNTOCOMA
    (35) conllaves -> . LLAVEL bodyblock LLAVER
    (33) sinllaves -> . while
    (34) sinllaves -> . variable
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVEL          shift and go to state 227
    WHILE           shift and go to state 23
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    conllaves                      shift and go to state 225
    sinllaves                      shift and go to state 226
    while                          shift and go to state 228
    variable                       shift and go to state 229
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120

state 176

    (38) initcondicion -> varblock statement .

    RPAR            reduce using rule 38 (initcondicion -> varblock statement .)


state 177

    (76) varblock -> varblock variable .

    EXCLAMACION     reduce using rule 76 (varblock -> varblock variable .)
    LPAR            reduce using rule 76 (varblock -> varblock variable .)
    TRUE            reduce using rule 76 (varblock -> varblock variable .)
    FALSE           reduce using rule 76 (varblock -> varblock variable .)
    ENTERO          reduce using rule 76 (varblock -> varblock variable .)
    FLOTANTE        reduce using rule 76 (varblock -> varblock variable .)
    AUTO            reduce using rule 76 (varblock -> varblock variable .)
    CHAR            reduce using rule 76 (varblock -> varblock variable .)
    STRING          reduce using rule 76 (varblock -> varblock variable .)
    BOOL            reduce using rule 76 (varblock -> varblock variable .)
    CHARACTER       reduce using rule 76 (varblock -> varblock variable .)
    INT             reduce using rule 76 (varblock -> varblock variable .)
    FLOAT           reduce using rule 76 (varblock -> varblock variable .)
    LONG            reduce using rule 76 (varblock -> varblock variable .)
    CADENA          reduce using rule 76 (varblock -> varblock variable .)
    IDENTIFICADOR   reduce using rule 76 (varblock -> varblock variable .)
    LLAVER          reduce using rule 76 (varblock -> varblock variable .)


state 178

    (143) id -> IDENTIFICADOR .
    (144) idarray -> IDENTIFICADOR . CORCHETEL ENTERO CORCHETER

    IGUAL           reduce using rule 143 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 143 (id -> IDENTIFICADOR .)
    CORCHETEL       shift and go to state 104


state 179

    (98) variableauto -> AUTO id IGUAL valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 230


state 180

    (100) variablechar -> CHAR id IGUAL CHARACTER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 231


state 181

    (102) variablechar -> CHAR id IGUAL IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 232


state 182

    (58) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL . bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL . bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    RETURN          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 233
    empty                          shift and go to state 205

state 183

    (115) variablearraychar -> CHAR idarray IGUAL LLAVEL . LLAVER PUNTOCOMA
    (116) variablearraychar -> CHAR idarray IGUAL LLAVEL . datachar LLAVER PUNTOCOMA
    (118) datachar -> . CHARACTER
    (119) datachar -> . datachar COMMA CHARACTER

    LLAVER          shift and go to state 234
    CHARACTER       shift and go to state 236

    datachar                       shift and go to state 235

state 184

    (117) variablearraychar -> CHAR idarray IGUAL CADENA . PUNTOCOMA

    PUNTOCOMA       shift and go to state 237


state 185

    (106) variablestring -> STRING id IGUAL stringappend . PUNTOCOMA

    PUNTOCOMA       shift and go to state 238


state 186

    (107) variablestring -> STRING id IGUAL concat . PUNTOCOMA

    PUNTOCOMA       shift and go to state 239


state 187

    (120) stringappend -> IDENTIFICADOR . PUNTO APPEND LPAR stringdata RPAR
    (151) stringdata -> IDENTIFICADOR .

    PUNTO           shift and go to state 240
    MAS             reduce using rule 151 (stringdata -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 151 (stringdata -> IDENTIFICADOR .)


state 188

    (57) funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL . bodyblock RETURN concat PUNTOCOMA LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    RETURN          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 241
    empty                          shift and go to state 205

state 189

    (103) variableboolean -> BOOL id IGUAL operacionbool . PUNTOCOMA

    PUNTOCOMA       shift and go to state 242


state 190

    (105) variableboolean -> BOOL id IGUAL IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 243


state 191

    (133) operacionbool -> boolean . comparador boolean
    (134) operacionbool -> boolean .
    (137) comparador -> . IGUAL IGUAL
    (138) comparador -> . MENOR
    (139) comparador -> . MAYOR
    (140) comparador -> . MENOR IGUAL
    (141) comparador -> . MAYOR IGUAL
    (142) comparador -> . EXCLAMACION IGUAL

    PUNTOCOMA       reduce using rule 134 (operacionbool -> boolean .)
    RETURN          reduce using rule 134 (operacionbool -> boolean .)
    WHILE           reduce using rule 134 (operacionbool -> boolean .)
    FOR             reduce using rule 134 (operacionbool -> boolean .)
    STRUCT          reduce using rule 134 (operacionbool -> boolean .)
    PRINT           reduce using rule 134 (operacionbool -> boolean .)
    COUT            reduce using rule 134 (operacionbool -> boolean .)
    IF              reduce using rule 134 (operacionbool -> boolean .)
    AUTO            reduce using rule 134 (operacionbool -> boolean .)
    CHAR            reduce using rule 134 (operacionbool -> boolean .)
    STRING          reduce using rule 134 (operacionbool -> boolean .)
    BOOL            reduce using rule 134 (operacionbool -> boolean .)
    ENTERO          reduce using rule 134 (operacionbool -> boolean .)
    FLOTANTE        reduce using rule 134 (operacionbool -> boolean .)
    TRUE            reduce using rule 134 (operacionbool -> boolean .)
    FALSE           reduce using rule 134 (operacionbool -> boolean .)
    INT             reduce using rule 134 (operacionbool -> boolean .)
    FLOAT           reduce using rule 134 (operacionbool -> boolean .)
    LONG            reduce using rule 134 (operacionbool -> boolean .)
    LLAVER          reduce using rule 134 (operacionbool -> boolean .)
    IGUAL           shift and go to state 54
    MENOR           shift and go to state 55
    MAYOR           shift and go to state 56
    EXCLAMACION     shift and go to state 57

    comparador                     shift and go to state 244

state 192

    (64) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL . bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL . bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    RETURN          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 245
    empty                          shift and go to state 205

state 193

    (66) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .

    $end            reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    LLAVER          reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    STRING          reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    CHAR            reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    BOOL            reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    INT             reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    FLOAT           reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    LONG            reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)
    VOID            reduce using rule 66 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA .)


state 194

    (60) funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL . bodyblock LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    LLAVER          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 246
    empty                          shift and go to state 205

state 195

    (72) imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .

    $end            reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    RETURN          reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    WHILE           reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    FOR             reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    STRUCT          reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    PRINT           reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    COUT            reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    IF              reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    AUTO            reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    CHAR            reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    STRING          reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    BOOL            reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    ENTERO          reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    FLOTANTE        reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    TRUE            reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    FALSE           reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    INT             reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    FLOAT           reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    LONG            reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)
    LLAVER          reduce using rule 72 (imprimir -> PRINT LPAR concat RPAR PUNTOCOMA .)


state 196

    (121) concat -> stringdata MAS concat .

    RPAR            reduce using rule 121 (concat -> stringdata MAS concat .)
    PUNTOCOMA       reduce using rule 121 (concat -> stringdata MAS concat .)


state 197

    (124) expresion -> LPAR valor comparador valor RPAR .

    IGUAL           reduce using rule 124 (expresion -> LPAR valor comparador valor RPAR .)
    MENOR           reduce using rule 124 (expresion -> LPAR valor comparador valor RPAR .)
    MAYOR           reduce using rule 124 (expresion -> LPAR valor comparador valor RPAR .)
    EXCLAMACION     reduce using rule 124 (expresion -> LPAR valor comparador valor RPAR .)
    PUNTOCOMA       reduce using rule 124 (expresion -> LPAR valor comparador valor RPAR .)
    RPAR            reduce using rule 124 (expresion -> LPAR valor comparador valor RPAR .)


state 198

    (73) imprimir -> COUT MENOR MENOR concat PUNTOCOMA .

    $end            reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    RETURN          reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    WHILE           reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    FOR             reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    STRUCT          reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    PRINT           reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    COUT            reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    IF              reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    AUTO            reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    CHAR            reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    STRING          reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    BOOL            reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    ENTERO          reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    FLOTANTE        reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    TRUE            reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    FALSE           reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    INT             reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    FLOAT           reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    LONG            reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)
    LLAVER          reduce using rule 73 (imprimir -> COUT MENOR MENOR concat PUNTOCOMA .)


state 199

    (74) while -> WHILE LPAR statement RPAR LLAVEL . bodyblock LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    LLAVER          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 247
    empty                          shift and go to state 205

state 200

    (84) statement -> EXCLAMACION LPAR expresion . RPAR

    RPAR            shift and go to state 248


state 201

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL . numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    numero                         shift and go to state 249

state 202

    (95) variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .

    $end            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    EXCLAMACION     reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    LPAR            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    TRUE            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    FALSE           reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    ENTERO          reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    FLOTANTE        reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    AUTO            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    CHAR            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    STRING          reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    BOOL            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    CHARACTER       reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    INT             reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    FLOAT           reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    LONG            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    CADENA          reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    LLAVER          reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    ELSE            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    RETURN          reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    WHILE           reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    FOR             reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    STRUCT          reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    PRINT           reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    COUT            reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)
    IF              reduce using rule 95 (variablenumero -> numerotipo id IGUAL mathoperation PUNTOCOMA .)


state 203

    (97) variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    EXCLAMACION     reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LPAR            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CHARACTER       reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    STRUCT          reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    COUT            reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 97 (variablenumero -> numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA .)


state 204

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock . RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock . RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    RETURN          shift and go to state 250
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109
    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    boolean                        shift and go to state 191

state 205

    (12) bodyblock -> empty .

    RETURN          reduce using rule 12 (bodyblock -> empty .)
    WHILE           reduce using rule 12 (bodyblock -> empty .)
    FOR             reduce using rule 12 (bodyblock -> empty .)
    STRUCT          reduce using rule 12 (bodyblock -> empty .)
    PRINT           reduce using rule 12 (bodyblock -> empty .)
    COUT            reduce using rule 12 (bodyblock -> empty .)
    IF              reduce using rule 12 (bodyblock -> empty .)
    AUTO            reduce using rule 12 (bodyblock -> empty .)
    CHAR            reduce using rule 12 (bodyblock -> empty .)
    STRING          reduce using rule 12 (bodyblock -> empty .)
    BOOL            reduce using rule 12 (bodyblock -> empty .)
    ENTERO          reduce using rule 12 (bodyblock -> empty .)
    FLOTANTE        reduce using rule 12 (bodyblock -> empty .)
    TRUE            reduce using rule 12 (bodyblock -> empty .)
    FALSE           reduce using rule 12 (bodyblock -> empty .)
    INT             reduce using rule 12 (bodyblock -> empty .)
    FLOAT           reduce using rule 12 (bodyblock -> empty .)
    LONG            reduce using rule 12 (bodyblock -> empty .)
    LLAVER          reduce using rule 12 (bodyblock -> empty .)


state 206

    (144) idarray -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .

    PUNTOCOMA       reduce using rule 144 (idarray -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .)
    IGUAL           reduce using rule 144 (idarray -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .)


state 207

    (68) parametrosimpl -> LPAR parametros RPAR .

    LLAVEL          reduce using rule 68 (parametrosimpl -> LPAR parametros RPAR .)
    PUNTOCOMA       reduce using rule 68 (parametrosimpl -> LPAR parametros RPAR .)


state 208

    (69) parametros -> tipo IDENTIFICADOR .
    (70) parametros -> tipo IDENTIFICADOR . masparametros
    (71) masparametros -> . COMMA parametros

    RPAR            reduce using rule 69 (parametros -> tipo IDENTIFICADOR .)
    COMMA           shift and go to state 260

    masparametros                  shift and go to state 259

state 209

    (110) variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero . LLAVER PUNTOCOMA
    (112) arraydatanumero -> arraydatanumero . COMMA numero

    LLAVER          shift and go to state 261
    COMMA           shift and go to state 262


state 210

    (111) variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 263


state 211

    (113) arraydatanumero -> numero .

    LLAVER          reduce using rule 113 (arraydatanumero -> numero .)
    COMMA           reduce using rule 113 (arraydatanumero -> numero .)


state 212

    (78) struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 264


state 213

    (79) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 265


state 214

    (39) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 266


state 215

    (45) bloqueclase -> bloqueclase atributoclase .

    LLAVER          reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)
    STRING          reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)
    CHAR            reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)
    BOOL            reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)
    INT             reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)
    FLOAT           reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)
    LONG            reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)
    VOID            reduce using rule 45 (bloqueclase -> bloqueclase atributoclase .)


state 216

    (40) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL LLAVER PUNTOCOMA .

    $end            reduce using rule 40 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL LLAVER PUNTOCOMA .)


state 217

    (41) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso bloqueclase . LLAVER PUNTOCOMA
    (45) bloqueclase -> bloqueclase . atributoclase
    (47) atributoclase -> . definicion
    (48) atributoclase -> . funcionclaseimpl
    (49) definicion -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (50) definicion -> . STRING IDENTIFICADOR PUNTOCOMA
    (51) definicion -> . CHAR IDENTIFICADOR PUNTOCOMA
    (52) definicion -> . BOOL IDENTIFICADOR PUNTOCOMA
    (53) funcionclaseimpl -> . funcionimplvoid
    (54) funcionclaseimpl -> . funcionimplnumero
    (55) funcionclaseimpl -> . funcionimplstring
    (56) funcionclaseimpl -> . funcionimplbool
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG
    (60) funcionimplvoid -> . VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER
    (61) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> . numerotipo IDENTIFICADOR parametrosimpl PUNTOCOMA
    (57) funcionimplstring -> . STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (58) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> . CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (64) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> . BOOL IDENTIFICADOR parametrosimpl PUNTOCOMA

    LLAVER          shift and go to state 267
    STRING          shift and go to state 172
    CHAR            shift and go to state 173
    BOOL            shift and go to state 174
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49
    VOID            shift and go to state 42

    atributoclase                  shift and go to state 215
    definicion                     shift and go to state 169
    funcionclaseimpl               shift and go to state 170
    numerotipo                     shift and go to state 171
    funcionimplvoid                shift and go to state 30
    funcionimplnumero              shift and go to state 31
    funcionimplstring              shift and go to state 32
    funcionimplbool                shift and go to state 33

state 218

    (42) acceso -> PUBLIC DOBLEPUNTO .

    STRING          reduce using rule 42 (acceso -> PUBLIC DOBLEPUNTO .)
    CHAR            reduce using rule 42 (acceso -> PUBLIC DOBLEPUNTO .)
    BOOL            reduce using rule 42 (acceso -> PUBLIC DOBLEPUNTO .)
    INT             reduce using rule 42 (acceso -> PUBLIC DOBLEPUNTO .)
    FLOAT           reduce using rule 42 (acceso -> PUBLIC DOBLEPUNTO .)
    LONG            reduce using rule 42 (acceso -> PUBLIC DOBLEPUNTO .)
    VOID            reduce using rule 42 (acceso -> PUBLIC DOBLEPUNTO .)


state 219

    (43) acceso -> PRIVATE DOBLEPUNTO .

    STRING          reduce using rule 43 (acceso -> PRIVATE DOBLEPUNTO .)
    CHAR            reduce using rule 43 (acceso -> PRIVATE DOBLEPUNTO .)
    BOOL            reduce using rule 43 (acceso -> PRIVATE DOBLEPUNTO .)
    INT             reduce using rule 43 (acceso -> PRIVATE DOBLEPUNTO .)
    FLOAT           reduce using rule 43 (acceso -> PRIVATE DOBLEPUNTO .)
    LONG            reduce using rule 43 (acceso -> PRIVATE DOBLEPUNTO .)
    VOID            reduce using rule 43 (acceso -> PRIVATE DOBLEPUNTO .)


state 220

    (44) acceso -> PROTECTED DOBLEPUNTO .

    STRING          reduce using rule 44 (acceso -> PROTECTED DOBLEPUNTO .)
    CHAR            reduce using rule 44 (acceso -> PROTECTED DOBLEPUNTO .)
    BOOL            reduce using rule 44 (acceso -> PROTECTED DOBLEPUNTO .)
    INT             reduce using rule 44 (acceso -> PROTECTED DOBLEPUNTO .)
    FLOAT           reduce using rule 44 (acceso -> PROTECTED DOBLEPUNTO .)
    LONG            reduce using rule 44 (acceso -> PROTECTED DOBLEPUNTO .)
    VOID            reduce using rule 44 (acceso -> PROTECTED DOBLEPUNTO .)


state 221

    (49) definicion -> numerotipo IDENTIFICADOR . PUNTOCOMA
    (61) funcionimplnumero -> numerotipo IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (63) funcionimplnumero -> numerotipo IDENTIFICADOR . parametrosimpl PUNTOCOMA
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    PUNTOCOMA       shift and go to state 268
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 103

state 222

    (50) definicion -> STRING IDENTIFICADOR . PUNTOCOMA
    (57) funcionimplstring -> STRING IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    PUNTOCOMA       shift and go to state 269
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 134

state 223

    (51) definicion -> CHAR IDENTIFICADOR . PUNTOCOMA
    (58) funcionimplstring -> CHAR IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    PUNTOCOMA       shift and go to state 270
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 129

state 224

    (52) definicion -> BOOL IDENTIFICADOR . PUNTOCOMA
    (64) funcionimplbool -> BOOL IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL IDENTIFICADOR . parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (66) funcionimplbool -> BOOL IDENTIFICADOR . parametrosimpl PUNTOCOMA
    (67) parametrosimpl -> . LPAR RPAR
    (68) parametrosimpl -> . LPAR parametros RPAR

    PUNTOCOMA       shift and go to state 271
    LPAR            shift and go to state 105

    parametrosimpl                 shift and go to state 137

state 225

    (21) expresionif -> IF LPAR condicionif RPAR conllaves . expresionpos
    (23) expresionif -> IF LPAR condicionif RPAR conllaves .
    (25) expresionpos -> . else
    (26) expresionpos -> . elseif
    (31) else -> . ELSE conllaves
    (32) else -> . ELSE sinllaves PUNTOCOMA
    (27) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (28) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else
    (29) elseif -> . ELSE IF LPAR condicionif RPAR conllaves
    (30) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA

    $end            reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    RETURN          reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    WHILE           reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    FOR             reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    STRUCT          reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    PRINT           reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    COUT            reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    IF              reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    AUTO            reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    CHAR            reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    STRING          reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    BOOL            reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    ENTERO          reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    FLOTANTE        reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    TRUE            reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    FALSE           reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    INT             reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    FLOAT           reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    LONG            reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    LLAVER          reduce using rule 23 (expresionif -> IF LPAR condicionif RPAR conllaves .)
    ELSE            shift and go to state 275

    expresionpos                   shift and go to state 272
    else                           shift and go to state 273
    elseif                         shift and go to state 274

state 226

    (22) expresionif -> IF LPAR condicionif RPAR sinllaves . expresionpos
    (24) expresionif -> IF LPAR condicionif RPAR sinllaves . PUNTOCOMA
    (25) expresionpos -> . else
    (26) expresionpos -> . elseif
    (31) else -> . ELSE conllaves
    (32) else -> . ELSE sinllaves PUNTOCOMA
    (27) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (28) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else
    (29) elseif -> . ELSE IF LPAR condicionif RPAR conllaves
    (30) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA

    PUNTOCOMA       shift and go to state 277
    ELSE            shift and go to state 275

    expresionpos                   shift and go to state 276
    else                           shift and go to state 273
    elseif                         shift and go to state 274

state 227

    (35) conllaves -> LLAVEL . bodyblock LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    LLAVER          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 278
    empty                          shift and go to state 205

state 228

    (33) sinllaves -> while .

    PUNTOCOMA       reduce using rule 33 (sinllaves -> while .)
    ELSE            reduce using rule 33 (sinllaves -> while .)


state 229

    (34) sinllaves -> variable .

    PUNTOCOMA       reduce using rule 34 (sinllaves -> variable .)
    ELSE            reduce using rule 34 (sinllaves -> variable .)


state 230

    (98) variableauto -> AUTO id IGUAL valor PUNTOCOMA .

    $end            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    EXCLAMACION     reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    LPAR            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    TRUE            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    FALSE           reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    ENTERO          reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    AUTO            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    CHAR            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    STRING          reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    BOOL            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    CHARACTER       reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    INT             reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    FLOAT           reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    LONG            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    CADENA          reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    LLAVER          reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    ELSE            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    RETURN          reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    WHILE           reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    FOR             reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    STRUCT          reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    PRINT           reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    COUT            reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)
    IF              reduce using rule 98 (variableauto -> AUTO id IGUAL valor PUNTOCOMA .)


state 231

    (100) variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .

    $end            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    LPAR            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    TRUE            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FALSE           reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    ENTERO          reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FLOTANTE        reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    AUTO            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CHAR            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    STRING          reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    BOOL            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CHARACTER       reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    INT             reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FLOAT           reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    LONG            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CADENA          reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    LLAVER          reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    ELSE            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    RETURN          reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    WHILE           reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FOR             reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    STRUCT          reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    PRINT           reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    COUT            reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    IF              reduce using rule 100 (variablechar -> CHAR id IGUAL CHARACTER PUNTOCOMA .)


state 232

    (102) variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    EXCLAMACION     reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LPAR            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CHARACTER       reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    STRUCT          reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    COUT            reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 102 (variablechar -> CHAR id IGUAL IDENTIFICADOR PUNTOCOMA .)


state 233

    (58) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock . RETURN CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock . RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    RETURN          shift and go to state 279
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109
    boolean                        shift and go to state 191

state 234

    (115) variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 280


state 235

    (116) variablearraychar -> CHAR idarray IGUAL LLAVEL datachar . LLAVER PUNTOCOMA
    (119) datachar -> datachar . COMMA CHARACTER

    LLAVER          shift and go to state 281
    COMMA           shift and go to state 282


state 236

    (118) datachar -> CHARACTER .

    LLAVER          reduce using rule 118 (datachar -> CHARACTER .)
    COMMA           reduce using rule 118 (datachar -> CHARACTER .)


state 237

    (117) variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .

    $end            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    EXCLAMACION     reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    LPAR            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    TRUE            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    FALSE           reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    ENTERO          reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    FLOTANTE        reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    AUTO            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    CHAR            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    STRING          reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    BOOL            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    CHARACTER       reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    INT             reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    FLOAT           reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    LONG            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    CADENA          reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    LLAVER          reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    ELSE            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    RETURN          reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    WHILE           reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    FOR             reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    STRUCT          reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    PRINT           reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    COUT            reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)
    IF              reduce using rule 117 (variablearraychar -> CHAR idarray IGUAL CADENA PUNTOCOMA .)


state 238

    (106) variablestring -> STRING id IGUAL stringappend PUNTOCOMA .

    $end            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    EXCLAMACION     reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    LPAR            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    TRUE            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    FALSE           reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    ENTERO          reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    FLOTANTE        reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    AUTO            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    CHAR            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    STRING          reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    BOOL            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    CHARACTER       reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    INT             reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    FLOAT           reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    LONG            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    CADENA          reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    LLAVER          reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    ELSE            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    RETURN          reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    WHILE           reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    FOR             reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    STRUCT          reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    PRINT           reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    COUT            reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)
    IF              reduce using rule 106 (variablestring -> STRING id IGUAL stringappend PUNTOCOMA .)


state 239

    (107) variablestring -> STRING id IGUAL concat PUNTOCOMA .

    $end            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    EXCLAMACION     reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    LPAR            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    TRUE            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    FALSE           reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    ENTERO          reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    FLOTANTE        reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    AUTO            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    CHAR            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    STRING          reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    BOOL            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    CHARACTER       reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    INT             reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    FLOAT           reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    LONG            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    CADENA          reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    LLAVER          reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    ELSE            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    RETURN          reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    WHILE           reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    FOR             reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    STRUCT          reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    PRINT           reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    COUT            reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)
    IF              reduce using rule 107 (variablestring -> STRING id IGUAL concat PUNTOCOMA .)


state 240

    (120) stringappend -> IDENTIFICADOR PUNTO . APPEND LPAR stringdata RPAR

    APPEND          shift and go to state 283


state 241

    (57) funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock . RETURN concat PUNTOCOMA LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    RETURN          shift and go to state 284
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109
    boolean                        shift and go to state 191

state 242

    (103) variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .

    $end            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    EXCLAMACION     reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    LPAR            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    TRUE            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FALSE           reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    ENTERO          reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FLOTANTE        reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    AUTO            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    CHAR            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    STRING          reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    BOOL            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    CHARACTER       reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    INT             reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FLOAT           reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    LONG            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    CADENA          reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    LLAVER          reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    ELSE            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    RETURN          reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    WHILE           reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FOR             reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    STRUCT          reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    PRINT           reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    COUT            reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    IF              reduce using rule 103 (variableboolean -> BOOL id IGUAL operacionbool PUNTOCOMA .)


state 243

    (105) variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    EXCLAMACION     reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LPAR            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CHARACTER       reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    CADENA          reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    STRUCT          reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    COUT            reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 105 (variableboolean -> BOOL id IGUAL IDENTIFICADOR PUNTOCOMA .)


state 244

    (133) operacionbool -> boolean comparador . boolean
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE

    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    boolean                        shift and go to state 285

state 245

    (64) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock . RETURN boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock . RETURN IDENTIFICADOR PUNTOCOMA LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    RETURN          shift and go to state 286
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    boolean                        shift and go to state 191
    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109

state 246

    (60) funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock . LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVER          shift and go to state 287
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109
    boolean                        shift and go to state 191

state 247

    (74) while -> WHILE LPAR statement RPAR LLAVEL bodyblock . LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVER          shift and go to state 288
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109
    boolean                        shift and go to state 191

state 248

    (84) statement -> EXCLAMACION LPAR expresion RPAR .

    RPAR            reduce using rule 84 (statement -> EXCLAMACION LPAR expresion RPAR .)


state 249

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero . PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER

    PUNTOCOMA       shift and go to state 289


state 250

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN . numero PUNTOCOMA LLAVER
    (62) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN . IDENTIFICADOR PUNTOCOMA LLAVER
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    IDENTIFICADOR   shift and go to state 290
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    numero                         shift and go to state 291

state 251

    (13) bodyblock -> bodyblock while .

    RETURN          reduce using rule 13 (bodyblock -> bodyblock while .)
    WHILE           reduce using rule 13 (bodyblock -> bodyblock while .)
    FOR             reduce using rule 13 (bodyblock -> bodyblock while .)
    STRUCT          reduce using rule 13 (bodyblock -> bodyblock while .)
    PRINT           reduce using rule 13 (bodyblock -> bodyblock while .)
    COUT            reduce using rule 13 (bodyblock -> bodyblock while .)
    IF              reduce using rule 13 (bodyblock -> bodyblock while .)
    AUTO            reduce using rule 13 (bodyblock -> bodyblock while .)
    CHAR            reduce using rule 13 (bodyblock -> bodyblock while .)
    STRING          reduce using rule 13 (bodyblock -> bodyblock while .)
    BOOL            reduce using rule 13 (bodyblock -> bodyblock while .)
    ENTERO          reduce using rule 13 (bodyblock -> bodyblock while .)
    FLOTANTE        reduce using rule 13 (bodyblock -> bodyblock while .)
    TRUE            reduce using rule 13 (bodyblock -> bodyblock while .)
    FALSE           reduce using rule 13 (bodyblock -> bodyblock while .)
    INT             reduce using rule 13 (bodyblock -> bodyblock while .)
    FLOAT           reduce using rule 13 (bodyblock -> bodyblock while .)
    LONG            reduce using rule 13 (bodyblock -> bodyblock while .)
    LLAVER          reduce using rule 13 (bodyblock -> bodyblock while .)


state 252

    (14) bodyblock -> bodyblock variable .

    RETURN          reduce using rule 14 (bodyblock -> bodyblock variable .)
    WHILE           reduce using rule 14 (bodyblock -> bodyblock variable .)
    FOR             reduce using rule 14 (bodyblock -> bodyblock variable .)
    STRUCT          reduce using rule 14 (bodyblock -> bodyblock variable .)
    PRINT           reduce using rule 14 (bodyblock -> bodyblock variable .)
    COUT            reduce using rule 14 (bodyblock -> bodyblock variable .)
    IF              reduce using rule 14 (bodyblock -> bodyblock variable .)
    AUTO            reduce using rule 14 (bodyblock -> bodyblock variable .)
    CHAR            reduce using rule 14 (bodyblock -> bodyblock variable .)
    STRING          reduce using rule 14 (bodyblock -> bodyblock variable .)
    BOOL            reduce using rule 14 (bodyblock -> bodyblock variable .)
    ENTERO          reduce using rule 14 (bodyblock -> bodyblock variable .)
    FLOTANTE        reduce using rule 14 (bodyblock -> bodyblock variable .)
    TRUE            reduce using rule 14 (bodyblock -> bodyblock variable .)
    FALSE           reduce using rule 14 (bodyblock -> bodyblock variable .)
    INT             reduce using rule 14 (bodyblock -> bodyblock variable .)
    FLOAT           reduce using rule 14 (bodyblock -> bodyblock variable .)
    LONG            reduce using rule 14 (bodyblock -> bodyblock variable .)
    LLAVER          reduce using rule 14 (bodyblock -> bodyblock variable .)


state 253

    (15) bodyblock -> bodyblock for .

    RETURN          reduce using rule 15 (bodyblock -> bodyblock for .)
    WHILE           reduce using rule 15 (bodyblock -> bodyblock for .)
    FOR             reduce using rule 15 (bodyblock -> bodyblock for .)
    STRUCT          reduce using rule 15 (bodyblock -> bodyblock for .)
    PRINT           reduce using rule 15 (bodyblock -> bodyblock for .)
    COUT            reduce using rule 15 (bodyblock -> bodyblock for .)
    IF              reduce using rule 15 (bodyblock -> bodyblock for .)
    AUTO            reduce using rule 15 (bodyblock -> bodyblock for .)
    CHAR            reduce using rule 15 (bodyblock -> bodyblock for .)
    STRING          reduce using rule 15 (bodyblock -> bodyblock for .)
    BOOL            reduce using rule 15 (bodyblock -> bodyblock for .)
    ENTERO          reduce using rule 15 (bodyblock -> bodyblock for .)
    FLOTANTE        reduce using rule 15 (bodyblock -> bodyblock for .)
    TRUE            reduce using rule 15 (bodyblock -> bodyblock for .)
    FALSE           reduce using rule 15 (bodyblock -> bodyblock for .)
    INT             reduce using rule 15 (bodyblock -> bodyblock for .)
    FLOAT           reduce using rule 15 (bodyblock -> bodyblock for .)
    LONG            reduce using rule 15 (bodyblock -> bodyblock for .)
    LLAVER          reduce using rule 15 (bodyblock -> bodyblock for .)


state 254

    (16) bodyblock -> bodyblock struct .

    RETURN          reduce using rule 16 (bodyblock -> bodyblock struct .)
    WHILE           reduce using rule 16 (bodyblock -> bodyblock struct .)
    FOR             reduce using rule 16 (bodyblock -> bodyblock struct .)
    STRUCT          reduce using rule 16 (bodyblock -> bodyblock struct .)
    PRINT           reduce using rule 16 (bodyblock -> bodyblock struct .)
    COUT            reduce using rule 16 (bodyblock -> bodyblock struct .)
    IF              reduce using rule 16 (bodyblock -> bodyblock struct .)
    AUTO            reduce using rule 16 (bodyblock -> bodyblock struct .)
    CHAR            reduce using rule 16 (bodyblock -> bodyblock struct .)
    STRING          reduce using rule 16 (bodyblock -> bodyblock struct .)
    BOOL            reduce using rule 16 (bodyblock -> bodyblock struct .)
    ENTERO          reduce using rule 16 (bodyblock -> bodyblock struct .)
    FLOTANTE        reduce using rule 16 (bodyblock -> bodyblock struct .)
    TRUE            reduce using rule 16 (bodyblock -> bodyblock struct .)
    FALSE           reduce using rule 16 (bodyblock -> bodyblock struct .)
    INT             reduce using rule 16 (bodyblock -> bodyblock struct .)
    FLOAT           reduce using rule 16 (bodyblock -> bodyblock struct .)
    LONG            reduce using rule 16 (bodyblock -> bodyblock struct .)
    LLAVER          reduce using rule 16 (bodyblock -> bodyblock struct .)


state 255

    (17) bodyblock -> bodyblock imprimir .

    RETURN          reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    WHILE           reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    FOR             reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    STRUCT          reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    PRINT           reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    COUT            reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    IF              reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    AUTO            reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    CHAR            reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    STRING          reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    BOOL            reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    ENTERO          reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    FLOTANTE        reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    TRUE            reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    FALSE           reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    INT             reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    FLOAT           reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    LONG            reduce using rule 17 (bodyblock -> bodyblock imprimir .)
    LLAVER          reduce using rule 17 (bodyblock -> bodyblock imprimir .)


state 256

    (18) bodyblock -> bodyblock expresionif .

    RETURN          reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    WHILE           reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    FOR             reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    STRUCT          reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    PRINT           reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    COUT            reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    IF              reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    AUTO            reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    CHAR            reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    STRING          reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    BOOL            reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    ENTERO          reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    FLOTANTE        reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    TRUE            reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    FALSE           reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    INT             reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    FLOAT           reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    LONG            reduce using rule 18 (bodyblock -> bodyblock expresionif .)
    LLAVER          reduce using rule 18 (bodyblock -> bodyblock expresionif .)


state 257

    (19) bodyblock -> bodyblock mathoperation .

    RETURN          reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    WHILE           reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    FOR             reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    STRUCT          reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    PRINT           reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    COUT            reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    IF              reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    AUTO            reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    CHAR            reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    STRING          reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    BOOL            reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    ENTERO          reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    FLOTANTE        reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    TRUE            reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    FALSE           reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    INT             reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    FLOAT           reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    LONG            reduce using rule 19 (bodyblock -> bodyblock mathoperation .)
    LLAVER          reduce using rule 19 (bodyblock -> bodyblock mathoperation .)


state 258

    (20) bodyblock -> bodyblock operacionbool .

    RETURN          reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    WHILE           reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    FOR             reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    STRUCT          reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    PRINT           reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    COUT            reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    IF              reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    AUTO            reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    CHAR            reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    STRING          reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    BOOL            reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    ENTERO          reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    FLOTANTE        reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    TRUE            reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    FALSE           reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    INT             reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    FLOAT           reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    LONG            reduce using rule 20 (bodyblock -> bodyblock operacionbool .)
    LLAVER          reduce using rule 20 (bodyblock -> bodyblock operacionbool .)


state 259

    (70) parametros -> tipo IDENTIFICADOR masparametros .

    RPAR            reduce using rule 70 (parametros -> tipo IDENTIFICADOR masparametros .)


state 260

    (71) masparametros -> COMMA . parametros
    (69) parametros -> . tipo IDENTIFICADOR
    (70) parametros -> . tipo IDENTIFICADOR masparametros
    (152) tipo -> . numerotipo
    (153) tipo -> . STRING
    (154) tipo -> . CHAR
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    STRING          shift and go to state 157
    CHAR            shift and go to state 158
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    parametros                     shift and go to state 292
    tipo                           shift and go to state 155
    numerotipo                     shift and go to state 156

state 261

    (110) variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 293


state 262

    (112) arraydatanumero -> arraydatanumero COMMA . numero
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE

    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    numero                         shift and go to state 294

state 263

    (111) variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .

    $end            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LPAR            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    TRUE            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FALSE           reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    ENTERO          reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FLOTANTE        reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    AUTO            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CHAR            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    STRING          reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    BOOL            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CHARACTER       reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    INT             reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FLOAT           reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LONG            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CADENA          reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LLAVER          reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    ELSE            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    RETURN          reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    WHILE           reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FOR             reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    STRUCT          reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    PRINT           reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    COUT            reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    IF              reduce using rule 111 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)


state 264

    (78) struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    STRUCT          reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    COUT            reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 78 (struct -> STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA .)


state 265

    (79) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 295


state 266

    (39) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA .

    $end            reduce using rule 39 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER PUNTOCOMA .)


state 267

    (41) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 296


state 268

    (49) definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .

    LLAVER          reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 49 (definicion -> numerotipo IDENTIFICADOR PUNTOCOMA .)


state 269

    (50) definicion -> STRING IDENTIFICADOR PUNTOCOMA .

    LLAVER          reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 50 (definicion -> STRING IDENTIFICADOR PUNTOCOMA .)


state 270

    (51) definicion -> CHAR IDENTIFICADOR PUNTOCOMA .

    LLAVER          reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 51 (definicion -> CHAR IDENTIFICADOR PUNTOCOMA .)


state 271

    (52) definicion -> BOOL IDENTIFICADOR PUNTOCOMA .

    LLAVER          reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 52 (definicion -> BOOL IDENTIFICADOR PUNTOCOMA .)


state 272

    (21) expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .

    $end            reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    RETURN          reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    WHILE           reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FOR             reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    STRUCT          reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    PRINT           reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    COUT            reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    IF              reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    AUTO            reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    CHAR            reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    STRING          reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    BOOL            reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    ENTERO          reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FLOTANTE        reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    TRUE            reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FALSE           reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    INT             reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FLOAT           reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LONG            reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LLAVER          reduce using rule 21 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)


state 273

    (25) expresionpos -> else .

    $end            reduce using rule 25 (expresionpos -> else .)
    RETURN          reduce using rule 25 (expresionpos -> else .)
    WHILE           reduce using rule 25 (expresionpos -> else .)
    FOR             reduce using rule 25 (expresionpos -> else .)
    STRUCT          reduce using rule 25 (expresionpos -> else .)
    PRINT           reduce using rule 25 (expresionpos -> else .)
    COUT            reduce using rule 25 (expresionpos -> else .)
    IF              reduce using rule 25 (expresionpos -> else .)
    AUTO            reduce using rule 25 (expresionpos -> else .)
    CHAR            reduce using rule 25 (expresionpos -> else .)
    STRING          reduce using rule 25 (expresionpos -> else .)
    BOOL            reduce using rule 25 (expresionpos -> else .)
    ENTERO          reduce using rule 25 (expresionpos -> else .)
    FLOTANTE        reduce using rule 25 (expresionpos -> else .)
    TRUE            reduce using rule 25 (expresionpos -> else .)
    FALSE           reduce using rule 25 (expresionpos -> else .)
    INT             reduce using rule 25 (expresionpos -> else .)
    FLOAT           reduce using rule 25 (expresionpos -> else .)
    LONG            reduce using rule 25 (expresionpos -> else .)
    LLAVER          reduce using rule 25 (expresionpos -> else .)


state 274

    (26) expresionpos -> elseif .

    $end            reduce using rule 26 (expresionpos -> elseif .)
    RETURN          reduce using rule 26 (expresionpos -> elseif .)
    WHILE           reduce using rule 26 (expresionpos -> elseif .)
    FOR             reduce using rule 26 (expresionpos -> elseif .)
    STRUCT          reduce using rule 26 (expresionpos -> elseif .)
    PRINT           reduce using rule 26 (expresionpos -> elseif .)
    COUT            reduce using rule 26 (expresionpos -> elseif .)
    IF              reduce using rule 26 (expresionpos -> elseif .)
    AUTO            reduce using rule 26 (expresionpos -> elseif .)
    CHAR            reduce using rule 26 (expresionpos -> elseif .)
    STRING          reduce using rule 26 (expresionpos -> elseif .)
    BOOL            reduce using rule 26 (expresionpos -> elseif .)
    ENTERO          reduce using rule 26 (expresionpos -> elseif .)
    FLOTANTE        reduce using rule 26 (expresionpos -> elseif .)
    TRUE            reduce using rule 26 (expresionpos -> elseif .)
    FALSE           reduce using rule 26 (expresionpos -> elseif .)
    INT             reduce using rule 26 (expresionpos -> elseif .)
    FLOAT           reduce using rule 26 (expresionpos -> elseif .)
    LONG            reduce using rule 26 (expresionpos -> elseif .)
    LLAVER          reduce using rule 26 (expresionpos -> elseif .)


state 275

    (31) else -> ELSE . conllaves
    (32) else -> ELSE . sinllaves PUNTOCOMA
    (27) elseif -> ELSE . IF LPAR condicionif RPAR conllaves else
    (28) elseif -> ELSE . IF LPAR condicionif RPAR sinllaves PUNTOCOMA else
    (29) elseif -> ELSE . IF LPAR condicionif RPAR conllaves
    (30) elseif -> ELSE . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (35) conllaves -> . LLAVEL bodyblock LLAVER
    (33) sinllaves -> . while
    (34) sinllaves -> . variable
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    IF              shift and go to state 299
    LLAVEL          shift and go to state 227
    WHILE           shift and go to state 23
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    conllaves                      shift and go to state 297
    sinllaves                      shift and go to state 298
    while                          shift and go to state 228
    variable                       shift and go to state 229
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120

state 276

    (22) expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .

    $end            reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    RETURN          reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    WHILE           reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FOR             reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    STRUCT          reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    PRINT           reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    COUT            reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    IF              reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    AUTO            reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    CHAR            reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    STRING          reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    BOOL            reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    ENTERO          reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FLOTANTE        reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    TRUE            reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FALSE           reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    INT             reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FLOAT           reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LONG            reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LLAVER          reduce using rule 22 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)


state 277

    (24) expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .

    $end            reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    RETURN          reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    WHILE           reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FOR             reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    STRUCT          reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    PRINT           reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    COUT            reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    IF              reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    AUTO            reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    CHAR            reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    STRING          reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    BOOL            reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    ENTERO          reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FLOTANTE        reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    TRUE            reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FALSE           reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    INT             reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FLOAT           reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    LONG            reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    LLAVER          reduce using rule 24 (expresionif -> IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)


state 278

    (35) conllaves -> LLAVEL bodyblock . LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVER          shift and go to state 300
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109
    boolean                        shift and go to state 191

state 279

    (58) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN . CHARACTER PUNTOCOMA LLAVER
    (59) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN . IDENTIFICADOR PUNTOCOMA LLAVER

    CHARACTER       shift and go to state 302
    IDENTIFICADOR   shift and go to state 301


state 280

    (115) variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .

    $end            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LPAR            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    TRUE            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FALSE           reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    ENTERO          reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FLOTANTE        reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    AUTO            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CHAR            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    STRING          reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    BOOL            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CHARACTER       reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    INT             reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FLOAT           reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LONG            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CADENA          reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LLAVER          reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    ELSE            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    RETURN          reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    WHILE           reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FOR             reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    STRUCT          reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    PRINT           reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    COUT            reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)
    IF              reduce using rule 115 (variablearraychar -> CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA .)


state 281

    (116) variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 303


state 282

    (119) datachar -> datachar COMMA . CHARACTER

    CHARACTER       shift and go to state 304


state 283

    (120) stringappend -> IDENTIFICADOR PUNTO APPEND . LPAR stringdata RPAR

    LPAR            shift and go to state 305


state 284

    (57) funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN . concat PUNTOCOMA LLAVER
    (121) concat -> . stringdata MAS concat
    (122) concat -> . stringdata
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    concat                         shift and go to state 306
    stringdata                     shift and go to state 92

state 285

    (133) operacionbool -> boolean comparador boolean .

    PUNTOCOMA       reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    RETURN          reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    WHILE           reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    FOR             reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    STRUCT          reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    PRINT           reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    COUT            reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    IF              reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    AUTO            reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    CHAR            reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    STRING          reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    BOOL            reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    ENTERO          reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    FLOTANTE        reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    TRUE            reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    FALSE           reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    INT             reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    FLOAT           reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    LONG            reduce using rule 133 (operacionbool -> boolean comparador boolean .)
    LLAVER          reduce using rule 133 (operacionbool -> boolean comparador boolean .)


state 286

    (64) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN . boolean PUNTOCOMA LLAVER
    (65) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN . IDENTIFICADOR PUNTOCOMA LLAVER
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE

    IDENTIFICADOR   shift and go to state 307
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51

    boolean                        shift and go to state 308

state 287

    (60) funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .

    $end            reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)
    VOID            reduce using rule 60 (funcionimplvoid -> VOID IDENTIFICADOR parametrosimpl LLAVEL bodyblock LLAVER .)


state 288

    (74) while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    PUNTOCOMA       reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    ELSE            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    STRUCT          reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    ENTERO          reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FLOTANTE        reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    TRUE            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FALSE           reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 74 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)


state 289

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA . expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    LPAR            shift and go to state 21
    CHARACTER       shift and go to state 38
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    numero                         shift and go to state 60
    expresion                      shift and go to state 309
    valor                          shift and go to state 35
    boolean                        shift and go to state 43
    stringdata                     shift and go to state 46

state 290

    (62) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 310


state 291

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 311


state 292

    (71) masparametros -> COMMA parametros .

    RPAR            reduce using rule 71 (masparametros -> COMMA parametros .)


state 293

    (110) variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .

    $end            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    LPAR            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    TRUE            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    FALSE           reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    ENTERO          reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    FLOTANTE        reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    AUTO            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    CHAR            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    STRING          reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    BOOL            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    CHARACTER       reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    INT             reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    FLOAT           reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    LONG            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    CADENA          reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    LLAVER          reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    ELSE            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    RETURN          reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    WHILE           reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    FOR             reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    STRUCT          reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    PRINT           reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    COUT            reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)
    IF              reduce using rule 110 (variablearraynumero -> numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA .)


state 294

    (112) arraydatanumero -> arraydatanumero COMMA numero .

    LLAVER          reduce using rule 112 (arraydatanumero -> arraydatanumero COMMA numero .)
    COMMA           reduce using rule 112 (arraydatanumero -> arraydatanumero COMMA numero .)


state 295

    (79) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    STRUCT          reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    COUT            reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 79 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)


state 296

    (41) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA .

    $end            reduce using rule 41 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL acceso bloqueclase LLAVER PUNTOCOMA .)


state 297

    (31) else -> ELSE conllaves .

    $end            reduce using rule 31 (else -> ELSE conllaves .)
    RETURN          reduce using rule 31 (else -> ELSE conllaves .)
    WHILE           reduce using rule 31 (else -> ELSE conllaves .)
    FOR             reduce using rule 31 (else -> ELSE conllaves .)
    STRUCT          reduce using rule 31 (else -> ELSE conllaves .)
    PRINT           reduce using rule 31 (else -> ELSE conllaves .)
    COUT            reduce using rule 31 (else -> ELSE conllaves .)
    IF              reduce using rule 31 (else -> ELSE conllaves .)
    AUTO            reduce using rule 31 (else -> ELSE conllaves .)
    CHAR            reduce using rule 31 (else -> ELSE conllaves .)
    STRING          reduce using rule 31 (else -> ELSE conllaves .)
    BOOL            reduce using rule 31 (else -> ELSE conllaves .)
    ENTERO          reduce using rule 31 (else -> ELSE conllaves .)
    FLOTANTE        reduce using rule 31 (else -> ELSE conllaves .)
    TRUE            reduce using rule 31 (else -> ELSE conllaves .)
    FALSE           reduce using rule 31 (else -> ELSE conllaves .)
    INT             reduce using rule 31 (else -> ELSE conllaves .)
    FLOAT           reduce using rule 31 (else -> ELSE conllaves .)
    LONG            reduce using rule 31 (else -> ELSE conllaves .)
    LLAVER          reduce using rule 31 (else -> ELSE conllaves .)


state 298

    (32) else -> ELSE sinllaves . PUNTOCOMA

    PUNTOCOMA       shift and go to state 312


state 299

    (27) elseif -> ELSE IF . LPAR condicionif RPAR conllaves else
    (28) elseif -> ELSE IF . LPAR condicionif RPAR sinllaves PUNTOCOMA else
    (29) elseif -> ELSE IF . LPAR condicionif RPAR conllaves
    (30) elseif -> ELSE IF . LPAR condicionif RPAR sinllaves PUNTOCOMA

    LPAR            shift and go to state 313


state 300

    (35) conllaves -> LLAVEL bodyblock LLAVER .

    ELSE            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    $end            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    STRUCT          reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    ENTERO          reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    FLOTANTE        reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    TRUE            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    FALSE           reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 35 (conllaves -> LLAVEL bodyblock LLAVER .)


state 301

    (59) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 314


state 302

    (58) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 315


state 303

    (116) variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .

    $end            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    LPAR            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    TRUE            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    FALSE           reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    ENTERO          reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    FLOTANTE        reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    AUTO            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    CHAR            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    STRING          reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    BOOL            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    CHARACTER       reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    INT             reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    FLOAT           reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    LONG            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    CADENA          reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    LLAVER          reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    PUNTOCOMA       reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    ELSE            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    RETURN          reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    WHILE           reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    FOR             reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    STRUCT          reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    PRINT           reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    COUT            reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)
    IF              reduce using rule 116 (variablearraychar -> CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA .)


state 304

    (119) datachar -> datachar COMMA CHARACTER .

    LLAVER          reduce using rule 119 (datachar -> datachar COMMA CHARACTER .)
    COMMA           reduce using rule 119 (datachar -> datachar COMMA CHARACTER .)


state 305

    (120) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR . stringdata RPAR
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR

    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26

    stringdata                     shift and go to state 316

state 306

    (57) funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 317


state 307

    (65) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 318


state 308

    (64) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 319


state 309

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion . PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER

    PUNTOCOMA       shift and go to state 320


state 310

    (62) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 321


state 311

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 322


state 312

    (32) else -> ELSE sinllaves PUNTOCOMA .

    $end            reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    RETURN          reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    WHILE           reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    FOR             reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    STRUCT          reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    PRINT           reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    COUT            reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    IF              reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    AUTO            reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    CHAR            reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    STRING          reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    BOOL            reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    ENTERO          reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    FLOTANTE        reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    TRUE            reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    FALSE           reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    INT             reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    FLOAT           reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    LONG            reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)
    LLAVER          reduce using rule 32 (else -> ELSE sinllaves PUNTOCOMA .)


state 313

    (27) elseif -> ELSE IF LPAR . condicionif RPAR conllaves else
    (28) elseif -> ELSE IF LPAR . condicionif RPAR sinllaves PUNTOCOMA else
    (29) elseif -> ELSE IF LPAR . condicionif RPAR conllaves
    (30) elseif -> ELSE IF LPAR . condicionif RPAR sinllaves PUNTOCOMA
    (36) condicionif -> . initcondicion
    (37) condicionif -> . statement
    (38) initcondicion -> . varblock statement
    (82) statement -> . expresion
    (83) statement -> . EXCLAMACION boolean
    (84) statement -> . EXCLAMACION LPAR expresion RPAR
    (85) statement -> . EXCLAMACION IDENTIFICADOR
    (86) statement -> . boolean
    (87) statement -> . numero
    (76) varblock -> . varblock variable
    (77) varblock -> . variable
    (123) expresion -> . valor comparador valor
    (124) expresion -> . LPAR valor comparador valor RPAR
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (155) valor -> . numero
    (156) valor -> . CHARACTER
    (157) valor -> . boolean
    (158) valor -> . stringdata
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (150) stringdata -> . CADENA
    (151) stringdata -> . IDENTIFICADOR
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    EXCLAMACION     shift and go to state 97
    LPAR            shift and go to state 21
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    CHARACTER       shift and go to state 38
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    CADENA          shift and go to state 40
    IDENTIFICADOR   shift and go to state 26
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    condicionif                    shift and go to state 323
    initcondicion                  shift and go to state 116
    statement                      shift and go to state 117
    varblock                       shift and go to state 118
    expresion                      shift and go to state 96
    boolean                        shift and go to state 98
    numero                         shift and go to state 99
    variable                       shift and go to state 119
    valor                          shift and go to state 35
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    stringdata                     shift and go to state 46
    numerotipo                     shift and go to state 120

state 314

    (59) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 324


state 315

    (58) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 325


state 316

    (120) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata . RPAR

    RPAR            shift and go to state 326


state 317

    (57) funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 327


state 318

    (65) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 328


state 319

    (64) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 329


state 320

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA . unaryexp RPAR LLAVEL bodyblock LLAVER
    (80) unaryexp -> . IDENTIFICADOR MAS MAS
    (81) unaryexp -> . IDENTIFICADOR MENOS MENOS

    IDENTIFICADOR   shift and go to state 330

    unaryexp                       shift and go to state 331

state 321

    (62) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .

    $end            reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    STRING          reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    INT             reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    LONG            reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    VOID            reduce using rule 62 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)


state 322

    (61) funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .

    $end            reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    STRING          reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    INT             reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    LONG            reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)
    VOID            reduce using rule 61 (funcionimplnumero -> numerotipo IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN numero PUNTOCOMA LLAVER .)


state 323

    (27) elseif -> ELSE IF LPAR condicionif . RPAR conllaves else
    (28) elseif -> ELSE IF LPAR condicionif . RPAR sinllaves PUNTOCOMA else
    (29) elseif -> ELSE IF LPAR condicionif . RPAR conllaves
    (30) elseif -> ELSE IF LPAR condicionif . RPAR sinllaves PUNTOCOMA

    RPAR            shift and go to state 332


state 324

    (59) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .

    $end            reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    STRING          reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    INT             reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    LONG            reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    VOID            reduce using rule 59 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)


state 325

    (58) funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .

    $end            reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    STRING          reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    INT             reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    LONG            reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)
    VOID            reduce using rule 58 (funcionimplstring -> CHAR IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN CHARACTER PUNTOCOMA LLAVER .)


state 326

    (120) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .

    PUNTOCOMA       reduce using rule 120 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)


state 327

    (57) funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .

    $end            reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    STRING          reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    INT             reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    LONG            reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)
    VOID            reduce using rule 57 (funcionimplstring -> STRING IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN concat PUNTOCOMA LLAVER .)


state 328

    (65) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .

    $end            reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    STRING          reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    INT             reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    LONG            reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)
    VOID            reduce using rule 65 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN IDENTIFICADOR PUNTOCOMA LLAVER .)


state 329

    (64) funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .

    $end            reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    STRING          reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    INT             reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    LONG            reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)
    VOID            reduce using rule 64 (funcionimplbool -> BOOL IDENTIFICADOR parametrosimpl LLAVEL bodyblock RETURN boolean PUNTOCOMA LLAVER .)


state 330

    (80) unaryexp -> IDENTIFICADOR . MAS MAS
    (81) unaryexp -> IDENTIFICADOR . MENOS MENOS

    MAS             shift and go to state 333
    MENOS           shift and go to state 334


state 331

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 335


state 332

    (27) elseif -> ELSE IF LPAR condicionif RPAR . conllaves else
    (28) elseif -> ELSE IF LPAR condicionif RPAR . sinllaves PUNTOCOMA else
    (29) elseif -> ELSE IF LPAR condicionif RPAR . conllaves
    (30) elseif -> ELSE IF LPAR condicionif RPAR . sinllaves PUNTOCOMA
    (35) conllaves -> . LLAVEL bodyblock LLAVER
    (33) sinllaves -> . while
    (34) sinllaves -> . variable
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVEL          shift and go to state 227
    WHILE           shift and go to state 23
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    conllaves                      shift and go to state 336
    sinllaves                      shift and go to state 337
    while                          shift and go to state 228
    variable                       shift and go to state 229
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120

state 333

    (80) unaryexp -> IDENTIFICADOR MAS . MAS

    MAS             shift and go to state 338


state 334

    (81) unaryexp -> IDENTIFICADOR MENOS . MENOS

    MENOS           shift and go to state 339


state 335

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 340


state 336

    (27) elseif -> ELSE IF LPAR condicionif RPAR conllaves . else
    (29) elseif -> ELSE IF LPAR condicionif RPAR conllaves .
    (31) else -> . ELSE conllaves
    (32) else -> . ELSE sinllaves PUNTOCOMA

    $end            reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    RETURN          reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    WHILE           reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    FOR             reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    STRUCT          reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    PRINT           reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    COUT            reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    IF              reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    AUTO            reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    CHAR            reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    STRING          reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    BOOL            reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    ENTERO          reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    FLOTANTE        reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    TRUE            reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    FALSE           reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    INT             reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    FLOAT           reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    LONG            reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    LLAVER          reduce using rule 29 (elseif -> ELSE IF LPAR condicionif RPAR conllaves .)
    ELSE            shift and go to state 341

    else                           shift and go to state 342

state 337

    (28) elseif -> ELSE IF LPAR condicionif RPAR sinllaves . PUNTOCOMA else
    (30) elseif -> ELSE IF LPAR condicionif RPAR sinllaves . PUNTOCOMA

    PUNTOCOMA       shift and go to state 343


state 338

    (80) unaryexp -> IDENTIFICADOR MAS MAS .

    RPAR            reduce using rule 80 (unaryexp -> IDENTIFICADOR MAS MAS .)


state 339

    (81) unaryexp -> IDENTIFICADOR MENOS MENOS .

    RPAR            reduce using rule 81 (unaryexp -> IDENTIFICADOR MENOS MENOS .)


state 340

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL . bodyblock LLAVER
    (12) bodyblock -> . empty
    (13) bodyblock -> . bodyblock while
    (14) bodyblock -> . bodyblock variable
    (15) bodyblock -> . bodyblock for
    (16) bodyblock -> . bodyblock struct
    (17) bodyblock -> . bodyblock imprimir
    (18) bodyblock -> . bodyblock expresionif
    (19) bodyblock -> . bodyblock mathoperation
    (20) bodyblock -> . bodyblock operacionbool
    (11) empty -> .

    LLAVER          reduce using rule 11 (empty -> .)
    WHILE           reduce using rule 11 (empty -> .)
    FOR             reduce using rule 11 (empty -> .)
    STRUCT          reduce using rule 11 (empty -> .)
    PRINT           reduce using rule 11 (empty -> .)
    COUT            reduce using rule 11 (empty -> .)
    IF              reduce using rule 11 (empty -> .)
    AUTO            reduce using rule 11 (empty -> .)
    CHAR            reduce using rule 11 (empty -> .)
    STRING          reduce using rule 11 (empty -> .)
    BOOL            reduce using rule 11 (empty -> .)
    ENTERO          reduce using rule 11 (empty -> .)
    FLOTANTE        reduce using rule 11 (empty -> .)
    TRUE            reduce using rule 11 (empty -> .)
    FALSE           reduce using rule 11 (empty -> .)
    INT             reduce using rule 11 (empty -> .)
    FLOAT           reduce using rule 11 (empty -> .)
    LONG            reduce using rule 11 (empty -> .)

    bodyblock                      shift and go to state 344
    empty                          shift and go to state 205

state 341

    (31) else -> ELSE . conllaves
    (32) else -> ELSE . sinllaves PUNTOCOMA
    (35) conllaves -> . LLAVEL bodyblock LLAVER
    (33) sinllaves -> . while
    (34) sinllaves -> . variable
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVEL          shift and go to state 227
    WHILE           shift and go to state 23
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    conllaves                      shift and go to state 297
    sinllaves                      shift and go to state 298
    while                          shift and go to state 228
    variable                       shift and go to state 229
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    numerotipo                     shift and go to state 120

state 342

    (27) elseif -> ELSE IF LPAR condicionif RPAR conllaves else .

    $end            reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    RETURN          reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    WHILE           reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FOR             reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    STRUCT          reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    PRINT           reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    COUT            reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    IF              reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    AUTO            reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    CHAR            reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    STRING          reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    BOOL            reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    ENTERO          reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FLOTANTE        reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    TRUE            reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FALSE           reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    INT             reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FLOAT           reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LONG            reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LLAVER          reduce using rule 27 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)


state 343

    (28) elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA . else
    (30) elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .
    (31) else -> . ELSE conllaves
    (32) else -> . ELSE sinllaves PUNTOCOMA

    $end            reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    RETURN          reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    WHILE           reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FOR             reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    STRUCT          reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    PRINT           reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    COUT            reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    IF              reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    AUTO            reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    CHAR            reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    STRING          reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    BOOL            reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    ENTERO          reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FLOTANTE        reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    TRUE            reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FALSE           reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    INT             reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    FLOAT           reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    LONG            reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    LLAVER          reduce using rule 30 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA .)
    ELSE            shift and go to state 341

    else                           shift and go to state 345

state 344

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock . LLAVER
    (13) bodyblock -> bodyblock . while
    (14) bodyblock -> bodyblock . variable
    (15) bodyblock -> bodyblock . for
    (16) bodyblock -> bodyblock . struct
    (17) bodyblock -> bodyblock . imprimir
    (18) bodyblock -> bodyblock . expresionif
    (19) bodyblock -> bodyblock . mathoperation
    (20) bodyblock -> bodyblock . operacionbool
    (74) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (88) variable -> . variableauto
    (89) variable -> . variablenumero
    (90) variable -> . variablechar
    (91) variable -> . variablestring
    (92) variable -> . variablearraynumero
    (93) variable -> . variablearraychar
    (94) variable -> . variableboolean
    (75) for -> . FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER
    (78) struct -> . STRUCT IDENTIFICADOR LLAVEL LLAVER IDENTIFICADOR PUNTOCOMA
    (79) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (72) imprimir -> . PRINT LPAR concat RPAR PUNTOCOMA
    (73) imprimir -> . COUT MENOR MENOR concat PUNTOCOMA
    (21) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (22) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (23) expresionif -> . IF LPAR condicionif RPAR conllaves
    (24) expresionif -> . IF LPAR condicionif RPAR sinllaves PUNTOCOMA
    (127) mathoperation -> . numero operation
    (128) mathoperation -> . numero
    (133) operacionbool -> . boolean comparador boolean
    (134) operacionbool -> . boolean
    (98) variableauto -> . AUTO id IGUAL valor PUNTOCOMA
    (99) variableauto -> . AUTO id PUNTOCOMA
    (95) variablenumero -> . numerotipo id IGUAL mathoperation PUNTOCOMA
    (96) variablenumero -> . numerotipo id PUNTOCOMA
    (97) variablenumero -> . numerotipo id IGUAL IDENTIFICADOR PUNTOCOMA
    (100) variablechar -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (101) variablechar -> . CHAR id PUNTOCOMA
    (102) variablechar -> . CHAR id IGUAL IDENTIFICADOR PUNTOCOMA
    (106) variablestring -> . STRING id IGUAL stringappend PUNTOCOMA
    (107) variablestring -> . STRING id IGUAL concat PUNTOCOMA
    (108) variablestring -> . STRING id PUNTOCOMA
    (109) variablearraynumero -> . numerotipo idarray PUNTOCOMA
    (110) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL arraydatanumero LLAVER PUNTOCOMA
    (111) variablearraynumero -> . numerotipo idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (114) variablearraychar -> . CHAR idarray PUNTOCOMA
    (115) variablearraychar -> . CHAR idarray IGUAL LLAVEL LLAVER PUNTOCOMA
    (116) variablearraychar -> . CHAR idarray IGUAL LLAVEL datachar LLAVER PUNTOCOMA
    (117) variablearraychar -> . CHAR idarray IGUAL CADENA PUNTOCOMA
    (103) variableboolean -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (104) variableboolean -> . BOOL id PUNTOCOMA
    (105) variableboolean -> . BOOL id IGUAL IDENTIFICADOR PUNTOCOMA
    (145) numero -> . ENTERO
    (146) numero -> . FLOTANTE
    (135) boolean -> . TRUE
    (136) boolean -> . FALSE
    (147) numerotipo -> . INT
    (148) numerotipo -> . FLOAT
    (149) numerotipo -> . LONG

    LLAVER          shift and go to state 346
    WHILE           shift and go to state 23
    FOR             shift and go to state 24
    STRUCT          shift and go to state 28
    PRINT           shift and go to state 20
    COUT            shift and go to state 22
    IF              shift and go to state 34
    AUTO            shift and go to state 36
    CHAR            shift and go to state 121
    STRING          shift and go to state 122
    BOOL            shift and go to state 123
    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45
    TRUE            shift and go to state 50
    FALSE           shift and go to state 51
    INT             shift and go to state 47
    FLOAT           shift and go to state 48
    LONG            shift and go to state 49

    numerotipo                     shift and go to state 120
    numero                         shift and go to state 109
    while                          shift and go to state 251
    variable                       shift and go to state 252
    for                            shift and go to state 253
    struct                         shift and go to state 254
    imprimir                       shift and go to state 255
    expresionif                    shift and go to state 256
    mathoperation                  shift and go to state 257
    operacionbool                  shift and go to state 258
    variableauto                   shift and go to state 13
    variablenumero                 shift and go to state 14
    variablechar                   shift and go to state 15
    variablestring                 shift and go to state 16
    variablearraynumero            shift and go to state 17
    variablearraychar              shift and go to state 18
    variableboolean                shift and go to state 19
    boolean                        shift and go to state 191

state 345

    (28) elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .

    $end            reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    RETURN          reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    WHILE           reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    FOR             reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    STRUCT          reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    PRINT           reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    COUT            reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    IF              reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    AUTO            reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    CHAR            reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    STRING          reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    BOOL            reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    ENTERO          reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    FLOTANTE        reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    TRUE            reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    FALSE           reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    INT             reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    FLOAT           reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    LONG            reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)
    LLAVER          reduce using rule 28 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves PUNTOCOMA else .)


state 346

    (75) for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    STRUCT          reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    ENTERO          reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    FLOTANTE        reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    TRUE            reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    FALSE           reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 75 (for -> FOR LPAR numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA expresion PUNTOCOMA unaryexp RPAR LLAVEL bodyblock LLAVER .)

