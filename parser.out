Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    BACKSLASH
    CIRCUNFLEJO
    COMADOBLE
    COMASIMPLE
    COMENTARIO
    DOBLEPUNTO
    INTERROGACION
    NEW
    NULLPOINTER
    NUMERAL
    PIPE
    PORCENTAJE
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTERO
    STATIC
    THEN
    VIRGUILA

Grammar

Rule 0     S' -> body
Rule 1     body -> bodyblock variable
Rule 2     body -> bodyblock while
Rule 3     body -> bodyblock expresionif
Rule 4     body -> bodyblock claseimplementacion
Rule 5     body -> bodyblock for
Rule 6     body -> bodyblock funcionclaseimpl
Rule 7     body -> bodyblock arraydeclaration
Rule 8     body -> bodyblock creacionobjeto
Rule 9     body -> bodyblock asignarvalorobjeto
Rule 10    body -> bodyblock usarfuncionobjeto
Rule 11    body -> bodyblock struct
Rule 12    body -> bodyblock imprimir
Rule 13    body -> bodyblock stringappend
Rule 14    body -> <empty>
Rule 15    id -> IDENTIFICADOR
Rule 16    id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER
Rule 17    tipo -> INT
Rule 18    tipo -> FLOAT
Rule 19    tipo -> LONG
Rule 20    tipo -> AUTO
Rule 21    tipo -> STRING
Rule 22    tipo -> CHAR
Rule 23    imprimir -> PRINT LPAR valor RPAR
Rule 24    imprimir -> COUT MENOR MENOR valor
Rule 25    imprimir -> COUT MENOR MENOR variable
Rule 26    bodyblock -> bodyblock variable
Rule 27    bodyblock -> bodyblock while
Rule 28    bodyblock -> bodyblock expresionif
Rule 29    bodyblock -> bodyblock claseimplementacion
Rule 30    bodyblock -> bodyblock for
Rule 31    bodyblock -> bodyblock funcionclaseimpl
Rule 32    bodyblock -> bodyblock arraydeclaration
Rule 33    bodyblock -> bodyblock creacionobjeto
Rule 34    bodyblock -> bodyblock asignarvalorobjeto
Rule 35    bodyblock -> bodyblock usarfuncionobjeto
Rule 36    bodyblock -> bodyblock struct
Rule 37    bodyblock -> bodyblock imprimir
Rule 38    bodyblock -> bodyblock stringappend
Rule 39    bodyblock -> <empty>
Rule 40    funcionblock -> bodyblock variable
Rule 41    funcionblock -> bodyblock while
Rule 42    funcionblock -> bodyblock expresionif
Rule 43    funcionblock -> bodyblock for
Rule 44    funcionblock -> bodyblock imprimir
Rule 45    funcionblock -> RETURN statement
Rule 46    funcionblock -> <empty>
Rule 47    operacionbool -> boolean comparador boolean
Rule 48    operacionbooleanfuera -> booleanstring
Rule 49    operacionbooleanfuera -> booleanint
Rule 50    booleanstring -> boolean MAS CADENA
Rule 51    booleanstring -> boolean MENOS CADENA
Rule 52    booleanstring -> CADENA MAS boolean
Rule 53    booleanstring -> CADENA MENOS boolean
Rule 54    booleanint -> boolean MAS ENTERO
Rule 55    booleanint -> boolean MENOS ENTERO
Rule 56    booleanint -> ENTERO MAS boolean
Rule 57    booleanint -> ENTERO MENOS boolean
Rule 58    varblock -> varblock variable
Rule 59    varblock -> <empty>
Rule 60    numerotipo -> INT
Rule 61    numerotipo -> FLOAT
Rule 62    numerotipo -> LONG
Rule 63    numero -> ENTERO
Rule 64    numero -> FLOTANTE
Rule 65    variable -> tipo id IGUAL numero PUNTOCOMA
Rule 66    variable -> tipo id PUNTOCOMA
Rule 67    variable -> AUTO id IGUAL valor PUNTOCOMA
Rule 68    variable -> AUTO id PUNTOCOMA
Rule 69    variable -> CHAR id IGUAL CHARACTER PUNTOCOMA
Rule 70    variable -> STRING id IGUAL CADENA PUNTOCOMA
Rule 71    variable -> STRING id IGUAL stringappend PUNTOCOMA
Rule 72    variable -> STRING id IGUAL concat PUNTOCOMA
Rule 73    variable -> STRING id IGUAL booleanstring PUNTOCOMA
Rule 74    variable -> BOOL id IGUAL operacionbool PUNTOCOMA
Rule 75    stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
Rule 76    stringdata -> CADENA
Rule 77    stringdata -> IDENTIFICADOR
Rule 78    concat -> concat MAS CADENA
Rule 79    concat -> concat MAS IDENTIFICADOR
Rule 80    concat -> CADENA
Rule 81    valor -> ENTERO
Rule 82    valor -> FLOTANTE
Rule 83    valor -> CHARACTER
Rule 84    valor -> CADENA
Rule 85    valor -> TRUE
Rule 86    valor -> FALSE
Rule 87    valor -> IDENTIFICADOR
Rule 88    while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
Rule 89    expresion -> expresion comparador expresion
Rule 90    struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
Rule 91    expresionif -> IF LPAR condicionif RPAR conllaves expresionpos
Rule 92    expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos
Rule 93    expresionpos -> else
Rule 94    expresionpos -> elseif
Rule 95    expresionpos -> <empty>
Rule 96    elseif -> ELSE IF LPAR condicionif RPAR conllaves else
Rule 97    elseif -> ELSE IF LPAR condicionif RPAR sinllaves else
Rule 98    elseif -> <empty>
Rule 99    else -> ELSE conllaves
Rule 100   else -> ELSE sinllaves
Rule 101   sinllaves -> while
Rule 102   sinllaves -> variable
Rule 103   conllaves -> LLAVEL bodyblock LLAVER
Rule 104   condicionif -> initcondicion
Rule 105   condicionif -> statement
Rule 106   initcondicion -> varblock statement
Rule 107   statement -> expresion
Rule 108   statement -> EXCLAMACION boolean
Rule 109   statement -> EXCLAMACION LPAR expresion RPAR
Rule 110   statement -> EXCLAMACION IDENTIFICADOR
Rule 111   boolean -> TRUE
Rule 112   boolean -> FALSE
Rule 113   expresion -> valor
Rule 114   comparador -> IGUAL IGUAL
Rule 115   comparador -> MENOR
Rule 116   comparador -> MAYOR
Rule 117   comparador -> MENOR IGUAL
Rule 118   comparador -> MAYOR IGUAL
Rule 119   comparador -> EXCLAMACION IGUAL
Rule 120   initfor -> tipo IDENTIFICADOR IGUAL valor
Rule 121   condfor -> IDENTIFICADOR comparador valor
Rule 122   loopfor -> asign
Rule 123   loopfor -> unaryexp
Rule 124   asign -> IDENTIFICADOR MAS valor
Rule 125   asign -> IDENTIFICADOR MENOS valor
Rule 126   asign -> IDENTIFICADOR ASTERISCO valor
Rule 127   asign -> IDENTIFICADOR SLASH valor
Rule 128   unaryexp -> IDENTIFICADOR MAS MAS
Rule 129   unaryexp -> IDENTIFICADOR MENOS MENOS
Rule 130   for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
Rule 131   arraydeclaration -> tipo id PUNTOCOMA
Rule 132   arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
Rule 133   arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
Rule 134   arraydata -> arraydata COMMA valor
Rule 135   arraydata -> valor
Rule 136   claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
Rule 137   bloqueclase -> bloqueclase definicion
Rule 138   bloqueclase -> bloqueclase funcionclaseimpl
Rule 139   bloqueclase -> <empty>
Rule 140   definicion -> tipo IDENTIFICADOR PUNTOCOMA
Rule 141   definicion -> <empty>
Rule 142   funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
Rule 143   funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
Rule 144   funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
Rule 145   funcionclaseimpl -> <empty>
Rule 146   parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion
Rule 147   parametrosimplementacion -> tipo IDENTIFICADOR IGUAL valor masparametrosimplementacion
Rule 148   parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER masparametrosimplementacion
Rule 149   parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER IGUAL masparametrosimplementacion
Rule 150   parametrosimplementacion -> <empty>
Rule 151   parametrosfuncion -> IDENTIFICADOR masparametrosfuncion
Rule 152   parametrosfuncion -> valor masparametrosfuncion
Rule 153   parametrosfuncion -> <empty>
Rule 154   masparametrosimplementacion -> COMMA parametrosimplementacion
Rule 155   masparametrosimplementacion -> <empty>
Rule 156   masparametrosfuncion -> COMMA parametrosfuncion
Rule 157   masparametrosfuncion -> <empty>
Rule 158   creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
Rule 159   asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
Rule 160   usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA

Terminals, with rules where they appear

AND                  : 
APPEND               : 75
ASTERISCO            : 126
AUTO                 : 20 67 68
BACKSLASH            : 
BOOL                 : 74
CADENA               : 50 51 52 53 70 76 78 80 84
CHAR                 : 22 69
CHARACTER            : 69 83
CIRCUNFLEJO          : 
CLASS                : 136
COMADOBLE            : 
COMASIMPLE           : 
COMENTARIO           : 
COMMA                : 134 154 156
CORCHETEL            : 16 148 149
CORCHETER            : 16 148 149
COUT                 : 24 25
DOBLEPUNTO           : 
ELSE                 : 96 97 99 100
ENTERO               : 16 54 55 56 57 63 81
EXCLAMACION          : 108 109 110 119
FALSE                : 86 112
FLOAT                : 18 61
FLOTANTE             : 64 82
FOR                  : 130
IDENTIFICADOR        : 15 16 75 77 79 87 90 90 110 120 121 124 125 126 127 128 129 136 140 142 143 144 146 147 148 149 151 158 158 159 159 160 160
IF                   : 91 92 96 97
IGUAL                : 65 67 69 70 71 72 73 74 114 114 117 118 119 120 132 133 147 149 159
INT                  : 17 60
INTERROGACION        : 
LLAVEL               : 88 90 103 130 132 133 136 142 143
LLAVER               : 88 90 103 130 132 133 136 142 143
LONG                 : 19 62
LPAR                 : 23 75 88 91 92 96 97 109 130 142 143 144 160
MAS                  : 50 52 54 56 78 79 124 128 128
MAYOR                : 116 118
MENOR                : 24 24 25 25 115 117
MENOS                : 51 53 55 57 125 129 129
NEW                  : 
NULLPOINTER          : 
NUMERAL              : 
PIPE                 : 
PORCENTAJE           : 
PRINT                : 23
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTERO              : 
PUNTO                : 75 159 160
PUNTOCOMA            : 65 66 67 68 69 70 71 72 73 74 90 130 130 131 132 133 140 142 144 158 159 160
RETURN               : 45 142
RPAR                 : 23 75 88 91 92 96 97 109 130 142 143 144 160
SLASH                : 127
STATIC               : 
STRING               : 21 70 71 72 73
STRUCT               : 90
THEN                 : 
TRUE                 : 85 111
VIRGUILA             : 
VOID                 : 143
WHILE                : 88
error                : 

Nonterminals, with rules where they appear

arraydata            : 132 134
arraydeclaration     : 7 32
asign                : 122
asignarvalorobjeto   : 9 34
bloqueclase          : 136 137 138
body                 : 0
bodyblock            : 1 2 3 4 5 6 7 8 9 10 11 12 13 26 27 28 29 30 31 32 33 34 35 36 37 38 40 41 42 43 44 88 103 130 142 143
boolean              : 47 47 50 51 52 53 54 55 56 57 108
booleanint           : 49
booleanstring        : 48 73
claseimplementacion  : 4 29
comparador           : 47 89 121
concat               : 72 78 79
condfor              : 130
condicionif          : 91 92 96 97
conllaves            : 91 96 99
creacionobjeto       : 8 33
definicion           : 137
else                 : 93 96 97
elseif               : 94
expresion            : 89 89 107 109
expresionif          : 3 28 42
expresionpos         : 91 92
for                  : 5 30 43
funcionblock         : 
funcionclaseimpl     : 6 31 138
id                   : 65 66 67 68 69 70 71 72 73 74 131 132 133
imprimir             : 12 37 44
initcondicion        : 104
initfor              : 130
loopfor              : 130
masparametrosfuncion : 151 152
masparametrosimplementacion : 146 147 148 149
numero               : 65
numerotipo           : 
operacionbool        : 74
operacionbooleanfuera : 
parametrosfuncion    : 156 160
parametrosimplementacion : 142 143 144 154
sinllaves            : 92 97 100
statement            : 45 88 105 106
stringappend         : 13 38 71
stringdata           : 75
struct               : 11 36
tipo                 : 65 66 120 131 132 133 140 142 144 146 147 148 149
unaryexp             : 123
usarfuncionobjeto    : 10 35
valor                : 23 24 67 113 120 121 124 125 126 127 134 135 142 147 152 159
varblock             : 58 90 106
variable             : 1 25 26 40 58 102
while                : 2 27 41 101

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . bodyblock variable
    (2) body -> . bodyblock while
    (3) body -> . bodyblock expresionif
    (4) body -> . bodyblock claseimplementacion
    (5) body -> . bodyblock for
    (6) body -> . bodyblock funcionclaseimpl
    (7) body -> . bodyblock arraydeclaration
    (8) body -> . bodyblock creacionobjeto
    (9) body -> . bodyblock asignarvalorobjeto
    (10) body -> . bodyblock usarfuncionobjeto
    (11) body -> . bodyblock struct
    (12) body -> . bodyblock imprimir
    (13) body -> . bodyblock stringappend
    (14) body -> .
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock claseimplementacion
    (30) bodyblock -> . bodyblock for
    (31) bodyblock -> . bodyblock funcionclaseimpl
    (32) bodyblock -> . bodyblock arraydeclaration
    (33) bodyblock -> . bodyblock creacionobjeto
    (34) bodyblock -> . bodyblock asignarvalorobjeto
    (35) bodyblock -> . bodyblock usarfuncionobjeto
    (36) bodyblock -> . bodyblock struct
    (37) bodyblock -> . bodyblock imprimir
    (38) bodyblock -> . bodyblock stringappend
    (39) bodyblock -> .

  ! reduce/reduce conflict for $end resolved using rule 14 (body -> .)
    $end            reduce using rule 14 (body -> .)
    AUTO            reduce using rule 39 (bodyblock -> .)
    CHAR            reduce using rule 39 (bodyblock -> .)
    STRING          reduce using rule 39 (bodyblock -> .)
    BOOL            reduce using rule 39 (bodyblock -> .)
    WHILE           reduce using rule 39 (bodyblock -> .)
    IF              reduce using rule 39 (bodyblock -> .)
    CLASS           reduce using rule 39 (bodyblock -> .)
    FOR             reduce using rule 39 (bodyblock -> .)
    VOID            reduce using rule 39 (bodyblock -> .)
    IDENTIFICADOR   reduce using rule 39 (bodyblock -> .)
    STRUCT          reduce using rule 39 (bodyblock -> .)
    PRINT           reduce using rule 39 (bodyblock -> .)
    COUT            reduce using rule 39 (bodyblock -> .)
    INT             reduce using rule 39 (bodyblock -> .)
    FLOAT           reduce using rule 39 (bodyblock -> .)
    LONG            reduce using rule 39 (bodyblock -> .)

  ! $end            [ reduce using rule 39 (bodyblock -> .) ]

    body                           shift and go to state 1
    bodyblock                      shift and go to state 2

state 1

    (0) S' -> body .



state 2

    (1) body -> bodyblock . variable
    (2) body -> bodyblock . while
    (3) body -> bodyblock . expresionif
    (4) body -> bodyblock . claseimplementacion
    (5) body -> bodyblock . for
    (6) body -> bodyblock . funcionclaseimpl
    (7) body -> bodyblock . arraydeclaration
    (8) body -> bodyblock . creacionobjeto
    (9) body -> bodyblock . asignarvalorobjeto
    (10) body -> bodyblock . usarfuncionobjeto
    (11) body -> bodyblock . struct
    (12) body -> bodyblock . imprimir
    (13) body -> bodyblock . stringappend
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . claseimplementacion
    (30) bodyblock -> bodyblock . for
    (31) bodyblock -> bodyblock . funcionclaseimpl
    (32) bodyblock -> bodyblock . arraydeclaration
    (33) bodyblock -> bodyblock . creacionobjeto
    (34) bodyblock -> bodyblock . asignarvalorobjeto
    (35) bodyblock -> bodyblock . usarfuncionobjeto
    (36) bodyblock -> bodyblock . struct
    (37) bodyblock -> bodyblock . imprimir
    (38) bodyblock -> bodyblock . stringappend
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (91) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (92) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (136) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (130) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (142) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (143) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (144) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (145) funcionclaseimpl -> .
    (131) arraydeclaration -> . tipo id PUNTOCOMA
    (132) arraydeclaration -> . tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> . tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
    (158) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (159) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (90) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (75) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    CLASS           shift and go to state 23
    FOR             shift and go to state 25
    VOID            shift and go to state 26
    $end            reduce using rule 145 (funcionclaseimpl -> .)
    IDENTIFICADOR   shift and go to state 24
    STRUCT          shift and go to state 27
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

  ! AUTO            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! BOOL            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! WHILE           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IF              [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CLASS           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FOR             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRUCT          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! PRINT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! COUT            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 145 (funcionclaseimpl -> .) ]

    variable                       shift and go to state 3
    while                          shift and go to state 4
    expresionif                    shift and go to state 5
    claseimplementacion            shift and go to state 6
    for                            shift and go to state 7
    funcionclaseimpl               shift and go to state 8
    arraydeclaration               shift and go to state 9
    creacionobjeto                 shift and go to state 10
    asignarvalorobjeto             shift and go to state 11
    usarfuncionobjeto              shift and go to state 12
    struct                         shift and go to state 13
    imprimir                       shift and go to state 14
    stringappend                   shift and go to state 15
    tipo                           shift and go to state 16

state 3

    (1) body -> bodyblock variable .
    (26) bodyblock -> bodyblock variable .

  ! reduce/reduce conflict for $end resolved using rule 1 (body -> bodyblock variable .)
    $end            reduce using rule 1 (body -> bodyblock variable .)
    AUTO            reduce using rule 26 (bodyblock -> bodyblock variable .)
    CHAR            reduce using rule 26 (bodyblock -> bodyblock variable .)
    STRING          reduce using rule 26 (bodyblock -> bodyblock variable .)
    BOOL            reduce using rule 26 (bodyblock -> bodyblock variable .)
    WHILE           reduce using rule 26 (bodyblock -> bodyblock variable .)
    IF              reduce using rule 26 (bodyblock -> bodyblock variable .)
    CLASS           reduce using rule 26 (bodyblock -> bodyblock variable .)
    FOR             reduce using rule 26 (bodyblock -> bodyblock variable .)
    VOID            reduce using rule 26 (bodyblock -> bodyblock variable .)
    IDENTIFICADOR   reduce using rule 26 (bodyblock -> bodyblock variable .)
    STRUCT          reduce using rule 26 (bodyblock -> bodyblock variable .)
    PRINT           reduce using rule 26 (bodyblock -> bodyblock variable .)
    COUT            reduce using rule 26 (bodyblock -> bodyblock variable .)
    INT             reduce using rule 26 (bodyblock -> bodyblock variable .)
    FLOAT           reduce using rule 26 (bodyblock -> bodyblock variable .)
    LONG            reduce using rule 26 (bodyblock -> bodyblock variable .)

  ! $end            [ reduce using rule 26 (bodyblock -> bodyblock variable .) ]


state 4

    (2) body -> bodyblock while .
    (27) bodyblock -> bodyblock while .

  ! reduce/reduce conflict for $end resolved using rule 2 (body -> bodyblock while .)
    $end            reduce using rule 2 (body -> bodyblock while .)
    AUTO            reduce using rule 27 (bodyblock -> bodyblock while .)
    CHAR            reduce using rule 27 (bodyblock -> bodyblock while .)
    STRING          reduce using rule 27 (bodyblock -> bodyblock while .)
    BOOL            reduce using rule 27 (bodyblock -> bodyblock while .)
    WHILE           reduce using rule 27 (bodyblock -> bodyblock while .)
    IF              reduce using rule 27 (bodyblock -> bodyblock while .)
    CLASS           reduce using rule 27 (bodyblock -> bodyblock while .)
    FOR             reduce using rule 27 (bodyblock -> bodyblock while .)
    VOID            reduce using rule 27 (bodyblock -> bodyblock while .)
    IDENTIFICADOR   reduce using rule 27 (bodyblock -> bodyblock while .)
    STRUCT          reduce using rule 27 (bodyblock -> bodyblock while .)
    PRINT           reduce using rule 27 (bodyblock -> bodyblock while .)
    COUT            reduce using rule 27 (bodyblock -> bodyblock while .)
    INT             reduce using rule 27 (bodyblock -> bodyblock while .)
    FLOAT           reduce using rule 27 (bodyblock -> bodyblock while .)
    LONG            reduce using rule 27 (bodyblock -> bodyblock while .)

  ! $end            [ reduce using rule 27 (bodyblock -> bodyblock while .) ]


state 5

    (3) body -> bodyblock expresionif .
    (28) bodyblock -> bodyblock expresionif .

  ! reduce/reduce conflict for $end resolved using rule 3 (body -> bodyblock expresionif .)
    $end            reduce using rule 3 (body -> bodyblock expresionif .)
    AUTO            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    CHAR            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    STRING          reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    BOOL            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    WHILE           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    IF              reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    CLASS           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    FOR             reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    VOID            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    IDENTIFICADOR   reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    STRUCT          reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    PRINT           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    COUT            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    INT             reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    FLOAT           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    LONG            reduce using rule 28 (bodyblock -> bodyblock expresionif .)

  ! $end            [ reduce using rule 28 (bodyblock -> bodyblock expresionif .) ]


state 6

    (4) body -> bodyblock claseimplementacion .
    (29) bodyblock -> bodyblock claseimplementacion .

  ! reduce/reduce conflict for $end resolved using rule 4 (body -> bodyblock claseimplementacion .)
    $end            reduce using rule 4 (body -> bodyblock claseimplementacion .)
    AUTO            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    CHAR            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    STRING          reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    BOOL            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    WHILE           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    IF              reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    CLASS           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    FOR             reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    VOID            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    IDENTIFICADOR   reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    STRUCT          reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    PRINT           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    COUT            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    INT             reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    FLOAT           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    LONG            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)

  ! $end            [ reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .) ]


state 7

    (5) body -> bodyblock for .
    (30) bodyblock -> bodyblock for .

  ! reduce/reduce conflict for $end resolved using rule 5 (body -> bodyblock for .)
    $end            reduce using rule 5 (body -> bodyblock for .)
    AUTO            reduce using rule 30 (bodyblock -> bodyblock for .)
    CHAR            reduce using rule 30 (bodyblock -> bodyblock for .)
    STRING          reduce using rule 30 (bodyblock -> bodyblock for .)
    BOOL            reduce using rule 30 (bodyblock -> bodyblock for .)
    WHILE           reduce using rule 30 (bodyblock -> bodyblock for .)
    IF              reduce using rule 30 (bodyblock -> bodyblock for .)
    CLASS           reduce using rule 30 (bodyblock -> bodyblock for .)
    FOR             reduce using rule 30 (bodyblock -> bodyblock for .)
    VOID            reduce using rule 30 (bodyblock -> bodyblock for .)
    IDENTIFICADOR   reduce using rule 30 (bodyblock -> bodyblock for .)
    STRUCT          reduce using rule 30 (bodyblock -> bodyblock for .)
    PRINT           reduce using rule 30 (bodyblock -> bodyblock for .)
    COUT            reduce using rule 30 (bodyblock -> bodyblock for .)
    INT             reduce using rule 30 (bodyblock -> bodyblock for .)
    FLOAT           reduce using rule 30 (bodyblock -> bodyblock for .)
    LONG            reduce using rule 30 (bodyblock -> bodyblock for .)

  ! $end            [ reduce using rule 30 (bodyblock -> bodyblock for .) ]


state 8

    (6) body -> bodyblock funcionclaseimpl .
    (31) bodyblock -> bodyblock funcionclaseimpl .

  ! reduce/reduce conflict for $end resolved using rule 6 (body -> bodyblock funcionclaseimpl .)
    $end            reduce using rule 6 (body -> bodyblock funcionclaseimpl .)
    AUTO            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    CHAR            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    STRING          reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    BOOL            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    WHILE           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    IF              reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    CLASS           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    FOR             reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    VOID            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    IDENTIFICADOR   reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    STRUCT          reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    PRINT           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    COUT            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    INT             reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    FLOAT           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    LONG            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)

  ! $end            [ reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .) ]


state 9

    (7) body -> bodyblock arraydeclaration .
    (32) bodyblock -> bodyblock arraydeclaration .

  ! reduce/reduce conflict for $end resolved using rule 7 (body -> bodyblock arraydeclaration .)
    $end            reduce using rule 7 (body -> bodyblock arraydeclaration .)
    AUTO            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    CHAR            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    STRING          reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    BOOL            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    WHILE           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    IF              reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    CLASS           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    FOR             reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    VOID            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    IDENTIFICADOR   reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    STRUCT          reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    PRINT           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    COUT            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    INT             reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    FLOAT           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    LONG            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)

  ! $end            [ reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .) ]


state 10

    (8) body -> bodyblock creacionobjeto .
    (33) bodyblock -> bodyblock creacionobjeto .

  ! reduce/reduce conflict for $end resolved using rule 8 (body -> bodyblock creacionobjeto .)
    $end            reduce using rule 8 (body -> bodyblock creacionobjeto .)
    AUTO            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    CHAR            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    STRING          reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    BOOL            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    WHILE           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    IF              reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    CLASS           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    FOR             reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    VOID            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    IDENTIFICADOR   reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    STRUCT          reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    PRINT           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    COUT            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    INT             reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    FLOAT           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    LONG            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)

  ! $end            [ reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .) ]


state 11

    (9) body -> bodyblock asignarvalorobjeto .
    (34) bodyblock -> bodyblock asignarvalorobjeto .

  ! reduce/reduce conflict for $end resolved using rule 9 (body -> bodyblock asignarvalorobjeto .)
    $end            reduce using rule 9 (body -> bodyblock asignarvalorobjeto .)
    AUTO            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    CHAR            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    STRING          reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    BOOL            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    WHILE           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    IF              reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    CLASS           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    FOR             reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    VOID            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    IDENTIFICADOR   reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    STRUCT          reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    PRINT           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    COUT            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    INT             reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    FLOAT           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    LONG            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)

  ! $end            [ reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .) ]


state 12

    (10) body -> bodyblock usarfuncionobjeto .
    (35) bodyblock -> bodyblock usarfuncionobjeto .

  ! reduce/reduce conflict for $end resolved using rule 10 (body -> bodyblock usarfuncionobjeto .)
    $end            reduce using rule 10 (body -> bodyblock usarfuncionobjeto .)
    AUTO            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    CHAR            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    STRING          reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    BOOL            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    WHILE           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    IF              reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    CLASS           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    FOR             reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    VOID            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    IDENTIFICADOR   reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    STRUCT          reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    PRINT           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    COUT            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    INT             reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    FLOAT           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    LONG            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)

  ! $end            [ reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .) ]


state 13

    (11) body -> bodyblock struct .
    (36) bodyblock -> bodyblock struct .

  ! reduce/reduce conflict for $end resolved using rule 11 (body -> bodyblock struct .)
    $end            reduce using rule 11 (body -> bodyblock struct .)
    AUTO            reduce using rule 36 (bodyblock -> bodyblock struct .)
    CHAR            reduce using rule 36 (bodyblock -> bodyblock struct .)
    STRING          reduce using rule 36 (bodyblock -> bodyblock struct .)
    BOOL            reduce using rule 36 (bodyblock -> bodyblock struct .)
    WHILE           reduce using rule 36 (bodyblock -> bodyblock struct .)
    IF              reduce using rule 36 (bodyblock -> bodyblock struct .)
    CLASS           reduce using rule 36 (bodyblock -> bodyblock struct .)
    FOR             reduce using rule 36 (bodyblock -> bodyblock struct .)
    VOID            reduce using rule 36 (bodyblock -> bodyblock struct .)
    IDENTIFICADOR   reduce using rule 36 (bodyblock -> bodyblock struct .)
    STRUCT          reduce using rule 36 (bodyblock -> bodyblock struct .)
    PRINT           reduce using rule 36 (bodyblock -> bodyblock struct .)
    COUT            reduce using rule 36 (bodyblock -> bodyblock struct .)
    INT             reduce using rule 36 (bodyblock -> bodyblock struct .)
    FLOAT           reduce using rule 36 (bodyblock -> bodyblock struct .)
    LONG            reduce using rule 36 (bodyblock -> bodyblock struct .)

  ! $end            [ reduce using rule 36 (bodyblock -> bodyblock struct .) ]


state 14

    (12) body -> bodyblock imprimir .
    (37) bodyblock -> bodyblock imprimir .

  ! reduce/reduce conflict for $end resolved using rule 12 (body -> bodyblock imprimir .)
    $end            reduce using rule 12 (body -> bodyblock imprimir .)
    AUTO            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    CHAR            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    STRING          reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    BOOL            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    WHILE           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    IF              reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    CLASS           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    FOR             reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    VOID            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    IDENTIFICADOR   reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    STRUCT          reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    PRINT           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    COUT            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    INT             reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    FLOAT           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    LONG            reduce using rule 37 (bodyblock -> bodyblock imprimir .)

  ! $end            [ reduce using rule 37 (bodyblock -> bodyblock imprimir .) ]


state 15

    (13) body -> bodyblock stringappend .
    (38) bodyblock -> bodyblock stringappend .

  ! reduce/reduce conflict for $end resolved using rule 13 (body -> bodyblock stringappend .)
    $end            reduce using rule 13 (body -> bodyblock stringappend .)
    AUTO            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    CHAR            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    STRING          reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    BOOL            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    WHILE           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    IF              reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    CLASS           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    FOR             reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    VOID            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    IDENTIFICADOR   reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    STRUCT          reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    PRINT           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    COUT            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    INT             reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    FLOAT           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    LONG            reduce using rule 38 (bodyblock -> bodyblock stringappend .)

  ! $end            [ reduce using rule 38 (bodyblock -> bodyblock stringappend .) ]


state 16

    (65) variable -> tipo . id IGUAL numero PUNTOCOMA
    (66) variable -> tipo . id PUNTOCOMA
    (142) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (144) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (131) arraydeclaration -> tipo . id PUNTOCOMA
    (132) arraydeclaration -> tipo . id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> tipo . id IGUAL LLAVEL LLAVER PUNTOCOMA
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 34

    id                             shift and go to state 33

state 17

    (67) variable -> AUTO . id IGUAL valor PUNTOCOMA
    (68) variable -> AUTO . id PUNTOCOMA
    (20) tipo -> AUTO .
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 36

  ! IDENTIFICADOR   [ reduce using rule 20 (tipo -> AUTO .) ]

    id                             shift and go to state 35

state 18

    (69) variable -> CHAR . id IGUAL CHARACTER PUNTOCOMA
    (22) tipo -> CHAR .
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 36

  ! IDENTIFICADOR   [ reduce using rule 22 (tipo -> CHAR .) ]

    id                             shift and go to state 37

state 19

    (70) variable -> STRING . id IGUAL CADENA PUNTOCOMA
    (71) variable -> STRING . id IGUAL stringappend PUNTOCOMA
    (72) variable -> STRING . id IGUAL concat PUNTOCOMA
    (73) variable -> STRING . id IGUAL booleanstring PUNTOCOMA
    (21) tipo -> STRING .
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    IDENTIFICADOR   shift and go to state 36

  ! IDENTIFICADOR   [ reduce using rule 21 (tipo -> STRING .) ]

    id                             shift and go to state 38

state 20

    (74) variable -> BOOL . id IGUAL operacionbool PUNTOCOMA
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 36

    id                             shift and go to state 39

state 21

    (88) while -> WHILE . LPAR statement RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 40


state 22

    (91) expresionif -> IF . LPAR condicionif RPAR conllaves expresionpos
    (92) expresionif -> IF . LPAR condicionif RPAR sinllaves expresionpos

    LPAR            shift and go to state 41


state 23

    (136) claseimplementacion -> CLASS . IDENTIFICADOR LLAVEL bloqueclase LLAVER

    IDENTIFICADOR   shift and go to state 42


state 24

    (158) creacionobjeto -> IDENTIFICADOR . IDENTIFICADOR PUNTOCOMA
    (159) asignarvalorobjeto -> IDENTIFICADOR . PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> IDENTIFICADOR . PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (75) stringappend -> IDENTIFICADOR . PUNTO APPEND LPAR stringdata RPAR

    IDENTIFICADOR   shift and go to state 43
    PUNTO           shift and go to state 44


state 25

    (130) for -> FOR . LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 45


state 26

    (143) funcionclaseimpl -> VOID . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER

    IDENTIFICADOR   shift and go to state 46


state 27

    (90) struct -> STRUCT . IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 47


state 28

    (23) imprimir -> PRINT . LPAR valor RPAR

    LPAR            shift and go to state 48


state 29

    (24) imprimir -> COUT . MENOR MENOR valor
    (25) imprimir -> COUT . MENOR MENOR variable

    MENOR           shift and go to state 49


state 30

    (17) tipo -> INT .

    IDENTIFICADOR   reduce using rule 17 (tipo -> INT .)


state 31

    (18) tipo -> FLOAT .

    IDENTIFICADOR   reduce using rule 18 (tipo -> FLOAT .)


state 32

    (19) tipo -> LONG .

    IDENTIFICADOR   reduce using rule 19 (tipo -> LONG .)


state 33

    (65) variable -> tipo id . IGUAL numero PUNTOCOMA
    (66) variable -> tipo id . PUNTOCOMA
    (131) arraydeclaration -> tipo id . PUNTOCOMA
    (132) arraydeclaration -> tipo id . IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> tipo id . IGUAL LLAVEL LLAVER PUNTOCOMA

    IGUAL           shift and go to state 50
    PUNTOCOMA       shift and go to state 51


state 34

    (142) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (144) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR PUNTOCOMA
    (15) id -> IDENTIFICADOR .
    (16) id -> IDENTIFICADOR . CORCHETEL ENTERO CORCHETER

    LPAR            shift and go to state 52
    IGUAL           reduce using rule 15 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 15 (id -> IDENTIFICADOR .)
    CORCHETEL       shift and go to state 53


state 35

    (67) variable -> AUTO id . IGUAL valor PUNTOCOMA
    (68) variable -> AUTO id . PUNTOCOMA

    IGUAL           shift and go to state 54
    PUNTOCOMA       shift and go to state 55


state 36

    (15) id -> IDENTIFICADOR .
    (16) id -> IDENTIFICADOR . CORCHETEL ENTERO CORCHETER

    IGUAL           reduce using rule 15 (id -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 15 (id -> IDENTIFICADOR .)
    CORCHETEL       shift and go to state 53


state 37

    (69) variable -> CHAR id . IGUAL CHARACTER PUNTOCOMA

    IGUAL           shift and go to state 56


state 38

    (70) variable -> STRING id . IGUAL CADENA PUNTOCOMA
    (71) variable -> STRING id . IGUAL stringappend PUNTOCOMA
    (72) variable -> STRING id . IGUAL concat PUNTOCOMA
    (73) variable -> STRING id . IGUAL booleanstring PUNTOCOMA

    IGUAL           shift and go to state 57


state 39

    (74) variable -> BOOL id . IGUAL operacionbool PUNTOCOMA

    IGUAL           shift and go to state 58


state 40

    (88) while -> WHILE LPAR . statement RPAR LLAVEL bodyblock LLAVER
    (107) statement -> . expresion
    (108) statement -> . EXCLAMACION boolean
    (109) statement -> . EXCLAMACION LPAR expresion RPAR
    (110) statement -> . EXCLAMACION IDENTIFICADOR
    (89) expresion -> . expresion comparador expresion
    (113) expresion -> . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 61
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    statement                      shift and go to state 59
    expresion                      shift and go to state 60
    valor                          shift and go to state 63

state 41

    (91) expresionif -> IF LPAR . condicionif RPAR conllaves expresionpos
    (92) expresionif -> IF LPAR . condicionif RPAR sinllaves expresionpos
    (104) condicionif -> . initcondicion
    (105) condicionif -> . statement
    (106) initcondicion -> . varblock statement
    (107) statement -> . expresion
    (108) statement -> . EXCLAMACION boolean
    (109) statement -> . EXCLAMACION LPAR expresion RPAR
    (110) statement -> . EXCLAMACION IDENTIFICADOR
    (58) varblock -> . varblock variable
    (59) varblock -> .
    (89) expresion -> . expresion comparador expresion
    (113) expresion -> . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 61
    AUTO            reduce using rule 59 (varblock -> .)
    CHAR            reduce using rule 59 (varblock -> .)
    STRING          reduce using rule 59 (varblock -> .)
    BOOL            reduce using rule 59 (varblock -> .)
    INT             reduce using rule 59 (varblock -> .)
    FLOAT           reduce using rule 59 (varblock -> .)
    LONG            reduce using rule 59 (varblock -> .)
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

  ! EXCLAMACION     [ reduce using rule 59 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 59 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 59 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 59 (varblock -> .) ]
  ! CADENA          [ reduce using rule 59 (varblock -> .) ]
  ! TRUE            [ reduce using rule 59 (varblock -> .) ]
  ! FALSE           [ reduce using rule 59 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 59 (varblock -> .) ]

    condicionif                    shift and go to state 70
    initcondicion                  shift and go to state 71
    statement                      shift and go to state 72
    varblock                       shift and go to state 73
    expresion                      shift and go to state 60
    valor                          shift and go to state 63

state 42

    (136) claseimplementacion -> CLASS IDENTIFICADOR . LLAVEL bloqueclase LLAVER

    LLAVEL          shift and go to state 74


state 43

    (158) creacionobjeto -> IDENTIFICADOR IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 75


state 44

    (159) asignarvalorobjeto -> IDENTIFICADOR PUNTO . IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> IDENTIFICADOR PUNTO . IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (75) stringappend -> IDENTIFICADOR PUNTO . APPEND LPAR stringdata RPAR

    IDENTIFICADOR   shift and go to state 76
    APPEND          shift and go to state 77


state 45

    (130) for -> FOR LPAR . initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (120) initfor -> . tipo IDENTIFICADOR IGUAL valor
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 80
    STRING          shift and go to state 81
    CHAR            shift and go to state 82

    initfor                        shift and go to state 78
    tipo                           shift and go to state 79

state 46

    (143) funcionclaseimpl -> VOID IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 83


state 47

    (90) struct -> STRUCT IDENTIFICADOR . LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA

    LLAVEL          shift and go to state 84


state 48

    (23) imprimir -> PRINT LPAR . valor RPAR
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 85

state 49

    (24) imprimir -> COUT MENOR . MENOR valor
    (25) imprimir -> COUT MENOR . MENOR variable

    MENOR           shift and go to state 86


state 50

    (65) variable -> tipo id IGUAL . numero PUNTOCOMA
    (132) arraydeclaration -> tipo id IGUAL . LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> tipo id IGUAL . LLAVEL LLAVER PUNTOCOMA
    (63) numero -> . ENTERO
    (64) numero -> . FLOTANTE

    LLAVEL          shift and go to state 88
    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90

    numero                         shift and go to state 87

state 51

    (66) variable -> tipo id PUNTOCOMA .
    (131) arraydeclaration -> tipo id PUNTOCOMA .

  ! reduce/reduce conflict for $end resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for AUTO resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for CHAR resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for STRING resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for BOOL resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for WHILE resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for IF resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for CLASS resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for FOR resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for VOID resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for STRUCT resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for PRINT resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for COUT resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for INT resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for FLOAT resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for LONG resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for LLAVER resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
  ! reduce/reduce conflict for RETURN resolved using rule 66 (variable -> tipo id PUNTOCOMA .)
    $end            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    AUTO            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    CHAR            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    STRING          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    BOOL            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    WHILE           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    IF              reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    CLASS           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    FOR             reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    VOID            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    STRUCT          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    PRINT           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    COUT            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    INT             reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    FLOAT           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    LONG            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    LLAVER          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    RETURN          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)

  ! $end            [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! AUTO            [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! CHAR            [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! STRING          [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! BOOL            [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! WHILE           [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! IF              [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! CLASS           [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! FOR             [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! VOID            [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! IDENTIFICADOR   [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! STRUCT          [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! PRINT           [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! COUT            [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! INT             [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! FLOAT           [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! LONG            [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! LLAVER          [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]
  ! RETURN          [ reduce using rule 131 (arraydeclaration -> tipo id PUNTOCOMA .) ]


state 52

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR . parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (144) funcionclaseimpl -> tipo IDENTIFICADOR LPAR . parametrosimplementacion RPAR PUNTOCOMA
    (146) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (147) parametrosimplementacion -> . tipo IDENTIFICADOR IGUAL valor masparametrosimplementacion
    (148) parametrosimplementacion -> . tipo IDENTIFICADOR CORCHETEL CORCHETER masparametrosimplementacion
    (149) parametrosimplementacion -> . tipo IDENTIFICADOR CORCHETEL CORCHETER IGUAL masparametrosimplementacion
    (150) parametrosimplementacion -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    RPAR            reduce using rule 150 (parametrosimplementacion -> .)
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 80
    STRING          shift and go to state 81
    CHAR            shift and go to state 82

    tipo                           shift and go to state 91
    parametrosimplementacion       shift and go to state 92

state 53

    (16) id -> IDENTIFICADOR CORCHETEL . ENTERO CORCHETER

    ENTERO          shift and go to state 93


state 54

    (67) variable -> AUTO id IGUAL . valor PUNTOCOMA
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 94

state 55

    (68) variable -> AUTO id PUNTOCOMA .

    $end            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    AUTO            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    CHAR            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    STRING          reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    BOOL            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    WHILE           reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    IF              reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    CLASS           reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    FOR             reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    VOID            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    STRUCT          reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    PRINT           reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    COUT            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    INT             reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    FLOAT           reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    LONG            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    EXCLAMACION     reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    ENTERO          reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    FLOTANTE        reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    CHARACTER       reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    CADENA          reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    TRUE            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    FALSE           reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    LLAVER          reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    RETURN          reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)
    ELSE            reduce using rule 68 (variable -> AUTO id PUNTOCOMA .)


state 56

    (69) variable -> CHAR id IGUAL . CHARACTER PUNTOCOMA

    CHARACTER       shift and go to state 95


state 57

    (70) variable -> STRING id IGUAL . CADENA PUNTOCOMA
    (71) variable -> STRING id IGUAL . stringappend PUNTOCOMA
    (72) variable -> STRING id IGUAL . concat PUNTOCOMA
    (73) variable -> STRING id IGUAL . booleanstring PUNTOCOMA
    (75) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (78) concat -> . concat MAS CADENA
    (79) concat -> . concat MAS IDENTIFICADOR
    (80) concat -> . CADENA
    (50) booleanstring -> . boolean MAS CADENA
    (51) booleanstring -> . boolean MENOS CADENA
    (52) booleanstring -> . CADENA MAS boolean
    (53) booleanstring -> . CADENA MENOS boolean
    (111) boolean -> . TRUE
    (112) boolean -> . FALSE

    CADENA          shift and go to state 96
    IDENTIFICADOR   shift and go to state 100
    TRUE            shift and go to state 102
    FALSE           shift and go to state 103

    stringappend                   shift and go to state 97
    concat                         shift and go to state 98
    booleanstring                  shift and go to state 99
    boolean                        shift and go to state 101

state 58

    (74) variable -> BOOL id IGUAL . operacionbool PUNTOCOMA
    (47) operacionbool -> . boolean comparador boolean
    (111) boolean -> . TRUE
    (112) boolean -> . FALSE

    TRUE            shift and go to state 102
    FALSE           shift and go to state 103

    operacionbool                  shift and go to state 104
    boolean                        shift and go to state 105

state 59

    (88) while -> WHILE LPAR statement . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 106


state 60

    (107) statement -> expresion .
    (89) expresion -> expresion . comparador expresion
    (114) comparador -> . IGUAL IGUAL
    (115) comparador -> . MENOR
    (116) comparador -> . MAYOR
    (117) comparador -> . MENOR IGUAL
    (118) comparador -> . MAYOR IGUAL
    (119) comparador -> . EXCLAMACION IGUAL

    RPAR            reduce using rule 107 (statement -> expresion .)
    IGUAL           shift and go to state 108
    MENOR           shift and go to state 109
    MAYOR           shift and go to state 110
    EXCLAMACION     shift and go to state 111

    comparador                     shift and go to state 107

state 61

    (108) statement -> EXCLAMACION . boolean
    (109) statement -> EXCLAMACION . LPAR expresion RPAR
    (110) statement -> EXCLAMACION . IDENTIFICADOR
    (111) boolean -> . TRUE
    (112) boolean -> . FALSE

    LPAR            shift and go to state 113
    IDENTIFICADOR   shift and go to state 114
    TRUE            shift and go to state 102
    FALSE           shift and go to state 103

    boolean                        shift and go to state 112

state 62

    (87) valor -> IDENTIFICADOR .

    IGUAL           reduce using rule 87 (valor -> IDENTIFICADOR .)
    MENOR           reduce using rule 87 (valor -> IDENTIFICADOR .)
    MAYOR           reduce using rule 87 (valor -> IDENTIFICADOR .)
    EXCLAMACION     reduce using rule 87 (valor -> IDENTIFICADOR .)
    RPAR            reduce using rule 87 (valor -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 87 (valor -> IDENTIFICADOR .)
    $end            reduce using rule 87 (valor -> IDENTIFICADOR .)
    AUTO            reduce using rule 87 (valor -> IDENTIFICADOR .)
    CHAR            reduce using rule 87 (valor -> IDENTIFICADOR .)
    STRING          reduce using rule 87 (valor -> IDENTIFICADOR .)
    BOOL            reduce using rule 87 (valor -> IDENTIFICADOR .)
    WHILE           reduce using rule 87 (valor -> IDENTIFICADOR .)
    IF              reduce using rule 87 (valor -> IDENTIFICADOR .)
    CLASS           reduce using rule 87 (valor -> IDENTIFICADOR .)
    FOR             reduce using rule 87 (valor -> IDENTIFICADOR .)
    VOID            reduce using rule 87 (valor -> IDENTIFICADOR .)
    IDENTIFICADOR   reduce using rule 87 (valor -> IDENTIFICADOR .)
    STRUCT          reduce using rule 87 (valor -> IDENTIFICADOR .)
    PRINT           reduce using rule 87 (valor -> IDENTIFICADOR .)
    COUT            reduce using rule 87 (valor -> IDENTIFICADOR .)
    INT             reduce using rule 87 (valor -> IDENTIFICADOR .)
    FLOAT           reduce using rule 87 (valor -> IDENTIFICADOR .)
    LONG            reduce using rule 87 (valor -> IDENTIFICADOR .)
    LLAVER          reduce using rule 87 (valor -> IDENTIFICADOR .)
    RETURN          reduce using rule 87 (valor -> IDENTIFICADOR .)
    COMMA           reduce using rule 87 (valor -> IDENTIFICADOR .)


state 63

    (113) expresion -> valor .

    IGUAL           reduce using rule 113 (expresion -> valor .)
    MENOR           reduce using rule 113 (expresion -> valor .)
    MAYOR           reduce using rule 113 (expresion -> valor .)
    EXCLAMACION     reduce using rule 113 (expresion -> valor .)
    RPAR            reduce using rule 113 (expresion -> valor .)


state 64

    (81) valor -> ENTERO .

    IGUAL           reduce using rule 81 (valor -> ENTERO .)
    MENOR           reduce using rule 81 (valor -> ENTERO .)
    MAYOR           reduce using rule 81 (valor -> ENTERO .)
    EXCLAMACION     reduce using rule 81 (valor -> ENTERO .)
    RPAR            reduce using rule 81 (valor -> ENTERO .)
    PUNTOCOMA       reduce using rule 81 (valor -> ENTERO .)
    $end            reduce using rule 81 (valor -> ENTERO .)
    AUTO            reduce using rule 81 (valor -> ENTERO .)
    CHAR            reduce using rule 81 (valor -> ENTERO .)
    STRING          reduce using rule 81 (valor -> ENTERO .)
    BOOL            reduce using rule 81 (valor -> ENTERO .)
    WHILE           reduce using rule 81 (valor -> ENTERO .)
    IF              reduce using rule 81 (valor -> ENTERO .)
    CLASS           reduce using rule 81 (valor -> ENTERO .)
    FOR             reduce using rule 81 (valor -> ENTERO .)
    VOID            reduce using rule 81 (valor -> ENTERO .)
    IDENTIFICADOR   reduce using rule 81 (valor -> ENTERO .)
    STRUCT          reduce using rule 81 (valor -> ENTERO .)
    PRINT           reduce using rule 81 (valor -> ENTERO .)
    COUT            reduce using rule 81 (valor -> ENTERO .)
    INT             reduce using rule 81 (valor -> ENTERO .)
    FLOAT           reduce using rule 81 (valor -> ENTERO .)
    LONG            reduce using rule 81 (valor -> ENTERO .)
    LLAVER          reduce using rule 81 (valor -> ENTERO .)
    RETURN          reduce using rule 81 (valor -> ENTERO .)
    COMMA           reduce using rule 81 (valor -> ENTERO .)


state 65

    (82) valor -> FLOTANTE .

    IGUAL           reduce using rule 82 (valor -> FLOTANTE .)
    MENOR           reduce using rule 82 (valor -> FLOTANTE .)
    MAYOR           reduce using rule 82 (valor -> FLOTANTE .)
    EXCLAMACION     reduce using rule 82 (valor -> FLOTANTE .)
    RPAR            reduce using rule 82 (valor -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 82 (valor -> FLOTANTE .)
    $end            reduce using rule 82 (valor -> FLOTANTE .)
    AUTO            reduce using rule 82 (valor -> FLOTANTE .)
    CHAR            reduce using rule 82 (valor -> FLOTANTE .)
    STRING          reduce using rule 82 (valor -> FLOTANTE .)
    BOOL            reduce using rule 82 (valor -> FLOTANTE .)
    WHILE           reduce using rule 82 (valor -> FLOTANTE .)
    IF              reduce using rule 82 (valor -> FLOTANTE .)
    CLASS           reduce using rule 82 (valor -> FLOTANTE .)
    FOR             reduce using rule 82 (valor -> FLOTANTE .)
    VOID            reduce using rule 82 (valor -> FLOTANTE .)
    IDENTIFICADOR   reduce using rule 82 (valor -> FLOTANTE .)
    STRUCT          reduce using rule 82 (valor -> FLOTANTE .)
    PRINT           reduce using rule 82 (valor -> FLOTANTE .)
    COUT            reduce using rule 82 (valor -> FLOTANTE .)
    INT             reduce using rule 82 (valor -> FLOTANTE .)
    FLOAT           reduce using rule 82 (valor -> FLOTANTE .)
    LONG            reduce using rule 82 (valor -> FLOTANTE .)
    LLAVER          reduce using rule 82 (valor -> FLOTANTE .)
    RETURN          reduce using rule 82 (valor -> FLOTANTE .)
    COMMA           reduce using rule 82 (valor -> FLOTANTE .)


state 66

    (83) valor -> CHARACTER .

    IGUAL           reduce using rule 83 (valor -> CHARACTER .)
    MENOR           reduce using rule 83 (valor -> CHARACTER .)
    MAYOR           reduce using rule 83 (valor -> CHARACTER .)
    EXCLAMACION     reduce using rule 83 (valor -> CHARACTER .)
    RPAR            reduce using rule 83 (valor -> CHARACTER .)
    PUNTOCOMA       reduce using rule 83 (valor -> CHARACTER .)
    $end            reduce using rule 83 (valor -> CHARACTER .)
    AUTO            reduce using rule 83 (valor -> CHARACTER .)
    CHAR            reduce using rule 83 (valor -> CHARACTER .)
    STRING          reduce using rule 83 (valor -> CHARACTER .)
    BOOL            reduce using rule 83 (valor -> CHARACTER .)
    WHILE           reduce using rule 83 (valor -> CHARACTER .)
    IF              reduce using rule 83 (valor -> CHARACTER .)
    CLASS           reduce using rule 83 (valor -> CHARACTER .)
    FOR             reduce using rule 83 (valor -> CHARACTER .)
    VOID            reduce using rule 83 (valor -> CHARACTER .)
    IDENTIFICADOR   reduce using rule 83 (valor -> CHARACTER .)
    STRUCT          reduce using rule 83 (valor -> CHARACTER .)
    PRINT           reduce using rule 83 (valor -> CHARACTER .)
    COUT            reduce using rule 83 (valor -> CHARACTER .)
    INT             reduce using rule 83 (valor -> CHARACTER .)
    FLOAT           reduce using rule 83 (valor -> CHARACTER .)
    LONG            reduce using rule 83 (valor -> CHARACTER .)
    LLAVER          reduce using rule 83 (valor -> CHARACTER .)
    RETURN          reduce using rule 83 (valor -> CHARACTER .)
    COMMA           reduce using rule 83 (valor -> CHARACTER .)


state 67

    (84) valor -> CADENA .

    IGUAL           reduce using rule 84 (valor -> CADENA .)
    MENOR           reduce using rule 84 (valor -> CADENA .)
    MAYOR           reduce using rule 84 (valor -> CADENA .)
    EXCLAMACION     reduce using rule 84 (valor -> CADENA .)
    RPAR            reduce using rule 84 (valor -> CADENA .)
    PUNTOCOMA       reduce using rule 84 (valor -> CADENA .)
    $end            reduce using rule 84 (valor -> CADENA .)
    AUTO            reduce using rule 84 (valor -> CADENA .)
    CHAR            reduce using rule 84 (valor -> CADENA .)
    STRING          reduce using rule 84 (valor -> CADENA .)
    BOOL            reduce using rule 84 (valor -> CADENA .)
    WHILE           reduce using rule 84 (valor -> CADENA .)
    IF              reduce using rule 84 (valor -> CADENA .)
    CLASS           reduce using rule 84 (valor -> CADENA .)
    FOR             reduce using rule 84 (valor -> CADENA .)
    VOID            reduce using rule 84 (valor -> CADENA .)
    IDENTIFICADOR   reduce using rule 84 (valor -> CADENA .)
    STRUCT          reduce using rule 84 (valor -> CADENA .)
    PRINT           reduce using rule 84 (valor -> CADENA .)
    COUT            reduce using rule 84 (valor -> CADENA .)
    INT             reduce using rule 84 (valor -> CADENA .)
    FLOAT           reduce using rule 84 (valor -> CADENA .)
    LONG            reduce using rule 84 (valor -> CADENA .)
    LLAVER          reduce using rule 84 (valor -> CADENA .)
    RETURN          reduce using rule 84 (valor -> CADENA .)
    COMMA           reduce using rule 84 (valor -> CADENA .)


state 68

    (85) valor -> TRUE .

    IGUAL           reduce using rule 85 (valor -> TRUE .)
    MENOR           reduce using rule 85 (valor -> TRUE .)
    MAYOR           reduce using rule 85 (valor -> TRUE .)
    EXCLAMACION     reduce using rule 85 (valor -> TRUE .)
    RPAR            reduce using rule 85 (valor -> TRUE .)
    PUNTOCOMA       reduce using rule 85 (valor -> TRUE .)
    $end            reduce using rule 85 (valor -> TRUE .)
    AUTO            reduce using rule 85 (valor -> TRUE .)
    CHAR            reduce using rule 85 (valor -> TRUE .)
    STRING          reduce using rule 85 (valor -> TRUE .)
    BOOL            reduce using rule 85 (valor -> TRUE .)
    WHILE           reduce using rule 85 (valor -> TRUE .)
    IF              reduce using rule 85 (valor -> TRUE .)
    CLASS           reduce using rule 85 (valor -> TRUE .)
    FOR             reduce using rule 85 (valor -> TRUE .)
    VOID            reduce using rule 85 (valor -> TRUE .)
    IDENTIFICADOR   reduce using rule 85 (valor -> TRUE .)
    STRUCT          reduce using rule 85 (valor -> TRUE .)
    PRINT           reduce using rule 85 (valor -> TRUE .)
    COUT            reduce using rule 85 (valor -> TRUE .)
    INT             reduce using rule 85 (valor -> TRUE .)
    FLOAT           reduce using rule 85 (valor -> TRUE .)
    LONG            reduce using rule 85 (valor -> TRUE .)
    LLAVER          reduce using rule 85 (valor -> TRUE .)
    RETURN          reduce using rule 85 (valor -> TRUE .)
    COMMA           reduce using rule 85 (valor -> TRUE .)


state 69

    (86) valor -> FALSE .

    IGUAL           reduce using rule 86 (valor -> FALSE .)
    MENOR           reduce using rule 86 (valor -> FALSE .)
    MAYOR           reduce using rule 86 (valor -> FALSE .)
    EXCLAMACION     reduce using rule 86 (valor -> FALSE .)
    RPAR            reduce using rule 86 (valor -> FALSE .)
    PUNTOCOMA       reduce using rule 86 (valor -> FALSE .)
    $end            reduce using rule 86 (valor -> FALSE .)
    AUTO            reduce using rule 86 (valor -> FALSE .)
    CHAR            reduce using rule 86 (valor -> FALSE .)
    STRING          reduce using rule 86 (valor -> FALSE .)
    BOOL            reduce using rule 86 (valor -> FALSE .)
    WHILE           reduce using rule 86 (valor -> FALSE .)
    IF              reduce using rule 86 (valor -> FALSE .)
    CLASS           reduce using rule 86 (valor -> FALSE .)
    FOR             reduce using rule 86 (valor -> FALSE .)
    VOID            reduce using rule 86 (valor -> FALSE .)
    IDENTIFICADOR   reduce using rule 86 (valor -> FALSE .)
    STRUCT          reduce using rule 86 (valor -> FALSE .)
    PRINT           reduce using rule 86 (valor -> FALSE .)
    COUT            reduce using rule 86 (valor -> FALSE .)
    INT             reduce using rule 86 (valor -> FALSE .)
    FLOAT           reduce using rule 86 (valor -> FALSE .)
    LONG            reduce using rule 86 (valor -> FALSE .)
    LLAVER          reduce using rule 86 (valor -> FALSE .)
    RETURN          reduce using rule 86 (valor -> FALSE .)
    COMMA           reduce using rule 86 (valor -> FALSE .)


state 70

    (91) expresionif -> IF LPAR condicionif . RPAR conllaves expresionpos
    (92) expresionif -> IF LPAR condicionif . RPAR sinllaves expresionpos

    RPAR            shift and go to state 115


state 71

    (104) condicionif -> initcondicion .

    RPAR            reduce using rule 104 (condicionif -> initcondicion .)


state 72

    (105) condicionif -> statement .

    RPAR            reduce using rule 105 (condicionif -> statement .)


state 73

    (106) initcondicion -> varblock . statement
    (58) varblock -> varblock . variable
    (107) statement -> . expresion
    (108) statement -> . EXCLAMACION boolean
    (109) statement -> . EXCLAMACION LPAR expresion RPAR
    (110) statement -> . EXCLAMACION IDENTIFICADOR
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (89) expresion -> . expresion comparador expresion
    (113) expresion -> . valor
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 61
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    statement                      shift and go to state 116
    variable                       shift and go to state 117
    expresion                      shift and go to state 60
    tipo                           shift and go to state 118
    valor                          shift and go to state 63

state 74

    (136) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL . bloqueclase LLAVER
    (137) bloqueclase -> . bloqueclase definicion
    (138) bloqueclase -> . bloqueclase funcionclaseimpl
    (139) bloqueclase -> .

    LLAVER          reduce using rule 139 (bloqueclase -> .)
    VOID            reduce using rule 139 (bloqueclase -> .)
    INT             reduce using rule 139 (bloqueclase -> .)
    FLOAT           reduce using rule 139 (bloqueclase -> .)
    LONG            reduce using rule 139 (bloqueclase -> .)
    AUTO            reduce using rule 139 (bloqueclase -> .)
    STRING          reduce using rule 139 (bloqueclase -> .)
    CHAR            reduce using rule 139 (bloqueclase -> .)

    bloqueclase                    shift and go to state 119

state 75

    (158) creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    CLASS           reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    STRUCT          reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    COUT            reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 158 (creacionobjeto -> IDENTIFICADOR IDENTIFICADOR PUNTOCOMA .)


state 76

    (159) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR . IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR . LPAR parametrosfuncion RPAR PUNTOCOMA

    IGUAL           shift and go to state 120
    LPAR            shift and go to state 121


state 77

    (75) stringappend -> IDENTIFICADOR PUNTO APPEND . LPAR stringdata RPAR

    LPAR            shift and go to state 122


state 78

    (130) for -> FOR LPAR initfor . PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER

    PUNTOCOMA       shift and go to state 123


state 79

    (120) initfor -> tipo . IDENTIFICADOR IGUAL valor

    IDENTIFICADOR   shift and go to state 124


state 80

    (20) tipo -> AUTO .

    IDENTIFICADOR   reduce using rule 20 (tipo -> AUTO .)


state 81

    (21) tipo -> STRING .

    IDENTIFICADOR   reduce using rule 21 (tipo -> STRING .)


state 82

    (22) tipo -> CHAR .

    IDENTIFICADOR   reduce using rule 22 (tipo -> CHAR .)


state 83

    (143) funcionclaseimpl -> VOID IDENTIFICADOR LPAR . parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (146) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (147) parametrosimplementacion -> . tipo IDENTIFICADOR IGUAL valor masparametrosimplementacion
    (148) parametrosimplementacion -> . tipo IDENTIFICADOR CORCHETEL CORCHETER masparametrosimplementacion
    (149) parametrosimplementacion -> . tipo IDENTIFICADOR CORCHETEL CORCHETER IGUAL masparametrosimplementacion
    (150) parametrosimplementacion -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    RPAR            reduce using rule 150 (parametrosimplementacion -> .)
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 80
    STRING          shift and go to state 81
    CHAR            shift and go to state 82

    parametrosimplementacion       shift and go to state 125
    tipo                           shift and go to state 91

state 84

    (90) struct -> STRUCT IDENTIFICADOR LLAVEL . varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (58) varblock -> . varblock variable
    (59) varblock -> .

    LLAVER          reduce using rule 59 (varblock -> .)
    AUTO            reduce using rule 59 (varblock -> .)
    CHAR            reduce using rule 59 (varblock -> .)
    STRING          reduce using rule 59 (varblock -> .)
    BOOL            reduce using rule 59 (varblock -> .)
    INT             reduce using rule 59 (varblock -> .)
    FLOAT           reduce using rule 59 (varblock -> .)
    LONG            reduce using rule 59 (varblock -> .)

    varblock                       shift and go to state 126

state 85

    (23) imprimir -> PRINT LPAR valor . RPAR

    RPAR            shift and go to state 127


state 86

    (24) imprimir -> COUT MENOR MENOR . valor
    (25) imprimir -> COUT MENOR MENOR . variable
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    valor                          shift and go to state 128
    variable                       shift and go to state 129
    tipo                           shift and go to state 118

state 87

    (65) variable -> tipo id IGUAL numero . PUNTOCOMA

    PUNTOCOMA       shift and go to state 130


state 88

    (132) arraydeclaration -> tipo id IGUAL LLAVEL . arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> tipo id IGUAL LLAVEL . LLAVER PUNTOCOMA
    (134) arraydata -> . arraydata COMMA valor
    (135) arraydata -> . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    LLAVER          shift and go to state 132
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    arraydata                      shift and go to state 131
    valor                          shift and go to state 133

state 89

    (63) numero -> ENTERO .

    PUNTOCOMA       reduce using rule 63 (numero -> ENTERO .)


state 90

    (64) numero -> FLOTANTE .

    PUNTOCOMA       reduce using rule 64 (numero -> FLOTANTE .)


state 91

    (146) parametrosimplementacion -> tipo . IDENTIFICADOR masparametrosimplementacion
    (147) parametrosimplementacion -> tipo . IDENTIFICADOR IGUAL valor masparametrosimplementacion
    (148) parametrosimplementacion -> tipo . IDENTIFICADOR CORCHETEL CORCHETER masparametrosimplementacion
    (149) parametrosimplementacion -> tipo . IDENTIFICADOR CORCHETEL CORCHETER IGUAL masparametrosimplementacion

    IDENTIFICADOR   shift and go to state 134


state 92

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion . RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (144) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion . RPAR PUNTOCOMA

    RPAR            shift and go to state 135


state 93

    (16) id -> IDENTIFICADOR CORCHETEL ENTERO . CORCHETER

    CORCHETER       shift and go to state 136


state 94

    (67) variable -> AUTO id IGUAL valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 137


state 95

    (69) variable -> CHAR id IGUAL CHARACTER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 138


state 96

    (70) variable -> STRING id IGUAL CADENA . PUNTOCOMA
    (80) concat -> CADENA .
    (52) booleanstring -> CADENA . MAS boolean
    (53) booleanstring -> CADENA . MENOS boolean

  ! shift/reduce conflict for PUNTOCOMA resolved as shift
  ! shift/reduce conflict for MAS resolved as shift
    PUNTOCOMA       shift and go to state 139
    MAS             shift and go to state 140
    MENOS           shift and go to state 141

  ! PUNTOCOMA       [ reduce using rule 80 (concat -> CADENA .) ]
  ! MAS             [ reduce using rule 80 (concat -> CADENA .) ]


state 97

    (71) variable -> STRING id IGUAL stringappend . PUNTOCOMA

    PUNTOCOMA       shift and go to state 142


state 98

    (72) variable -> STRING id IGUAL concat . PUNTOCOMA
    (78) concat -> concat . MAS CADENA
    (79) concat -> concat . MAS IDENTIFICADOR

    PUNTOCOMA       shift and go to state 143
    MAS             shift and go to state 144


state 99

    (73) variable -> STRING id IGUAL booleanstring . PUNTOCOMA

    PUNTOCOMA       shift and go to state 145


state 100

    (75) stringappend -> IDENTIFICADOR . PUNTO APPEND LPAR stringdata RPAR

    PUNTO           shift and go to state 146


state 101

    (50) booleanstring -> boolean . MAS CADENA
    (51) booleanstring -> boolean . MENOS CADENA

    MAS             shift and go to state 147
    MENOS           shift and go to state 148


state 102

    (111) boolean -> TRUE .

    MAS             reduce using rule 111 (boolean -> TRUE .)
    MENOS           reduce using rule 111 (boolean -> TRUE .)
    IGUAL           reduce using rule 111 (boolean -> TRUE .)
    MENOR           reduce using rule 111 (boolean -> TRUE .)
    MAYOR           reduce using rule 111 (boolean -> TRUE .)
    EXCLAMACION     reduce using rule 111 (boolean -> TRUE .)
    RPAR            reduce using rule 111 (boolean -> TRUE .)
    PUNTOCOMA       reduce using rule 111 (boolean -> TRUE .)


state 103

    (112) boolean -> FALSE .

    MAS             reduce using rule 112 (boolean -> FALSE .)
    MENOS           reduce using rule 112 (boolean -> FALSE .)
    IGUAL           reduce using rule 112 (boolean -> FALSE .)
    MENOR           reduce using rule 112 (boolean -> FALSE .)
    MAYOR           reduce using rule 112 (boolean -> FALSE .)
    EXCLAMACION     reduce using rule 112 (boolean -> FALSE .)
    RPAR            reduce using rule 112 (boolean -> FALSE .)
    PUNTOCOMA       reduce using rule 112 (boolean -> FALSE .)


state 104

    (74) variable -> BOOL id IGUAL operacionbool . PUNTOCOMA

    PUNTOCOMA       shift and go to state 149


state 105

    (47) operacionbool -> boolean . comparador boolean
    (114) comparador -> . IGUAL IGUAL
    (115) comparador -> . MENOR
    (116) comparador -> . MAYOR
    (117) comparador -> . MENOR IGUAL
    (118) comparador -> . MAYOR IGUAL
    (119) comparador -> . EXCLAMACION IGUAL

    IGUAL           shift and go to state 108
    MENOR           shift and go to state 109
    MAYOR           shift and go to state 110
    EXCLAMACION     shift and go to state 111

    comparador                     shift and go to state 150

state 106

    (88) while -> WHILE LPAR statement RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 151


state 107

    (89) expresion -> expresion comparador . expresion
    (89) expresion -> . expresion comparador expresion
    (113) expresion -> . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    expresion                      shift and go to state 152
    valor                          shift and go to state 63

state 108

    (114) comparador -> IGUAL . IGUAL

    IGUAL           shift and go to state 153


state 109

    (115) comparador -> MENOR .
    (117) comparador -> MENOR . IGUAL

    ENTERO          reduce using rule 115 (comparador -> MENOR .)
    FLOTANTE        reduce using rule 115 (comparador -> MENOR .)
    CHARACTER       reduce using rule 115 (comparador -> MENOR .)
    CADENA          reduce using rule 115 (comparador -> MENOR .)
    TRUE            reduce using rule 115 (comparador -> MENOR .)
    FALSE           reduce using rule 115 (comparador -> MENOR .)
    IDENTIFICADOR   reduce using rule 115 (comparador -> MENOR .)
    IGUAL           shift and go to state 154


state 110

    (116) comparador -> MAYOR .
    (118) comparador -> MAYOR . IGUAL

    ENTERO          reduce using rule 116 (comparador -> MAYOR .)
    FLOTANTE        reduce using rule 116 (comparador -> MAYOR .)
    CHARACTER       reduce using rule 116 (comparador -> MAYOR .)
    CADENA          reduce using rule 116 (comparador -> MAYOR .)
    TRUE            reduce using rule 116 (comparador -> MAYOR .)
    FALSE           reduce using rule 116 (comparador -> MAYOR .)
    IDENTIFICADOR   reduce using rule 116 (comparador -> MAYOR .)
    IGUAL           shift and go to state 155


state 111

    (119) comparador -> EXCLAMACION . IGUAL

    IGUAL           shift and go to state 156


state 112

    (108) statement -> EXCLAMACION boolean .

    RPAR            reduce using rule 108 (statement -> EXCLAMACION boolean .)


state 113

    (109) statement -> EXCLAMACION LPAR . expresion RPAR
    (89) expresion -> . expresion comparador expresion
    (113) expresion -> . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    expresion                      shift and go to state 157
    valor                          shift and go to state 63

state 114

    (110) statement -> EXCLAMACION IDENTIFICADOR .

    RPAR            reduce using rule 110 (statement -> EXCLAMACION IDENTIFICADOR .)


state 115

    (91) expresionif -> IF LPAR condicionif RPAR . conllaves expresionpos
    (92) expresionif -> IF LPAR condicionif RPAR . sinllaves expresionpos
    (103) conllaves -> . LLAVEL bodyblock LLAVER
    (101) sinllaves -> . while
    (102) sinllaves -> . variable
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVEL          shift and go to state 160
    WHILE           shift and go to state 21
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 158
    sinllaves                      shift and go to state 159
    while                          shift and go to state 161
    variable                       shift and go to state 162
    tipo                           shift and go to state 118

state 116

    (106) initcondicion -> varblock statement .

    RPAR            reduce using rule 106 (initcondicion -> varblock statement .)


state 117

    (58) varblock -> varblock variable .

    EXCLAMACION     reduce using rule 58 (varblock -> varblock variable .)
    AUTO            reduce using rule 58 (varblock -> varblock variable .)
    CHAR            reduce using rule 58 (varblock -> varblock variable .)
    STRING          reduce using rule 58 (varblock -> varblock variable .)
    BOOL            reduce using rule 58 (varblock -> varblock variable .)
    INT             reduce using rule 58 (varblock -> varblock variable .)
    FLOAT           reduce using rule 58 (varblock -> varblock variable .)
    LONG            reduce using rule 58 (varblock -> varblock variable .)
    ENTERO          reduce using rule 58 (varblock -> varblock variable .)
    FLOTANTE        reduce using rule 58 (varblock -> varblock variable .)
    CHARACTER       reduce using rule 58 (varblock -> varblock variable .)
    CADENA          reduce using rule 58 (varblock -> varblock variable .)
    TRUE            reduce using rule 58 (varblock -> varblock variable .)
    FALSE           reduce using rule 58 (varblock -> varblock variable .)
    IDENTIFICADOR   reduce using rule 58 (varblock -> varblock variable .)
    LLAVER          reduce using rule 58 (varblock -> varblock variable .)


state 118

    (65) variable -> tipo . id IGUAL numero PUNTOCOMA
    (66) variable -> tipo . id PUNTOCOMA
    (15) id -> . IDENTIFICADOR
    (16) id -> . IDENTIFICADOR CORCHETEL ENTERO CORCHETER

    IDENTIFICADOR   shift and go to state 36

    id                             shift and go to state 163

state 119

    (136) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase . LLAVER
    (137) bloqueclase -> bloqueclase . definicion
    (138) bloqueclase -> bloqueclase . funcionclaseimpl
    (140) definicion -> . tipo IDENTIFICADOR PUNTOCOMA
    (141) definicion -> .
    (142) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (143) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (144) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (145) funcionclaseimpl -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! reduce/reduce conflict for INT resolved using rule 141 (definicion -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 141 (definicion -> .)
  ! reduce/reduce conflict for LONG resolved using rule 141 (definicion -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 141 (definicion -> .)
  ! reduce/reduce conflict for STRING resolved using rule 141 (definicion -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 141 (definicion -> .)
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
    LLAVER          shift and go to state 164
    VOID            shift and go to state 26
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 80
    STRING          shift and go to state 81
    CHAR            shift and go to state 82

  ! LLAVER          [ reduce using rule 141 (definicion -> .) ]
  ! VOID            [ reduce using rule 141 (definicion -> .) ]
  ! INT             [ reduce using rule 141 (definicion -> .) ]
  ! FLOAT           [ reduce using rule 141 (definicion -> .) ]
  ! LONG            [ reduce using rule 141 (definicion -> .) ]
  ! AUTO            [ reduce using rule 141 (definicion -> .) ]
  ! STRING          [ reduce using rule 141 (definicion -> .) ]
  ! CHAR            [ reduce using rule 141 (definicion -> .) ]
  ! LLAVER          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 145 (funcionclaseimpl -> .) ]

    definicion                     shift and go to state 165
    funcionclaseimpl               shift and go to state 166
    tipo                           shift and go to state 167

state 120

    (159) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL . valor PUNTOCOMA
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 168

state 121

    (160) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR . parametrosfuncion RPAR PUNTOCOMA
    (151) parametrosfuncion -> . IDENTIFICADOR masparametrosfuncion
    (152) parametrosfuncion -> . valor masparametrosfuncion
    (153) parametrosfuncion -> .
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 169
    RPAR            reduce using rule 153 (parametrosfuncion -> .)
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    parametrosfuncion              shift and go to state 170
    valor                          shift and go to state 171

state 122

    (75) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR . stringdata RPAR
    (76) stringdata -> . CADENA
    (77) stringdata -> . IDENTIFICADOR

    CADENA          shift and go to state 174
    IDENTIFICADOR   shift and go to state 172

    stringdata                     shift and go to state 173

state 123

    (130) for -> FOR LPAR initfor PUNTOCOMA . condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (121) condfor -> . IDENTIFICADOR comparador valor

    IDENTIFICADOR   shift and go to state 176

    condfor                        shift and go to state 175

state 124

    (120) initfor -> tipo IDENTIFICADOR . IGUAL valor

    IGUAL           shift and go to state 177


state 125

    (143) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 178


state 126

    (90) struct -> STRUCT IDENTIFICADOR LLAVEL varblock . LLAVER IDENTIFICADOR PUNTOCOMA
    (58) varblock -> varblock . variable
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVER          shift and go to state 179
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    variable                       shift and go to state 117
    tipo                           shift and go to state 118

state 127

    (23) imprimir -> PRINT LPAR valor RPAR .

    $end            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    AUTO            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    CHAR            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    STRING          reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    BOOL            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    WHILE           reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    IF              reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    CLASS           reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    FOR             reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    VOID            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    IDENTIFICADOR   reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    STRUCT          reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    PRINT           reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    COUT            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    INT             reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    FLOAT           reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    LONG            reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    LLAVER          reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)
    RETURN          reduce using rule 23 (imprimir -> PRINT LPAR valor RPAR .)


state 128

    (24) imprimir -> COUT MENOR MENOR valor .

    $end            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    AUTO            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    CHAR            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    STRING          reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    BOOL            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    WHILE           reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    IF              reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    CLASS           reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    FOR             reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    VOID            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    IDENTIFICADOR   reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    STRUCT          reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    PRINT           reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    COUT            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    INT             reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    FLOAT           reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    LONG            reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    LLAVER          reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)
    RETURN          reduce using rule 24 (imprimir -> COUT MENOR MENOR valor .)


state 129

    (25) imprimir -> COUT MENOR MENOR variable .

    $end            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    AUTO            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    CHAR            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    STRING          reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    BOOL            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    WHILE           reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    IF              reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    CLASS           reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    FOR             reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    VOID            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    IDENTIFICADOR   reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    STRUCT          reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    PRINT           reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    COUT            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    INT             reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    FLOAT           reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    LONG            reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    LLAVER          reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)
    RETURN          reduce using rule 25 (imprimir -> COUT MENOR MENOR variable .)


state 130

    (65) variable -> tipo id IGUAL numero PUNTOCOMA .

    $end            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    AUTO            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    CHAR            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    STRING          reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    BOOL            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    WHILE           reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    IF              reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    CLASS           reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FOR             reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    VOID            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    STRUCT          reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    PRINT           reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    COUT            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    INT             reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FLOAT           reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    LONG            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    EXCLAMACION     reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    ENTERO          reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FLOTANTE        reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    CHARACTER       reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    CADENA          reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    TRUE            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    FALSE           reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    LLAVER          reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    RETURN          reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)
    ELSE            reduce using rule 65 (variable -> tipo id IGUAL numero PUNTOCOMA .)


state 131

    (132) arraydeclaration -> tipo id IGUAL LLAVEL arraydata . LLAVER PUNTOCOMA
    (134) arraydata -> arraydata . COMMA valor

    LLAVER          shift and go to state 180
    COMMA           shift and go to state 181


state 132

    (133) arraydeclaration -> tipo id IGUAL LLAVEL LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 182


state 133

    (135) arraydata -> valor .

    LLAVER          reduce using rule 135 (arraydata -> valor .)
    COMMA           reduce using rule 135 (arraydata -> valor .)


state 134

    (146) parametrosimplementacion -> tipo IDENTIFICADOR . masparametrosimplementacion
    (147) parametrosimplementacion -> tipo IDENTIFICADOR . IGUAL valor masparametrosimplementacion
    (148) parametrosimplementacion -> tipo IDENTIFICADOR . CORCHETEL CORCHETER masparametrosimplementacion
    (149) parametrosimplementacion -> tipo IDENTIFICADOR . CORCHETEL CORCHETER IGUAL masparametrosimplementacion
    (154) masparametrosimplementacion -> . COMMA parametrosimplementacion
    (155) masparametrosimplementacion -> .

    IGUAL           shift and go to state 184
    CORCHETEL       shift and go to state 185
    COMMA           shift and go to state 186
    RPAR            reduce using rule 155 (masparametrosimplementacion -> .)

    masparametrosimplementacion    shift and go to state 183

state 135

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR . LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (144) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR . PUNTOCOMA

    LLAVEL          shift and go to state 187
    PUNTOCOMA       shift and go to state 188


state 136

    (16) id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .

    IGUAL           reduce using rule 16 (id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .)
    PUNTOCOMA       reduce using rule 16 (id -> IDENTIFICADOR CORCHETEL ENTERO CORCHETER .)


state 137

    (67) variable -> AUTO id IGUAL valor PUNTOCOMA .

    $end            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    AUTO            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    CHAR            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    STRING          reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    BOOL            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    WHILE           reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    IF              reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    CLASS           reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FOR             reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    VOID            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    STRUCT          reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    PRINT           reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    COUT            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    INT             reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FLOAT           reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    LONG            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    EXCLAMACION     reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    ENTERO          reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    CHARACTER       reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    CADENA          reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    TRUE            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    FALSE           reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    LLAVER          reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    RETURN          reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)
    ELSE            reduce using rule 67 (variable -> AUTO id IGUAL valor PUNTOCOMA .)


state 138

    (69) variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .

    $end            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    AUTO            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CHAR            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    STRING          reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    BOOL            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    WHILE           reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    IF              reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CLASS           reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FOR             reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    VOID            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    STRUCT          reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    PRINT           reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    COUT            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    INT             reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FLOAT           reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    LONG            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    ENTERO          reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FLOTANTE        reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CHARACTER       reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    CADENA          reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    TRUE            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    FALSE           reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    LLAVER          reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    RETURN          reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)
    ELSE            reduce using rule 69 (variable -> CHAR id IGUAL CHARACTER PUNTOCOMA .)


state 139

    (70) variable -> STRING id IGUAL CADENA PUNTOCOMA .

    $end            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    AUTO            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    CHAR            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    STRING          reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    BOOL            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    WHILE           reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    IF              reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    CLASS           reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FOR             reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    VOID            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    STRUCT          reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    PRINT           reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    COUT            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    INT             reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FLOAT           reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    LONG            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    EXCLAMACION     reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    ENTERO          reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FLOTANTE        reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    CHARACTER       reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    CADENA          reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    TRUE            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    FALSE           reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    LLAVER          reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    RETURN          reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)
    ELSE            reduce using rule 70 (variable -> STRING id IGUAL CADENA PUNTOCOMA .)


state 140

    (52) booleanstring -> CADENA MAS . boolean
    (111) boolean -> . TRUE
    (112) boolean -> . FALSE

    TRUE            shift and go to state 102
    FALSE           shift and go to state 103

    boolean                        shift and go to state 189

state 141

    (53) booleanstring -> CADENA MENOS . boolean
    (111) boolean -> . TRUE
    (112) boolean -> . FALSE

    TRUE            shift and go to state 102
    FALSE           shift and go to state 103

    boolean                        shift and go to state 190

state 142

    (71) variable -> STRING id IGUAL stringappend PUNTOCOMA .

    $end            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    AUTO            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    CHAR            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    STRING          reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    BOOL            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    WHILE           reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    IF              reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    CLASS           reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FOR             reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    VOID            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    STRUCT          reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    PRINT           reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    COUT            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    INT             reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FLOAT           reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    LONG            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    EXCLAMACION     reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    ENTERO          reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FLOTANTE        reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    CHARACTER       reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    CADENA          reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    TRUE            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    FALSE           reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    LLAVER          reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    RETURN          reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)
    ELSE            reduce using rule 71 (variable -> STRING id IGUAL stringappend PUNTOCOMA .)


state 143

    (72) variable -> STRING id IGUAL concat PUNTOCOMA .

    $end            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    AUTO            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    CHAR            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    STRING          reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    BOOL            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    WHILE           reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    IF              reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    CLASS           reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FOR             reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    VOID            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    STRUCT          reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    PRINT           reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    COUT            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    INT             reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FLOAT           reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    LONG            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    EXCLAMACION     reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    ENTERO          reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FLOTANTE        reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    CHARACTER       reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    CADENA          reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    TRUE            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    FALSE           reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    LLAVER          reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    RETURN          reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)
    ELSE            reduce using rule 72 (variable -> STRING id IGUAL concat PUNTOCOMA .)


state 144

    (78) concat -> concat MAS . CADENA
    (79) concat -> concat MAS . IDENTIFICADOR

    CADENA          shift and go to state 191
    IDENTIFICADOR   shift and go to state 192


state 145

    (73) variable -> STRING id IGUAL booleanstring PUNTOCOMA .

    $end            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    AUTO            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    CHAR            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    STRING          reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    BOOL            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    WHILE           reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    IF              reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    CLASS           reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    FOR             reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    VOID            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    STRUCT          reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    PRINT           reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    COUT            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    INT             reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    FLOAT           reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    LONG            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    EXCLAMACION     reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    ENTERO          reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    FLOTANTE        reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    CHARACTER       reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    CADENA          reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    TRUE            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    FALSE           reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    LLAVER          reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    RETURN          reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)
    ELSE            reduce using rule 73 (variable -> STRING id IGUAL booleanstring PUNTOCOMA .)


state 146

    (75) stringappend -> IDENTIFICADOR PUNTO . APPEND LPAR stringdata RPAR

    APPEND          shift and go to state 77


state 147

    (50) booleanstring -> boolean MAS . CADENA

    CADENA          shift and go to state 193


state 148

    (51) booleanstring -> boolean MENOS . CADENA

    CADENA          shift and go to state 194


state 149

    (74) variable -> BOOL id IGUAL operacionbool PUNTOCOMA .

    $end            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    AUTO            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    CHAR            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    STRING          reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    BOOL            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    WHILE           reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    IF              reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    CLASS           reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FOR             reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    VOID            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    STRUCT          reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    PRINT           reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    COUT            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    INT             reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FLOAT           reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    LONG            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    EXCLAMACION     reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    ENTERO          reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FLOTANTE        reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    CHARACTER       reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    CADENA          reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    TRUE            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    FALSE           reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    LLAVER          reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    RETURN          reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)
    ELSE            reduce using rule 74 (variable -> BOOL id IGUAL operacionbool PUNTOCOMA .)


state 150

    (47) operacionbool -> boolean comparador . boolean
    (111) boolean -> . TRUE
    (112) boolean -> . FALSE

    TRUE            shift and go to state 102
    FALSE           shift and go to state 103

    boolean                        shift and go to state 195

state 151

    (88) while -> WHILE LPAR statement RPAR LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock claseimplementacion
    (30) bodyblock -> . bodyblock for
    (31) bodyblock -> . bodyblock funcionclaseimpl
    (32) bodyblock -> . bodyblock arraydeclaration
    (33) bodyblock -> . bodyblock creacionobjeto
    (34) bodyblock -> . bodyblock asignarvalorobjeto
    (35) bodyblock -> . bodyblock usarfuncionobjeto
    (36) bodyblock -> . bodyblock struct
    (37) bodyblock -> . bodyblock imprimir
    (38) bodyblock -> . bodyblock stringappend
    (39) bodyblock -> .

    LLAVER          reduce using rule 39 (bodyblock -> .)
    AUTO            reduce using rule 39 (bodyblock -> .)
    CHAR            reduce using rule 39 (bodyblock -> .)
    STRING          reduce using rule 39 (bodyblock -> .)
    BOOL            reduce using rule 39 (bodyblock -> .)
    WHILE           reduce using rule 39 (bodyblock -> .)
    IF              reduce using rule 39 (bodyblock -> .)
    CLASS           reduce using rule 39 (bodyblock -> .)
    FOR             reduce using rule 39 (bodyblock -> .)
    VOID            reduce using rule 39 (bodyblock -> .)
    IDENTIFICADOR   reduce using rule 39 (bodyblock -> .)
    STRUCT          reduce using rule 39 (bodyblock -> .)
    PRINT           reduce using rule 39 (bodyblock -> .)
    COUT            reduce using rule 39 (bodyblock -> .)
    INT             reduce using rule 39 (bodyblock -> .)
    FLOAT           reduce using rule 39 (bodyblock -> .)
    LONG            reduce using rule 39 (bodyblock -> .)

    bodyblock                      shift and go to state 196

state 152

    (89) expresion -> expresion comparador expresion .
    (89) expresion -> expresion . comparador expresion
    (114) comparador -> . IGUAL IGUAL
    (115) comparador -> . MENOR
    (116) comparador -> . MAYOR
    (117) comparador -> . MENOR IGUAL
    (118) comparador -> . MAYOR IGUAL
    (119) comparador -> . EXCLAMACION IGUAL

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for EXCLAMACION resolved as shift
    RPAR            reduce using rule 89 (expresion -> expresion comparador expresion .)
    IGUAL           shift and go to state 108
    MENOR           shift and go to state 109
    MAYOR           shift and go to state 110
    EXCLAMACION     shift and go to state 111

  ! IGUAL           [ reduce using rule 89 (expresion -> expresion comparador expresion .) ]
  ! MENOR           [ reduce using rule 89 (expresion -> expresion comparador expresion .) ]
  ! MAYOR           [ reduce using rule 89 (expresion -> expresion comparador expresion .) ]
  ! EXCLAMACION     [ reduce using rule 89 (expresion -> expresion comparador expresion .) ]

    comparador                     shift and go to state 107

state 153

    (114) comparador -> IGUAL IGUAL .

    ENTERO          reduce using rule 114 (comparador -> IGUAL IGUAL .)
    FLOTANTE        reduce using rule 114 (comparador -> IGUAL IGUAL .)
    CHARACTER       reduce using rule 114 (comparador -> IGUAL IGUAL .)
    CADENA          reduce using rule 114 (comparador -> IGUAL IGUAL .)
    TRUE            reduce using rule 114 (comparador -> IGUAL IGUAL .)
    FALSE           reduce using rule 114 (comparador -> IGUAL IGUAL .)
    IDENTIFICADOR   reduce using rule 114 (comparador -> IGUAL IGUAL .)


state 154

    (117) comparador -> MENOR IGUAL .

    ENTERO          reduce using rule 117 (comparador -> MENOR IGUAL .)
    FLOTANTE        reduce using rule 117 (comparador -> MENOR IGUAL .)
    CHARACTER       reduce using rule 117 (comparador -> MENOR IGUAL .)
    CADENA          reduce using rule 117 (comparador -> MENOR IGUAL .)
    TRUE            reduce using rule 117 (comparador -> MENOR IGUAL .)
    FALSE           reduce using rule 117 (comparador -> MENOR IGUAL .)
    IDENTIFICADOR   reduce using rule 117 (comparador -> MENOR IGUAL .)


state 155

    (118) comparador -> MAYOR IGUAL .

    ENTERO          reduce using rule 118 (comparador -> MAYOR IGUAL .)
    FLOTANTE        reduce using rule 118 (comparador -> MAYOR IGUAL .)
    CHARACTER       reduce using rule 118 (comparador -> MAYOR IGUAL .)
    CADENA          reduce using rule 118 (comparador -> MAYOR IGUAL .)
    TRUE            reduce using rule 118 (comparador -> MAYOR IGUAL .)
    FALSE           reduce using rule 118 (comparador -> MAYOR IGUAL .)
    IDENTIFICADOR   reduce using rule 118 (comparador -> MAYOR IGUAL .)


state 156

    (119) comparador -> EXCLAMACION IGUAL .

    ENTERO          reduce using rule 119 (comparador -> EXCLAMACION IGUAL .)
    FLOTANTE        reduce using rule 119 (comparador -> EXCLAMACION IGUAL .)
    CHARACTER       reduce using rule 119 (comparador -> EXCLAMACION IGUAL .)
    CADENA          reduce using rule 119 (comparador -> EXCLAMACION IGUAL .)
    TRUE            reduce using rule 119 (comparador -> EXCLAMACION IGUAL .)
    FALSE           reduce using rule 119 (comparador -> EXCLAMACION IGUAL .)
    IDENTIFICADOR   reduce using rule 119 (comparador -> EXCLAMACION IGUAL .)


state 157

    (109) statement -> EXCLAMACION LPAR expresion . RPAR
    (89) expresion -> expresion . comparador expresion
    (114) comparador -> . IGUAL IGUAL
    (115) comparador -> . MENOR
    (116) comparador -> . MAYOR
    (117) comparador -> . MENOR IGUAL
    (118) comparador -> . MAYOR IGUAL
    (119) comparador -> . EXCLAMACION IGUAL

    RPAR            shift and go to state 197
    IGUAL           shift and go to state 108
    MENOR           shift and go to state 109
    MAYOR           shift and go to state 110
    EXCLAMACION     shift and go to state 111

    comparador                     shift and go to state 107

state 158

    (91) expresionif -> IF LPAR condicionif RPAR conllaves . expresionpos
    (93) expresionpos -> . else
    (94) expresionpos -> . elseif
    (95) expresionpos -> .
    (99) else -> . ELSE conllaves
    (100) else -> . ELSE sinllaves
    (96) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (97) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (98) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for STRING resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for BOOL resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for IF resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for CLASS resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for FOR resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for VOID resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for STRUCT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for COUT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 95 (expresionpos -> .)
    $end            reduce using rule 95 (expresionpos -> .)
    AUTO            reduce using rule 95 (expresionpos -> .)
    CHAR            reduce using rule 95 (expresionpos -> .)
    STRING          reduce using rule 95 (expresionpos -> .)
    BOOL            reduce using rule 95 (expresionpos -> .)
    WHILE           reduce using rule 95 (expresionpos -> .)
    IF              reduce using rule 95 (expresionpos -> .)
    CLASS           reduce using rule 95 (expresionpos -> .)
    FOR             reduce using rule 95 (expresionpos -> .)
    VOID            reduce using rule 95 (expresionpos -> .)
    IDENTIFICADOR   reduce using rule 95 (expresionpos -> .)
    STRUCT          reduce using rule 95 (expresionpos -> .)
    PRINT           reduce using rule 95 (expresionpos -> .)
    COUT            reduce using rule 95 (expresionpos -> .)
    INT             reduce using rule 95 (expresionpos -> .)
    FLOAT           reduce using rule 95 (expresionpos -> .)
    LONG            reduce using rule 95 (expresionpos -> .)
    LLAVER          reduce using rule 95 (expresionpos -> .)
    RETURN          reduce using rule 95 (expresionpos -> .)
    ELSE            shift and go to state 201

  ! $end            [ reduce using rule 98 (elseif -> .) ]
  ! AUTO            [ reduce using rule 98 (elseif -> .) ]
  ! CHAR            [ reduce using rule 98 (elseif -> .) ]
  ! STRING          [ reduce using rule 98 (elseif -> .) ]
  ! BOOL            [ reduce using rule 98 (elseif -> .) ]
  ! WHILE           [ reduce using rule 98 (elseif -> .) ]
  ! IF              [ reduce using rule 98 (elseif -> .) ]
  ! CLASS           [ reduce using rule 98 (elseif -> .) ]
  ! FOR             [ reduce using rule 98 (elseif -> .) ]
  ! VOID            [ reduce using rule 98 (elseif -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 98 (elseif -> .) ]
  ! STRUCT          [ reduce using rule 98 (elseif -> .) ]
  ! PRINT           [ reduce using rule 98 (elseif -> .) ]
  ! COUT            [ reduce using rule 98 (elseif -> .) ]
  ! INT             [ reduce using rule 98 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 98 (elseif -> .) ]
  ! LONG            [ reduce using rule 98 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 98 (elseif -> .) ]
  ! RETURN          [ reduce using rule 98 (elseif -> .) ]

    expresionpos                   shift and go to state 198
    else                           shift and go to state 199
    elseif                         shift and go to state 200

state 159

    (92) expresionif -> IF LPAR condicionif RPAR sinllaves . expresionpos
    (93) expresionpos -> . else
    (94) expresionpos -> . elseif
    (95) expresionpos -> .
    (99) else -> . ELSE conllaves
    (100) else -> . ELSE sinllaves
    (96) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (97) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (98) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for STRING resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for BOOL resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for IF resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for CLASS resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for FOR resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for VOID resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for IDENTIFICADOR resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for STRUCT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for PRINT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for COUT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 95 (expresionpos -> .)
  ! reduce/reduce conflict for RETURN resolved using rule 95 (expresionpos -> .)
    $end            reduce using rule 95 (expresionpos -> .)
    AUTO            reduce using rule 95 (expresionpos -> .)
    CHAR            reduce using rule 95 (expresionpos -> .)
    STRING          reduce using rule 95 (expresionpos -> .)
    BOOL            reduce using rule 95 (expresionpos -> .)
    WHILE           reduce using rule 95 (expresionpos -> .)
    IF              reduce using rule 95 (expresionpos -> .)
    CLASS           reduce using rule 95 (expresionpos -> .)
    FOR             reduce using rule 95 (expresionpos -> .)
    VOID            reduce using rule 95 (expresionpos -> .)
    IDENTIFICADOR   reduce using rule 95 (expresionpos -> .)
    STRUCT          reduce using rule 95 (expresionpos -> .)
    PRINT           reduce using rule 95 (expresionpos -> .)
    COUT            reduce using rule 95 (expresionpos -> .)
    INT             reduce using rule 95 (expresionpos -> .)
    FLOAT           reduce using rule 95 (expresionpos -> .)
    LONG            reduce using rule 95 (expresionpos -> .)
    LLAVER          reduce using rule 95 (expresionpos -> .)
    RETURN          reduce using rule 95 (expresionpos -> .)
    ELSE            shift and go to state 201

  ! $end            [ reduce using rule 98 (elseif -> .) ]
  ! AUTO            [ reduce using rule 98 (elseif -> .) ]
  ! CHAR            [ reduce using rule 98 (elseif -> .) ]
  ! STRING          [ reduce using rule 98 (elseif -> .) ]
  ! BOOL            [ reduce using rule 98 (elseif -> .) ]
  ! WHILE           [ reduce using rule 98 (elseif -> .) ]
  ! IF              [ reduce using rule 98 (elseif -> .) ]
  ! CLASS           [ reduce using rule 98 (elseif -> .) ]
  ! FOR             [ reduce using rule 98 (elseif -> .) ]
  ! VOID            [ reduce using rule 98 (elseif -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 98 (elseif -> .) ]
  ! STRUCT          [ reduce using rule 98 (elseif -> .) ]
  ! PRINT           [ reduce using rule 98 (elseif -> .) ]
  ! COUT            [ reduce using rule 98 (elseif -> .) ]
  ! INT             [ reduce using rule 98 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 98 (elseif -> .) ]
  ! LONG            [ reduce using rule 98 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 98 (elseif -> .) ]
  ! RETURN          [ reduce using rule 98 (elseif -> .) ]

    expresionpos                   shift and go to state 202
    else                           shift and go to state 199
    elseif                         shift and go to state 200

state 160

    (103) conllaves -> LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock claseimplementacion
    (30) bodyblock -> . bodyblock for
    (31) bodyblock -> . bodyblock funcionclaseimpl
    (32) bodyblock -> . bodyblock arraydeclaration
    (33) bodyblock -> . bodyblock creacionobjeto
    (34) bodyblock -> . bodyblock asignarvalorobjeto
    (35) bodyblock -> . bodyblock usarfuncionobjeto
    (36) bodyblock -> . bodyblock struct
    (37) bodyblock -> . bodyblock imprimir
    (38) bodyblock -> . bodyblock stringappend
    (39) bodyblock -> .

    LLAVER          reduce using rule 39 (bodyblock -> .)
    AUTO            reduce using rule 39 (bodyblock -> .)
    CHAR            reduce using rule 39 (bodyblock -> .)
    STRING          reduce using rule 39 (bodyblock -> .)
    BOOL            reduce using rule 39 (bodyblock -> .)
    WHILE           reduce using rule 39 (bodyblock -> .)
    IF              reduce using rule 39 (bodyblock -> .)
    CLASS           reduce using rule 39 (bodyblock -> .)
    FOR             reduce using rule 39 (bodyblock -> .)
    VOID            reduce using rule 39 (bodyblock -> .)
    IDENTIFICADOR   reduce using rule 39 (bodyblock -> .)
    STRUCT          reduce using rule 39 (bodyblock -> .)
    PRINT           reduce using rule 39 (bodyblock -> .)
    COUT            reduce using rule 39 (bodyblock -> .)
    INT             reduce using rule 39 (bodyblock -> .)
    FLOAT           reduce using rule 39 (bodyblock -> .)
    LONG            reduce using rule 39 (bodyblock -> .)

    bodyblock                      shift and go to state 203

state 161

    (101) sinllaves -> while .

    ELSE            reduce using rule 101 (sinllaves -> while .)
    $end            reduce using rule 101 (sinllaves -> while .)
    AUTO            reduce using rule 101 (sinllaves -> while .)
    CHAR            reduce using rule 101 (sinllaves -> while .)
    STRING          reduce using rule 101 (sinllaves -> while .)
    BOOL            reduce using rule 101 (sinllaves -> while .)
    WHILE           reduce using rule 101 (sinllaves -> while .)
    IF              reduce using rule 101 (sinllaves -> while .)
    CLASS           reduce using rule 101 (sinllaves -> while .)
    FOR             reduce using rule 101 (sinllaves -> while .)
    VOID            reduce using rule 101 (sinllaves -> while .)
    IDENTIFICADOR   reduce using rule 101 (sinllaves -> while .)
    STRUCT          reduce using rule 101 (sinllaves -> while .)
    PRINT           reduce using rule 101 (sinllaves -> while .)
    COUT            reduce using rule 101 (sinllaves -> while .)
    INT             reduce using rule 101 (sinllaves -> while .)
    FLOAT           reduce using rule 101 (sinllaves -> while .)
    LONG            reduce using rule 101 (sinllaves -> while .)
    LLAVER          reduce using rule 101 (sinllaves -> while .)
    RETURN          reduce using rule 101 (sinllaves -> while .)


state 162

    (102) sinllaves -> variable .

    ELSE            reduce using rule 102 (sinllaves -> variable .)
    $end            reduce using rule 102 (sinllaves -> variable .)
    AUTO            reduce using rule 102 (sinllaves -> variable .)
    CHAR            reduce using rule 102 (sinllaves -> variable .)
    STRING          reduce using rule 102 (sinllaves -> variable .)
    BOOL            reduce using rule 102 (sinllaves -> variable .)
    WHILE           reduce using rule 102 (sinllaves -> variable .)
    IF              reduce using rule 102 (sinllaves -> variable .)
    CLASS           reduce using rule 102 (sinllaves -> variable .)
    FOR             reduce using rule 102 (sinllaves -> variable .)
    VOID            reduce using rule 102 (sinllaves -> variable .)
    IDENTIFICADOR   reduce using rule 102 (sinllaves -> variable .)
    STRUCT          reduce using rule 102 (sinllaves -> variable .)
    PRINT           reduce using rule 102 (sinllaves -> variable .)
    COUT            reduce using rule 102 (sinllaves -> variable .)
    INT             reduce using rule 102 (sinllaves -> variable .)
    FLOAT           reduce using rule 102 (sinllaves -> variable .)
    LONG            reduce using rule 102 (sinllaves -> variable .)
    LLAVER          reduce using rule 102 (sinllaves -> variable .)
    RETURN          reduce using rule 102 (sinllaves -> variable .)


state 163

    (65) variable -> tipo id . IGUAL numero PUNTOCOMA
    (66) variable -> tipo id . PUNTOCOMA

    IGUAL           shift and go to state 204
    PUNTOCOMA       shift and go to state 205


state 164

    (136) claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .

    $end            reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    AUTO            reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    CHAR            reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    STRING          reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    BOOL            reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    WHILE           reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    IF              reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    CLASS           reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    FOR             reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    VOID            reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    IDENTIFICADOR   reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    STRUCT          reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    PRINT           reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    COUT            reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    INT             reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    FLOAT           reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    LONG            reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    LLAVER          reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)
    RETURN          reduce using rule 136 (claseimplementacion -> CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER .)


state 165

    (137) bloqueclase -> bloqueclase definicion .

    LLAVER          reduce using rule 137 (bloqueclase -> bloqueclase definicion .)
    VOID            reduce using rule 137 (bloqueclase -> bloqueclase definicion .)
    INT             reduce using rule 137 (bloqueclase -> bloqueclase definicion .)
    FLOAT           reduce using rule 137 (bloqueclase -> bloqueclase definicion .)
    LONG            reduce using rule 137 (bloqueclase -> bloqueclase definicion .)
    AUTO            reduce using rule 137 (bloqueclase -> bloqueclase definicion .)
    STRING          reduce using rule 137 (bloqueclase -> bloqueclase definicion .)
    CHAR            reduce using rule 137 (bloqueclase -> bloqueclase definicion .)


state 166

    (138) bloqueclase -> bloqueclase funcionclaseimpl .

    LLAVER          reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)
    VOID            reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)
    INT             reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)
    FLOAT           reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)
    LONG            reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)
    AUTO            reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)
    STRING          reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)
    CHAR            reduce using rule 138 (bloqueclase -> bloqueclase funcionclaseimpl .)


state 167

    (140) definicion -> tipo . IDENTIFICADOR PUNTOCOMA
    (142) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (144) funcionclaseimpl -> tipo . IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 206


state 168

    (159) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 207


state 169

    (151) parametrosfuncion -> IDENTIFICADOR . masparametrosfuncion
    (87) valor -> IDENTIFICADOR .
    (156) masparametrosfuncion -> . COMMA parametrosfuncion
    (157) masparametrosfuncion -> .

  ! shift/reduce conflict for COMMA resolved as shift
  ! reduce/reduce conflict for RPAR resolved using rule 87 (valor -> IDENTIFICADOR .)
    RPAR            reduce using rule 87 (valor -> IDENTIFICADOR .)
    COMMA           shift and go to state 209

  ! COMMA           [ reduce using rule 87 (valor -> IDENTIFICADOR .) ]
  ! RPAR            [ reduce using rule 157 (masparametrosfuncion -> .) ]

    masparametrosfuncion           shift and go to state 208

state 170

    (160) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion . RPAR PUNTOCOMA

    RPAR            shift and go to state 210


state 171

    (152) parametrosfuncion -> valor . masparametrosfuncion
    (156) masparametrosfuncion -> . COMMA parametrosfuncion
    (157) masparametrosfuncion -> .

    COMMA           shift and go to state 209
    RPAR            reduce using rule 157 (masparametrosfuncion -> .)

    masparametrosfuncion           shift and go to state 211

state 172

    (77) stringdata -> IDENTIFICADOR .

    RPAR            reduce using rule 77 (stringdata -> IDENTIFICADOR .)


state 173

    (75) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata . RPAR

    RPAR            shift and go to state 212


state 174

    (76) stringdata -> CADENA .

    RPAR            reduce using rule 76 (stringdata -> CADENA .)


state 175

    (130) for -> FOR LPAR initfor PUNTOCOMA condfor . PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER

    PUNTOCOMA       shift and go to state 213


state 176

    (121) condfor -> IDENTIFICADOR . comparador valor
    (114) comparador -> . IGUAL IGUAL
    (115) comparador -> . MENOR
    (116) comparador -> . MAYOR
    (117) comparador -> . MENOR IGUAL
    (118) comparador -> . MAYOR IGUAL
    (119) comparador -> . EXCLAMACION IGUAL

    IGUAL           shift and go to state 108
    MENOR           shift and go to state 109
    MAYOR           shift and go to state 110
    EXCLAMACION     shift and go to state 111

    comparador                     shift and go to state 214

state 177

    (120) initfor -> tipo IDENTIFICADOR IGUAL . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 215

state 178

    (143) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 216


state 179

    (90) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 217


state 180

    (132) arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 218


state 181

    (134) arraydata -> arraydata COMMA . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 219

state 182

    (133) arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .

    $end            reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    AUTO            reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CHAR            reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    STRING          reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    BOOL            reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    WHILE           reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    IF              reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    CLASS           reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FOR             reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    VOID            reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    STRUCT          reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    PRINT           reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    COUT            reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    INT             reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    FLOAT           reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LONG            reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    LLAVER          reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)
    RETURN          reduce using rule 133 (arraydeclaration -> tipo id IGUAL LLAVEL LLAVER PUNTOCOMA .)


state 183

    (146) parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion .

    RPAR            reduce using rule 146 (parametrosimplementacion -> tipo IDENTIFICADOR masparametrosimplementacion .)


state 184

    (147) parametrosimplementacion -> tipo IDENTIFICADOR IGUAL . valor masparametrosimplementacion
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 220

state 185

    (148) parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL . CORCHETER masparametrosimplementacion
    (149) parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL . CORCHETER IGUAL masparametrosimplementacion

    CORCHETER       shift and go to state 221


state 186

    (154) masparametrosimplementacion -> COMMA . parametrosimplementacion
    (146) parametrosimplementacion -> . tipo IDENTIFICADOR masparametrosimplementacion
    (147) parametrosimplementacion -> . tipo IDENTIFICADOR IGUAL valor masparametrosimplementacion
    (148) parametrosimplementacion -> . tipo IDENTIFICADOR CORCHETEL CORCHETER masparametrosimplementacion
    (149) parametrosimplementacion -> . tipo IDENTIFICADOR CORCHETEL CORCHETER IGUAL masparametrosimplementacion
    (150) parametrosimplementacion -> .
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    RPAR            reduce using rule 150 (parametrosimplementacion -> .)
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32
    AUTO            shift and go to state 80
    STRING          shift and go to state 81
    CHAR            shift and go to state 82

    parametrosimplementacion       shift and go to state 222
    tipo                           shift and go to state 91

state 187

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL . bodyblock RETURN valor PUNTOCOMA LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock claseimplementacion
    (30) bodyblock -> . bodyblock for
    (31) bodyblock -> . bodyblock funcionclaseimpl
    (32) bodyblock -> . bodyblock arraydeclaration
    (33) bodyblock -> . bodyblock creacionobjeto
    (34) bodyblock -> . bodyblock asignarvalorobjeto
    (35) bodyblock -> . bodyblock usarfuncionobjeto
    (36) bodyblock -> . bodyblock struct
    (37) bodyblock -> . bodyblock imprimir
    (38) bodyblock -> . bodyblock stringappend
    (39) bodyblock -> .

    RETURN          reduce using rule 39 (bodyblock -> .)
    AUTO            reduce using rule 39 (bodyblock -> .)
    CHAR            reduce using rule 39 (bodyblock -> .)
    STRING          reduce using rule 39 (bodyblock -> .)
    BOOL            reduce using rule 39 (bodyblock -> .)
    WHILE           reduce using rule 39 (bodyblock -> .)
    IF              reduce using rule 39 (bodyblock -> .)
    CLASS           reduce using rule 39 (bodyblock -> .)
    FOR             reduce using rule 39 (bodyblock -> .)
    VOID            reduce using rule 39 (bodyblock -> .)
    IDENTIFICADOR   reduce using rule 39 (bodyblock -> .)
    STRUCT          reduce using rule 39 (bodyblock -> .)
    PRINT           reduce using rule 39 (bodyblock -> .)
    COUT            reduce using rule 39 (bodyblock -> .)
    INT             reduce using rule 39 (bodyblock -> .)
    FLOAT           reduce using rule 39 (bodyblock -> .)
    LONG            reduce using rule 39 (bodyblock -> .)

    bodyblock                      shift and go to state 223

state 188

    (144) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .

    $end            reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    AUTO            reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    CHAR            reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    STRING          reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    BOOL            reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    WHILE           reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    IF              reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    CLASS           reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    FOR             reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    VOID            reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    STRUCT          reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    PRINT           reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    COUT            reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    INT             reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    FLOAT           reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    LONG            reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    LLAVER          reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)
    RETURN          reduce using rule 144 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA .)


state 189

    (52) booleanstring -> CADENA MAS boolean .

    PUNTOCOMA       reduce using rule 52 (booleanstring -> CADENA MAS boolean .)


state 190

    (53) booleanstring -> CADENA MENOS boolean .

    PUNTOCOMA       reduce using rule 53 (booleanstring -> CADENA MENOS boolean .)


state 191

    (78) concat -> concat MAS CADENA .

    PUNTOCOMA       reduce using rule 78 (concat -> concat MAS CADENA .)
    MAS             reduce using rule 78 (concat -> concat MAS CADENA .)


state 192

    (79) concat -> concat MAS IDENTIFICADOR .

    PUNTOCOMA       reduce using rule 79 (concat -> concat MAS IDENTIFICADOR .)
    MAS             reduce using rule 79 (concat -> concat MAS IDENTIFICADOR .)


state 193

    (50) booleanstring -> boolean MAS CADENA .

    PUNTOCOMA       reduce using rule 50 (booleanstring -> boolean MAS CADENA .)


state 194

    (51) booleanstring -> boolean MENOS CADENA .

    PUNTOCOMA       reduce using rule 51 (booleanstring -> boolean MENOS CADENA .)


state 195

    (47) operacionbool -> boolean comparador boolean .

    PUNTOCOMA       reduce using rule 47 (operacionbool -> boolean comparador boolean .)


state 196

    (88) while -> WHILE LPAR statement RPAR LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . claseimplementacion
    (30) bodyblock -> bodyblock . for
    (31) bodyblock -> bodyblock . funcionclaseimpl
    (32) bodyblock -> bodyblock . arraydeclaration
    (33) bodyblock -> bodyblock . creacionobjeto
    (34) bodyblock -> bodyblock . asignarvalorobjeto
    (35) bodyblock -> bodyblock . usarfuncionobjeto
    (36) bodyblock -> bodyblock . struct
    (37) bodyblock -> bodyblock . imprimir
    (38) bodyblock -> bodyblock . stringappend
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (91) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (92) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (136) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (130) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (142) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (143) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (144) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (145) funcionclaseimpl -> .
    (131) arraydeclaration -> . tipo id PUNTOCOMA
    (132) arraydeclaration -> . tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> . tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
    (158) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (159) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (90) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (75) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
    LLAVER          shift and go to state 224
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    CLASS           shift and go to state 23
    FOR             shift and go to state 25
    VOID            shift and go to state 26
    IDENTIFICADOR   shift and go to state 24
    STRUCT          shift and go to state 27
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

  ! LLAVER          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! BOOL            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! WHILE           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IF              [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CLASS           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FOR             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRUCT          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! PRINT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! COUT            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 145 (funcionclaseimpl -> .) ]

    variable                       shift and go to state 225
    while                          shift and go to state 226
    expresionif                    shift and go to state 227
    claseimplementacion            shift and go to state 228
    for                            shift and go to state 229
    funcionclaseimpl               shift and go to state 230
    arraydeclaration               shift and go to state 231
    creacionobjeto                 shift and go to state 232
    asignarvalorobjeto             shift and go to state 233
    usarfuncionobjeto              shift and go to state 234
    struct                         shift and go to state 235
    imprimir                       shift and go to state 236
    stringappend                   shift and go to state 237
    tipo                           shift and go to state 16

state 197

    (109) statement -> EXCLAMACION LPAR expresion RPAR .

    RPAR            reduce using rule 109 (statement -> EXCLAMACION LPAR expresion RPAR .)


state 198

    (91) expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .

    $end            reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    AUTO            reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    CHAR            reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    STRING          reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    BOOL            reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    WHILE           reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    IF              reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    CLASS           reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FOR             reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    VOID            reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    IDENTIFICADOR   reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    STRUCT          reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    PRINT           reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    COUT            reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    INT             reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FLOAT           reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LONG            reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LLAVER          reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    RETURN          reduce using rule 91 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)


state 199

    (93) expresionpos -> else .

    $end            reduce using rule 93 (expresionpos -> else .)
    AUTO            reduce using rule 93 (expresionpos -> else .)
    CHAR            reduce using rule 93 (expresionpos -> else .)
    STRING          reduce using rule 93 (expresionpos -> else .)
    BOOL            reduce using rule 93 (expresionpos -> else .)
    WHILE           reduce using rule 93 (expresionpos -> else .)
    IF              reduce using rule 93 (expresionpos -> else .)
    CLASS           reduce using rule 93 (expresionpos -> else .)
    FOR             reduce using rule 93 (expresionpos -> else .)
    VOID            reduce using rule 93 (expresionpos -> else .)
    IDENTIFICADOR   reduce using rule 93 (expresionpos -> else .)
    STRUCT          reduce using rule 93 (expresionpos -> else .)
    PRINT           reduce using rule 93 (expresionpos -> else .)
    COUT            reduce using rule 93 (expresionpos -> else .)
    INT             reduce using rule 93 (expresionpos -> else .)
    FLOAT           reduce using rule 93 (expresionpos -> else .)
    LONG            reduce using rule 93 (expresionpos -> else .)
    LLAVER          reduce using rule 93 (expresionpos -> else .)
    RETURN          reduce using rule 93 (expresionpos -> else .)


state 200

    (94) expresionpos -> elseif .

    $end            reduce using rule 94 (expresionpos -> elseif .)
    AUTO            reduce using rule 94 (expresionpos -> elseif .)
    CHAR            reduce using rule 94 (expresionpos -> elseif .)
    STRING          reduce using rule 94 (expresionpos -> elseif .)
    BOOL            reduce using rule 94 (expresionpos -> elseif .)
    WHILE           reduce using rule 94 (expresionpos -> elseif .)
    IF              reduce using rule 94 (expresionpos -> elseif .)
    CLASS           reduce using rule 94 (expresionpos -> elseif .)
    FOR             reduce using rule 94 (expresionpos -> elseif .)
    VOID            reduce using rule 94 (expresionpos -> elseif .)
    IDENTIFICADOR   reduce using rule 94 (expresionpos -> elseif .)
    STRUCT          reduce using rule 94 (expresionpos -> elseif .)
    PRINT           reduce using rule 94 (expresionpos -> elseif .)
    COUT            reduce using rule 94 (expresionpos -> elseif .)
    INT             reduce using rule 94 (expresionpos -> elseif .)
    FLOAT           reduce using rule 94 (expresionpos -> elseif .)
    LONG            reduce using rule 94 (expresionpos -> elseif .)
    LLAVER          reduce using rule 94 (expresionpos -> elseif .)
    RETURN          reduce using rule 94 (expresionpos -> elseif .)


state 201

    (99) else -> ELSE . conllaves
    (100) else -> ELSE . sinllaves
    (96) elseif -> ELSE . IF LPAR condicionif RPAR conllaves else
    (97) elseif -> ELSE . IF LPAR condicionif RPAR sinllaves else
    (103) conllaves -> . LLAVEL bodyblock LLAVER
    (101) sinllaves -> . while
    (102) sinllaves -> . variable
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    IF              shift and go to state 240
    LLAVEL          shift and go to state 160
    WHILE           shift and go to state 21
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 238
    sinllaves                      shift and go to state 239
    while                          shift and go to state 161
    variable                       shift and go to state 162
    tipo                           shift and go to state 118

state 202

    (92) expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .

    $end            reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    AUTO            reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    CHAR            reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    STRING          reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    BOOL            reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    WHILE           reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    IF              reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    CLASS           reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FOR             reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    VOID            reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    IDENTIFICADOR   reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    STRUCT          reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    PRINT           reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    COUT            reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    INT             reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FLOAT           reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LONG            reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LLAVER          reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    RETURN          reduce using rule 92 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)


state 203

    (103) conllaves -> LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . claseimplementacion
    (30) bodyblock -> bodyblock . for
    (31) bodyblock -> bodyblock . funcionclaseimpl
    (32) bodyblock -> bodyblock . arraydeclaration
    (33) bodyblock -> bodyblock . creacionobjeto
    (34) bodyblock -> bodyblock . asignarvalorobjeto
    (35) bodyblock -> bodyblock . usarfuncionobjeto
    (36) bodyblock -> bodyblock . struct
    (37) bodyblock -> bodyblock . imprimir
    (38) bodyblock -> bodyblock . stringappend
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (91) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (92) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (136) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (130) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (142) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (143) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (144) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (145) funcionclaseimpl -> .
    (131) arraydeclaration -> . tipo id PUNTOCOMA
    (132) arraydeclaration -> . tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> . tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
    (158) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (159) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (90) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (75) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
    LLAVER          shift and go to state 241
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    CLASS           shift and go to state 23
    FOR             shift and go to state 25
    VOID            shift and go to state 26
    IDENTIFICADOR   shift and go to state 24
    STRUCT          shift and go to state 27
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

  ! LLAVER          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! BOOL            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! WHILE           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IF              [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CLASS           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FOR             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRUCT          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! PRINT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! COUT            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 145 (funcionclaseimpl -> .) ]

    variable                       shift and go to state 225
    while                          shift and go to state 226
    expresionif                    shift and go to state 227
    claseimplementacion            shift and go to state 228
    for                            shift and go to state 229
    funcionclaseimpl               shift and go to state 230
    arraydeclaration               shift and go to state 231
    creacionobjeto                 shift and go to state 232
    asignarvalorobjeto             shift and go to state 233
    usarfuncionobjeto              shift and go to state 234
    struct                         shift and go to state 235
    imprimir                       shift and go to state 236
    stringappend                   shift and go to state 237
    tipo                           shift and go to state 16

state 204

    (65) variable -> tipo id IGUAL . numero PUNTOCOMA
    (63) numero -> . ENTERO
    (64) numero -> . FLOTANTE

    ENTERO          shift and go to state 89
    FLOTANTE        shift and go to state 90

    numero                         shift and go to state 87

state 205

    (66) variable -> tipo id PUNTOCOMA .

    EXCLAMACION     reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    AUTO            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    CHAR            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    STRING          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    BOOL            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    INT             reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    FLOAT           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    LONG            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    ENTERO          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    FLOTANTE        reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    CHARACTER       reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    CADENA          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    TRUE            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    FALSE           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    $end            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    WHILE           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    IF              reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    CLASS           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    FOR             reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    VOID            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    STRUCT          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    PRINT           reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    COUT            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    LLAVER          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    RETURN          reduce using rule 66 (variable -> tipo id PUNTOCOMA .)
    ELSE            reduce using rule 66 (variable -> tipo id PUNTOCOMA .)


state 206

    (140) definicion -> tipo IDENTIFICADOR . PUNTOCOMA
    (142) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (144) funcionclaseimpl -> tipo IDENTIFICADOR . LPAR parametrosimplementacion RPAR PUNTOCOMA

    PUNTOCOMA       shift and go to state 242
    LPAR            shift and go to state 52


state 207

    (159) asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .

    $end            reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    AUTO            reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    CHAR            reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    STRING          reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    BOOL            reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    WHILE           reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    IF              reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    CLASS           reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FOR             reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    VOID            reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    STRUCT          reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    PRINT           reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    COUT            reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    INT             reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FLOAT           reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    LONG            reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    LLAVER          reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    RETURN          reduce using rule 159 (asignarvalorobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)


state 208

    (151) parametrosfuncion -> IDENTIFICADOR masparametrosfuncion .

    RPAR            reduce using rule 151 (parametrosfuncion -> IDENTIFICADOR masparametrosfuncion .)


state 209

    (156) masparametrosfuncion -> COMMA . parametrosfuncion
    (151) parametrosfuncion -> . IDENTIFICADOR masparametrosfuncion
    (152) parametrosfuncion -> . valor masparametrosfuncion
    (153) parametrosfuncion -> .
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    IDENTIFICADOR   shift and go to state 169
    RPAR            reduce using rule 153 (parametrosfuncion -> .)
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69

    parametrosfuncion              shift and go to state 243
    valor                          shift and go to state 171

state 210

    (160) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 244


state 211

    (152) parametrosfuncion -> valor masparametrosfuncion .

    RPAR            reduce using rule 152 (parametrosfuncion -> valor masparametrosfuncion .)


state 212

    (75) stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .

    $end            reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    AUTO            reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    CHAR            reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    STRING          reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    BOOL            reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    WHILE           reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    IF              reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    CLASS           reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    FOR             reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    VOID            reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    IDENTIFICADOR   reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    STRUCT          reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    PRINT           reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    COUT            reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    INT             reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    FLOAT           reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    LONG            reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    PUNTOCOMA       reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    LLAVER          reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)
    RETURN          reduce using rule 75 (stringappend -> IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR .)


state 213

    (130) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA . loopfor RPAR LLAVEL bodyblock LLAVER
    (122) loopfor -> . asign
    (123) loopfor -> . unaryexp
    (124) asign -> . IDENTIFICADOR MAS valor
    (125) asign -> . IDENTIFICADOR MENOS valor
    (126) asign -> . IDENTIFICADOR ASTERISCO valor
    (127) asign -> . IDENTIFICADOR SLASH valor
    (128) unaryexp -> . IDENTIFICADOR MAS MAS
    (129) unaryexp -> . IDENTIFICADOR MENOS MENOS

    IDENTIFICADOR   shift and go to state 248

    loopfor                        shift and go to state 245
    asign                          shift and go to state 246
    unaryexp                       shift and go to state 247

state 214

    (121) condfor -> IDENTIFICADOR comparador . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 249

state 215

    (120) initfor -> tipo IDENTIFICADOR IGUAL valor .

    PUNTOCOMA       reduce using rule 120 (initfor -> tipo IDENTIFICADOR IGUAL valor .)


state 216

    (143) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock claseimplementacion
    (30) bodyblock -> . bodyblock for
    (31) bodyblock -> . bodyblock funcionclaseimpl
    (32) bodyblock -> . bodyblock arraydeclaration
    (33) bodyblock -> . bodyblock creacionobjeto
    (34) bodyblock -> . bodyblock asignarvalorobjeto
    (35) bodyblock -> . bodyblock usarfuncionobjeto
    (36) bodyblock -> . bodyblock struct
    (37) bodyblock -> . bodyblock imprimir
    (38) bodyblock -> . bodyblock stringappend
    (39) bodyblock -> .

    LLAVER          reduce using rule 39 (bodyblock -> .)
    AUTO            reduce using rule 39 (bodyblock -> .)
    CHAR            reduce using rule 39 (bodyblock -> .)
    STRING          reduce using rule 39 (bodyblock -> .)
    BOOL            reduce using rule 39 (bodyblock -> .)
    WHILE           reduce using rule 39 (bodyblock -> .)
    IF              reduce using rule 39 (bodyblock -> .)
    CLASS           reduce using rule 39 (bodyblock -> .)
    FOR             reduce using rule 39 (bodyblock -> .)
    VOID            reduce using rule 39 (bodyblock -> .)
    IDENTIFICADOR   reduce using rule 39 (bodyblock -> .)
    STRUCT          reduce using rule 39 (bodyblock -> .)
    PRINT           reduce using rule 39 (bodyblock -> .)
    COUT            reduce using rule 39 (bodyblock -> .)
    INT             reduce using rule 39 (bodyblock -> .)
    FLOAT           reduce using rule 39 (bodyblock -> .)
    LONG            reduce using rule 39 (bodyblock -> .)

    bodyblock                      shift and go to state 250

state 217

    (90) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR . PUNTOCOMA

    PUNTOCOMA       shift and go to state 251


state 218

    (132) arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .

    $end            reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    AUTO            reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    CHAR            reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    STRING          reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    BOOL            reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    WHILE           reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    IF              reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    CLASS           reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    FOR             reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    VOID            reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    STRUCT          reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    PRINT           reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    COUT            reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    INT             reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    FLOAT           reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    LONG            reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    LLAVER          reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)
    RETURN          reduce using rule 132 (arraydeclaration -> tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA .)


state 219

    (134) arraydata -> arraydata COMMA valor .

    LLAVER          reduce using rule 134 (arraydata -> arraydata COMMA valor .)
    COMMA           reduce using rule 134 (arraydata -> arraydata COMMA valor .)


state 220

    (147) parametrosimplementacion -> tipo IDENTIFICADOR IGUAL valor . masparametrosimplementacion
    (154) masparametrosimplementacion -> . COMMA parametrosimplementacion
    (155) masparametrosimplementacion -> .

    COMMA           shift and go to state 186
    RPAR            reduce using rule 155 (masparametrosimplementacion -> .)

    masparametrosimplementacion    shift and go to state 252

state 221

    (148) parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER . masparametrosimplementacion
    (149) parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER . IGUAL masparametrosimplementacion
    (154) masparametrosimplementacion -> . COMMA parametrosimplementacion
    (155) masparametrosimplementacion -> .

    IGUAL           shift and go to state 254
    COMMA           shift and go to state 186
    RPAR            reduce using rule 155 (masparametrosimplementacion -> .)

    masparametrosimplementacion    shift and go to state 253

state 222

    (154) masparametrosimplementacion -> COMMA parametrosimplementacion .

    RPAR            reduce using rule 154 (masparametrosimplementacion -> COMMA parametrosimplementacion .)


state 223

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock . RETURN valor PUNTOCOMA LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . claseimplementacion
    (30) bodyblock -> bodyblock . for
    (31) bodyblock -> bodyblock . funcionclaseimpl
    (32) bodyblock -> bodyblock . arraydeclaration
    (33) bodyblock -> bodyblock . creacionobjeto
    (34) bodyblock -> bodyblock . asignarvalorobjeto
    (35) bodyblock -> bodyblock . usarfuncionobjeto
    (36) bodyblock -> bodyblock . struct
    (37) bodyblock -> bodyblock . imprimir
    (38) bodyblock -> bodyblock . stringappend
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (91) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (92) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (136) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (130) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (142) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (143) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (144) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (145) funcionclaseimpl -> .
    (131) arraydeclaration -> . tipo id PUNTOCOMA
    (132) arraydeclaration -> . tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> . tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
    (158) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (159) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (90) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (75) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for RETURN resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
    RETURN          shift and go to state 255
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    CLASS           shift and go to state 23
    FOR             shift and go to state 25
    VOID            shift and go to state 26
    IDENTIFICADOR   shift and go to state 24
    STRUCT          shift and go to state 27
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

  ! RETURN          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! BOOL            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! WHILE           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IF              [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CLASS           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FOR             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRUCT          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! PRINT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! COUT            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 145 (funcionclaseimpl -> .) ]

    tipo                           shift and go to state 16
    variable                       shift and go to state 225
    while                          shift and go to state 226
    expresionif                    shift and go to state 227
    claseimplementacion            shift and go to state 228
    for                            shift and go to state 229
    funcionclaseimpl               shift and go to state 230
    arraydeclaration               shift and go to state 231
    creacionobjeto                 shift and go to state 232
    asignarvalorobjeto             shift and go to state 233
    usarfuncionobjeto              shift and go to state 234
    struct                         shift and go to state 235
    imprimir                       shift and go to state 236
    stringappend                   shift and go to state 237

state 224

    (88) while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    CLASS           reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    VOID            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    IDENTIFICADOR   reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    STRUCT          reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    ELSE            reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 88 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)


state 225

    (26) bodyblock -> bodyblock variable .

    LLAVER          reduce using rule 26 (bodyblock -> bodyblock variable .)
    AUTO            reduce using rule 26 (bodyblock -> bodyblock variable .)
    CHAR            reduce using rule 26 (bodyblock -> bodyblock variable .)
    STRING          reduce using rule 26 (bodyblock -> bodyblock variable .)
    BOOL            reduce using rule 26 (bodyblock -> bodyblock variable .)
    WHILE           reduce using rule 26 (bodyblock -> bodyblock variable .)
    IF              reduce using rule 26 (bodyblock -> bodyblock variable .)
    CLASS           reduce using rule 26 (bodyblock -> bodyblock variable .)
    FOR             reduce using rule 26 (bodyblock -> bodyblock variable .)
    VOID            reduce using rule 26 (bodyblock -> bodyblock variable .)
    IDENTIFICADOR   reduce using rule 26 (bodyblock -> bodyblock variable .)
    STRUCT          reduce using rule 26 (bodyblock -> bodyblock variable .)
    PRINT           reduce using rule 26 (bodyblock -> bodyblock variable .)
    COUT            reduce using rule 26 (bodyblock -> bodyblock variable .)
    INT             reduce using rule 26 (bodyblock -> bodyblock variable .)
    FLOAT           reduce using rule 26 (bodyblock -> bodyblock variable .)
    LONG            reduce using rule 26 (bodyblock -> bodyblock variable .)
    RETURN          reduce using rule 26 (bodyblock -> bodyblock variable .)


state 226

    (27) bodyblock -> bodyblock while .

    LLAVER          reduce using rule 27 (bodyblock -> bodyblock while .)
    AUTO            reduce using rule 27 (bodyblock -> bodyblock while .)
    CHAR            reduce using rule 27 (bodyblock -> bodyblock while .)
    STRING          reduce using rule 27 (bodyblock -> bodyblock while .)
    BOOL            reduce using rule 27 (bodyblock -> bodyblock while .)
    WHILE           reduce using rule 27 (bodyblock -> bodyblock while .)
    IF              reduce using rule 27 (bodyblock -> bodyblock while .)
    CLASS           reduce using rule 27 (bodyblock -> bodyblock while .)
    FOR             reduce using rule 27 (bodyblock -> bodyblock while .)
    VOID            reduce using rule 27 (bodyblock -> bodyblock while .)
    IDENTIFICADOR   reduce using rule 27 (bodyblock -> bodyblock while .)
    STRUCT          reduce using rule 27 (bodyblock -> bodyblock while .)
    PRINT           reduce using rule 27 (bodyblock -> bodyblock while .)
    COUT            reduce using rule 27 (bodyblock -> bodyblock while .)
    INT             reduce using rule 27 (bodyblock -> bodyblock while .)
    FLOAT           reduce using rule 27 (bodyblock -> bodyblock while .)
    LONG            reduce using rule 27 (bodyblock -> bodyblock while .)
    RETURN          reduce using rule 27 (bodyblock -> bodyblock while .)


state 227

    (28) bodyblock -> bodyblock expresionif .

    LLAVER          reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    AUTO            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    CHAR            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    STRING          reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    BOOL            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    WHILE           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    IF              reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    CLASS           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    FOR             reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    VOID            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    IDENTIFICADOR   reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    STRUCT          reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    PRINT           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    COUT            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    INT             reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    FLOAT           reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    LONG            reduce using rule 28 (bodyblock -> bodyblock expresionif .)
    RETURN          reduce using rule 28 (bodyblock -> bodyblock expresionif .)


state 228

    (29) bodyblock -> bodyblock claseimplementacion .

    LLAVER          reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    AUTO            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    CHAR            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    STRING          reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    BOOL            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    WHILE           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    IF              reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    CLASS           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    FOR             reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    VOID            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    IDENTIFICADOR   reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    STRUCT          reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    PRINT           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    COUT            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    INT             reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    FLOAT           reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    LONG            reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)
    RETURN          reduce using rule 29 (bodyblock -> bodyblock claseimplementacion .)


state 229

    (30) bodyblock -> bodyblock for .

    LLAVER          reduce using rule 30 (bodyblock -> bodyblock for .)
    AUTO            reduce using rule 30 (bodyblock -> bodyblock for .)
    CHAR            reduce using rule 30 (bodyblock -> bodyblock for .)
    STRING          reduce using rule 30 (bodyblock -> bodyblock for .)
    BOOL            reduce using rule 30 (bodyblock -> bodyblock for .)
    WHILE           reduce using rule 30 (bodyblock -> bodyblock for .)
    IF              reduce using rule 30 (bodyblock -> bodyblock for .)
    CLASS           reduce using rule 30 (bodyblock -> bodyblock for .)
    FOR             reduce using rule 30 (bodyblock -> bodyblock for .)
    VOID            reduce using rule 30 (bodyblock -> bodyblock for .)
    IDENTIFICADOR   reduce using rule 30 (bodyblock -> bodyblock for .)
    STRUCT          reduce using rule 30 (bodyblock -> bodyblock for .)
    PRINT           reduce using rule 30 (bodyblock -> bodyblock for .)
    COUT            reduce using rule 30 (bodyblock -> bodyblock for .)
    INT             reduce using rule 30 (bodyblock -> bodyblock for .)
    FLOAT           reduce using rule 30 (bodyblock -> bodyblock for .)
    LONG            reduce using rule 30 (bodyblock -> bodyblock for .)
    RETURN          reduce using rule 30 (bodyblock -> bodyblock for .)


state 230

    (31) bodyblock -> bodyblock funcionclaseimpl .

    LLAVER          reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    AUTO            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    CHAR            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    STRING          reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    BOOL            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    WHILE           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    IF              reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    CLASS           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    FOR             reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    VOID            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    IDENTIFICADOR   reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    STRUCT          reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    PRINT           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    COUT            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    INT             reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    FLOAT           reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    LONG            reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)
    RETURN          reduce using rule 31 (bodyblock -> bodyblock funcionclaseimpl .)


state 231

    (32) bodyblock -> bodyblock arraydeclaration .

    LLAVER          reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    AUTO            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    CHAR            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    STRING          reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    BOOL            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    WHILE           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    IF              reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    CLASS           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    FOR             reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    VOID            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    IDENTIFICADOR   reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    STRUCT          reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    PRINT           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    COUT            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    INT             reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    FLOAT           reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    LONG            reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)
    RETURN          reduce using rule 32 (bodyblock -> bodyblock arraydeclaration .)


state 232

    (33) bodyblock -> bodyblock creacionobjeto .

    LLAVER          reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    AUTO            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    CHAR            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    STRING          reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    BOOL            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    WHILE           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    IF              reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    CLASS           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    FOR             reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    VOID            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    IDENTIFICADOR   reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    STRUCT          reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    PRINT           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    COUT            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    INT             reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    FLOAT           reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    LONG            reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)
    RETURN          reduce using rule 33 (bodyblock -> bodyblock creacionobjeto .)


state 233

    (34) bodyblock -> bodyblock asignarvalorobjeto .

    LLAVER          reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    AUTO            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    CHAR            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    STRING          reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    BOOL            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    WHILE           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    IF              reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    CLASS           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    FOR             reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    VOID            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    IDENTIFICADOR   reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    STRUCT          reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    PRINT           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    COUT            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    INT             reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    FLOAT           reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    LONG            reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)
    RETURN          reduce using rule 34 (bodyblock -> bodyblock asignarvalorobjeto .)


state 234

    (35) bodyblock -> bodyblock usarfuncionobjeto .

    LLAVER          reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    AUTO            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    CHAR            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    STRING          reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    BOOL            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    WHILE           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    IF              reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    CLASS           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    FOR             reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    VOID            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    IDENTIFICADOR   reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    STRUCT          reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    PRINT           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    COUT            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    INT             reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    FLOAT           reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    LONG            reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)
    RETURN          reduce using rule 35 (bodyblock -> bodyblock usarfuncionobjeto .)


state 235

    (36) bodyblock -> bodyblock struct .

    LLAVER          reduce using rule 36 (bodyblock -> bodyblock struct .)
    AUTO            reduce using rule 36 (bodyblock -> bodyblock struct .)
    CHAR            reduce using rule 36 (bodyblock -> bodyblock struct .)
    STRING          reduce using rule 36 (bodyblock -> bodyblock struct .)
    BOOL            reduce using rule 36 (bodyblock -> bodyblock struct .)
    WHILE           reduce using rule 36 (bodyblock -> bodyblock struct .)
    IF              reduce using rule 36 (bodyblock -> bodyblock struct .)
    CLASS           reduce using rule 36 (bodyblock -> bodyblock struct .)
    FOR             reduce using rule 36 (bodyblock -> bodyblock struct .)
    VOID            reduce using rule 36 (bodyblock -> bodyblock struct .)
    IDENTIFICADOR   reduce using rule 36 (bodyblock -> bodyblock struct .)
    STRUCT          reduce using rule 36 (bodyblock -> bodyblock struct .)
    PRINT           reduce using rule 36 (bodyblock -> bodyblock struct .)
    COUT            reduce using rule 36 (bodyblock -> bodyblock struct .)
    INT             reduce using rule 36 (bodyblock -> bodyblock struct .)
    FLOAT           reduce using rule 36 (bodyblock -> bodyblock struct .)
    LONG            reduce using rule 36 (bodyblock -> bodyblock struct .)
    RETURN          reduce using rule 36 (bodyblock -> bodyblock struct .)


state 236

    (37) bodyblock -> bodyblock imprimir .

    LLAVER          reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    AUTO            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    CHAR            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    STRING          reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    BOOL            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    WHILE           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    IF              reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    CLASS           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    FOR             reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    VOID            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    IDENTIFICADOR   reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    STRUCT          reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    PRINT           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    COUT            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    INT             reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    FLOAT           reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    LONG            reduce using rule 37 (bodyblock -> bodyblock imprimir .)
    RETURN          reduce using rule 37 (bodyblock -> bodyblock imprimir .)


state 237

    (38) bodyblock -> bodyblock stringappend .

    LLAVER          reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    AUTO            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    CHAR            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    STRING          reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    BOOL            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    WHILE           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    IF              reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    CLASS           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    FOR             reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    VOID            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    IDENTIFICADOR   reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    STRUCT          reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    PRINT           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    COUT            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    INT             reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    FLOAT           reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    LONG            reduce using rule 38 (bodyblock -> bodyblock stringappend .)
    RETURN          reduce using rule 38 (bodyblock -> bodyblock stringappend .)


state 238

    (99) else -> ELSE conllaves .

    $end            reduce using rule 99 (else -> ELSE conllaves .)
    AUTO            reduce using rule 99 (else -> ELSE conllaves .)
    CHAR            reduce using rule 99 (else -> ELSE conllaves .)
    STRING          reduce using rule 99 (else -> ELSE conllaves .)
    BOOL            reduce using rule 99 (else -> ELSE conllaves .)
    WHILE           reduce using rule 99 (else -> ELSE conllaves .)
    IF              reduce using rule 99 (else -> ELSE conllaves .)
    CLASS           reduce using rule 99 (else -> ELSE conllaves .)
    FOR             reduce using rule 99 (else -> ELSE conllaves .)
    VOID            reduce using rule 99 (else -> ELSE conllaves .)
    IDENTIFICADOR   reduce using rule 99 (else -> ELSE conllaves .)
    STRUCT          reduce using rule 99 (else -> ELSE conllaves .)
    PRINT           reduce using rule 99 (else -> ELSE conllaves .)
    COUT            reduce using rule 99 (else -> ELSE conllaves .)
    INT             reduce using rule 99 (else -> ELSE conllaves .)
    FLOAT           reduce using rule 99 (else -> ELSE conllaves .)
    LONG            reduce using rule 99 (else -> ELSE conllaves .)
    LLAVER          reduce using rule 99 (else -> ELSE conllaves .)
    RETURN          reduce using rule 99 (else -> ELSE conllaves .)


state 239

    (100) else -> ELSE sinllaves .

    $end            reduce using rule 100 (else -> ELSE sinllaves .)
    AUTO            reduce using rule 100 (else -> ELSE sinllaves .)
    CHAR            reduce using rule 100 (else -> ELSE sinllaves .)
    STRING          reduce using rule 100 (else -> ELSE sinllaves .)
    BOOL            reduce using rule 100 (else -> ELSE sinllaves .)
    WHILE           reduce using rule 100 (else -> ELSE sinllaves .)
    IF              reduce using rule 100 (else -> ELSE sinllaves .)
    CLASS           reduce using rule 100 (else -> ELSE sinllaves .)
    FOR             reduce using rule 100 (else -> ELSE sinllaves .)
    VOID            reduce using rule 100 (else -> ELSE sinllaves .)
    IDENTIFICADOR   reduce using rule 100 (else -> ELSE sinllaves .)
    STRUCT          reduce using rule 100 (else -> ELSE sinllaves .)
    PRINT           reduce using rule 100 (else -> ELSE sinllaves .)
    COUT            reduce using rule 100 (else -> ELSE sinllaves .)
    INT             reduce using rule 100 (else -> ELSE sinllaves .)
    FLOAT           reduce using rule 100 (else -> ELSE sinllaves .)
    LONG            reduce using rule 100 (else -> ELSE sinllaves .)
    LLAVER          reduce using rule 100 (else -> ELSE sinllaves .)
    RETURN          reduce using rule 100 (else -> ELSE sinllaves .)


state 240

    (96) elseif -> ELSE IF . LPAR condicionif RPAR conllaves else
    (97) elseif -> ELSE IF . LPAR condicionif RPAR sinllaves else

    LPAR            shift and go to state 256


state 241

    (103) conllaves -> LLAVEL bodyblock LLAVER .

    ELSE            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    $end            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    CLASS           reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    VOID            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    IDENTIFICADOR   reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    STRUCT          reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 103 (conllaves -> LLAVEL bodyblock LLAVER .)


state 242

    (140) definicion -> tipo IDENTIFICADOR PUNTOCOMA .

    LLAVER          reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 140 (definicion -> tipo IDENTIFICADOR PUNTOCOMA .)


state 243

    (156) masparametrosfuncion -> COMMA parametrosfuncion .

    RPAR            reduce using rule 156 (masparametrosfuncion -> COMMA parametrosfuncion .)


state 244

    (160) usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .

    $end            reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    AUTO            reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    CHAR            reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    STRING          reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    BOOL            reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    WHILE           reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    IF              reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    CLASS           reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    FOR             reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    VOID            reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    STRUCT          reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    PRINT           reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    COUT            reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    INT             reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    FLOAT           reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    LONG            reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    LLAVER          reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)
    RETURN          reduce using rule 160 (usarfuncionobjeto -> IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA .)


state 245

    (130) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 257


state 246

    (122) loopfor -> asign .

    RPAR            reduce using rule 122 (loopfor -> asign .)


state 247

    (123) loopfor -> unaryexp .

    RPAR            reduce using rule 123 (loopfor -> unaryexp .)


state 248

    (124) asign -> IDENTIFICADOR . MAS valor
    (125) asign -> IDENTIFICADOR . MENOS valor
    (126) asign -> IDENTIFICADOR . ASTERISCO valor
    (127) asign -> IDENTIFICADOR . SLASH valor
    (128) unaryexp -> IDENTIFICADOR . MAS MAS
    (129) unaryexp -> IDENTIFICADOR . MENOS MENOS

    MAS             shift and go to state 258
    MENOS           shift and go to state 259
    ASTERISCO       shift and go to state 260
    SLASH           shift and go to state 261


state 249

    (121) condfor -> IDENTIFICADOR comparador valor .

    PUNTOCOMA       reduce using rule 121 (condfor -> IDENTIFICADOR comparador valor .)


state 250

    (143) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . claseimplementacion
    (30) bodyblock -> bodyblock . for
    (31) bodyblock -> bodyblock . funcionclaseimpl
    (32) bodyblock -> bodyblock . arraydeclaration
    (33) bodyblock -> bodyblock . creacionobjeto
    (34) bodyblock -> bodyblock . asignarvalorobjeto
    (35) bodyblock -> bodyblock . usarfuncionobjeto
    (36) bodyblock -> bodyblock . struct
    (37) bodyblock -> bodyblock . imprimir
    (38) bodyblock -> bodyblock . stringappend
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (91) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (92) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (136) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (130) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (142) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (143) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (144) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (145) funcionclaseimpl -> .
    (131) arraydeclaration -> . tipo id PUNTOCOMA
    (132) arraydeclaration -> . tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> . tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
    (158) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (159) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (90) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (75) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
    LLAVER          shift and go to state 262
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    CLASS           shift and go to state 23
    FOR             shift and go to state 25
    VOID            shift and go to state 26
    IDENTIFICADOR   shift and go to state 24
    STRUCT          shift and go to state 27
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

  ! LLAVER          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! BOOL            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! WHILE           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IF              [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CLASS           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FOR             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRUCT          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! PRINT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! COUT            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 145 (funcionclaseimpl -> .) ]

    variable                       shift and go to state 225
    while                          shift and go to state 226
    expresionif                    shift and go to state 227
    claseimplementacion            shift and go to state 228
    for                            shift and go to state 229
    funcionclaseimpl               shift and go to state 230
    arraydeclaration               shift and go to state 231
    creacionobjeto                 shift and go to state 232
    asignarvalorobjeto             shift and go to state 233
    usarfuncionobjeto              shift and go to state 234
    struct                         shift and go to state 235
    imprimir                       shift and go to state 236
    stringappend                   shift and go to state 237
    tipo                           shift and go to state 16

state 251

    (90) struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    BOOL            reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    IF              reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    CLASS           reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    FOR             reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    VOID            reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    STRUCT          reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    PRINT           reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    COUT            reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)
    RETURN          reduce using rule 90 (struct -> STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA .)


state 252

    (147) parametrosimplementacion -> tipo IDENTIFICADOR IGUAL valor masparametrosimplementacion .

    RPAR            reduce using rule 147 (parametrosimplementacion -> tipo IDENTIFICADOR IGUAL valor masparametrosimplementacion .)


state 253

    (148) parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER masparametrosimplementacion .

    RPAR            reduce using rule 148 (parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER masparametrosimplementacion .)


state 254

    (149) parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER IGUAL . masparametrosimplementacion
    (154) masparametrosimplementacion -> . COMMA parametrosimplementacion
    (155) masparametrosimplementacion -> .

    COMMA           shift and go to state 186
    RPAR            reduce using rule 155 (masparametrosimplementacion -> .)

    masparametrosimplementacion    shift and go to state 263

state 255

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN . valor PUNTOCOMA LLAVER
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 264

state 256

    (96) elseif -> ELSE IF LPAR . condicionif RPAR conllaves else
    (97) elseif -> ELSE IF LPAR . condicionif RPAR sinllaves else
    (104) condicionif -> . initcondicion
    (105) condicionif -> . statement
    (106) initcondicion -> . varblock statement
    (107) statement -> . expresion
    (108) statement -> . EXCLAMACION boolean
    (109) statement -> . EXCLAMACION LPAR expresion RPAR
    (110) statement -> . EXCLAMACION IDENTIFICADOR
    (58) varblock -> . varblock variable
    (59) varblock -> .
    (89) expresion -> . expresion comparador expresion
    (113) expresion -> . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for CADENA resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 61
    AUTO            reduce using rule 59 (varblock -> .)
    CHAR            reduce using rule 59 (varblock -> .)
    STRING          reduce using rule 59 (varblock -> .)
    BOOL            reduce using rule 59 (varblock -> .)
    INT             reduce using rule 59 (varblock -> .)
    FLOAT           reduce using rule 59 (varblock -> .)
    LONG            reduce using rule 59 (varblock -> .)
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

  ! EXCLAMACION     [ reduce using rule 59 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 59 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 59 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 59 (varblock -> .) ]
  ! CADENA          [ reduce using rule 59 (varblock -> .) ]
  ! TRUE            [ reduce using rule 59 (varblock -> .) ]
  ! FALSE           [ reduce using rule 59 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 59 (varblock -> .) ]

    condicionif                    shift and go to state 265
    initcondicion                  shift and go to state 71
    statement                      shift and go to state 72
    varblock                       shift and go to state 73
    expresion                      shift and go to state 60
    valor                          shift and go to state 63

state 257

    (130) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 266


state 258

    (124) asign -> IDENTIFICADOR MAS . valor
    (128) unaryexp -> IDENTIFICADOR MAS . MAS
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    MAS             shift and go to state 267
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 268

state 259

    (125) asign -> IDENTIFICADOR MENOS . valor
    (129) unaryexp -> IDENTIFICADOR MENOS . MENOS
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    MENOS           shift and go to state 269
    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 270

state 260

    (126) asign -> IDENTIFICADOR ASTERISCO . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 271

state 261

    (127) asign -> IDENTIFICADOR SLASH . valor
    (81) valor -> . ENTERO
    (82) valor -> . FLOTANTE
    (83) valor -> . CHARACTER
    (84) valor -> . CADENA
    (85) valor -> . TRUE
    (86) valor -> . FALSE
    (87) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 64
    FLOTANTE        shift and go to state 65
    CHARACTER       shift and go to state 66
    CADENA          shift and go to state 67
    TRUE            shift and go to state 68
    FALSE           shift and go to state 69
    IDENTIFICADOR   shift and go to state 62

    valor                          shift and go to state 272

state 262

    (143) funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    CLASS           reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    VOID            reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    IDENTIFICADOR   reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    STRUCT          reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 143 (funcionclaseimpl -> VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER .)


state 263

    (149) parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER IGUAL masparametrosimplementacion .

    RPAR            reduce using rule 149 (parametrosimplementacion -> tipo IDENTIFICADOR CORCHETEL CORCHETER IGUAL masparametrosimplementacion .)


state 264

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor . PUNTOCOMA LLAVER

    PUNTOCOMA       shift and go to state 273


state 265

    (96) elseif -> ELSE IF LPAR condicionif . RPAR conllaves else
    (97) elseif -> ELSE IF LPAR condicionif . RPAR sinllaves else

    RPAR            shift and go to state 274


state 266

    (130) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL . bodyblock LLAVER
    (26) bodyblock -> . bodyblock variable
    (27) bodyblock -> . bodyblock while
    (28) bodyblock -> . bodyblock expresionif
    (29) bodyblock -> . bodyblock claseimplementacion
    (30) bodyblock -> . bodyblock for
    (31) bodyblock -> . bodyblock funcionclaseimpl
    (32) bodyblock -> . bodyblock arraydeclaration
    (33) bodyblock -> . bodyblock creacionobjeto
    (34) bodyblock -> . bodyblock asignarvalorobjeto
    (35) bodyblock -> . bodyblock usarfuncionobjeto
    (36) bodyblock -> . bodyblock struct
    (37) bodyblock -> . bodyblock imprimir
    (38) bodyblock -> . bodyblock stringappend
    (39) bodyblock -> .

    LLAVER          reduce using rule 39 (bodyblock -> .)
    AUTO            reduce using rule 39 (bodyblock -> .)
    CHAR            reduce using rule 39 (bodyblock -> .)
    STRING          reduce using rule 39 (bodyblock -> .)
    BOOL            reduce using rule 39 (bodyblock -> .)
    WHILE           reduce using rule 39 (bodyblock -> .)
    IF              reduce using rule 39 (bodyblock -> .)
    CLASS           reduce using rule 39 (bodyblock -> .)
    FOR             reduce using rule 39 (bodyblock -> .)
    VOID            reduce using rule 39 (bodyblock -> .)
    IDENTIFICADOR   reduce using rule 39 (bodyblock -> .)
    STRUCT          reduce using rule 39 (bodyblock -> .)
    PRINT           reduce using rule 39 (bodyblock -> .)
    COUT            reduce using rule 39 (bodyblock -> .)
    INT             reduce using rule 39 (bodyblock -> .)
    FLOAT           reduce using rule 39 (bodyblock -> .)
    LONG            reduce using rule 39 (bodyblock -> .)

    bodyblock                      shift and go to state 275

state 267

    (128) unaryexp -> IDENTIFICADOR MAS MAS .

    RPAR            reduce using rule 128 (unaryexp -> IDENTIFICADOR MAS MAS .)


state 268

    (124) asign -> IDENTIFICADOR MAS valor .

    RPAR            reduce using rule 124 (asign -> IDENTIFICADOR MAS valor .)


state 269

    (129) unaryexp -> IDENTIFICADOR MENOS MENOS .

    RPAR            reduce using rule 129 (unaryexp -> IDENTIFICADOR MENOS MENOS .)


state 270

    (125) asign -> IDENTIFICADOR MENOS valor .

    RPAR            reduce using rule 125 (asign -> IDENTIFICADOR MENOS valor .)


state 271

    (126) asign -> IDENTIFICADOR ASTERISCO valor .

    RPAR            reduce using rule 126 (asign -> IDENTIFICADOR ASTERISCO valor .)


state 272

    (127) asign -> IDENTIFICADOR SLASH valor .

    RPAR            reduce using rule 127 (asign -> IDENTIFICADOR SLASH valor .)


state 273

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA . LLAVER

    LLAVER          shift and go to state 276


state 274

    (96) elseif -> ELSE IF LPAR condicionif RPAR . conllaves else
    (97) elseif -> ELSE IF LPAR condicionif RPAR . sinllaves else
    (103) conllaves -> . LLAVEL bodyblock LLAVER
    (101) sinllaves -> . while
    (102) sinllaves -> . variable
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVEL          shift and go to state 160
    WHILE           shift and go to state 21
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 277
    sinllaves                      shift and go to state 278
    while                          shift and go to state 161
    variable                       shift and go to state 162
    tipo                           shift and go to state 118

state 275

    (130) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock . LLAVER
    (26) bodyblock -> bodyblock . variable
    (27) bodyblock -> bodyblock . while
    (28) bodyblock -> bodyblock . expresionif
    (29) bodyblock -> bodyblock . claseimplementacion
    (30) bodyblock -> bodyblock . for
    (31) bodyblock -> bodyblock . funcionclaseimpl
    (32) bodyblock -> bodyblock . arraydeclaration
    (33) bodyblock -> bodyblock . creacionobjeto
    (34) bodyblock -> bodyblock . asignarvalorobjeto
    (35) bodyblock -> bodyblock . usarfuncionobjeto
    (36) bodyblock -> bodyblock . struct
    (37) bodyblock -> bodyblock . imprimir
    (38) bodyblock -> bodyblock . stringappend
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (91) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (92) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (136) claseimplementacion -> . CLASS IDENTIFICADOR LLAVEL bloqueclase LLAVER
    (130) for -> . FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER
    (142) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER
    (143) funcionclaseimpl -> . VOID IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock LLAVER
    (144) funcionclaseimpl -> . tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR PUNTOCOMA
    (145) funcionclaseimpl -> .
    (131) arraydeclaration -> . tipo id PUNTOCOMA
    (132) arraydeclaration -> . tipo id IGUAL LLAVEL arraydata LLAVER PUNTOCOMA
    (133) arraydeclaration -> . tipo id IGUAL LLAVEL LLAVER PUNTOCOMA
    (158) creacionobjeto -> . IDENTIFICADOR IDENTIFICADOR PUNTOCOMA
    (159) asignarvalorobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (160) usarfuncionobjeto -> . IDENTIFICADOR PUNTO IDENTIFICADOR LPAR parametrosfuncion RPAR PUNTOCOMA
    (90) struct -> . STRUCT IDENTIFICADOR LLAVEL varblock LLAVER IDENTIFICADOR PUNTOCOMA
    (23) imprimir -> . PRINT LPAR valor RPAR
    (24) imprimir -> . COUT MENOR MENOR valor
    (25) imprimir -> . COUT MENOR MENOR variable
    (75) stringappend -> . IDENTIFICADOR PUNTO APPEND LPAR stringdata RPAR
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

  ! shift/reduce conflict for LLAVER resolved as shift
  ! shift/reduce conflict for AUTO resolved as shift
  ! shift/reduce conflict for CHAR resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for BOOL resolved as shift
  ! shift/reduce conflict for WHILE resolved as shift
  ! shift/reduce conflict for IF resolved as shift
  ! shift/reduce conflict for CLASS resolved as shift
  ! shift/reduce conflict for FOR resolved as shift
  ! shift/reduce conflict for VOID resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
  ! shift/reduce conflict for STRUCT resolved as shift
  ! shift/reduce conflict for PRINT resolved as shift
  ! shift/reduce conflict for COUT resolved as shift
  ! shift/reduce conflict for INT resolved as shift
  ! shift/reduce conflict for FLOAT resolved as shift
  ! shift/reduce conflict for LONG resolved as shift
    LLAVER          shift and go to state 279
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    WHILE           shift and go to state 21
    IF              shift and go to state 22
    CLASS           shift and go to state 23
    FOR             shift and go to state 25
    VOID            shift and go to state 26
    IDENTIFICADOR   shift and go to state 24
    STRUCT          shift and go to state 27
    PRINT           shift and go to state 28
    COUT            shift and go to state 29
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

  ! LLAVER          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! AUTO            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CHAR            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRING          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! BOOL            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! WHILE           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IF              [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! CLASS           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FOR             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! VOID            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! STRUCT          [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! PRINT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! COUT            [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! INT             [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! FLOAT           [ reduce using rule 145 (funcionclaseimpl -> .) ]
  ! LONG            [ reduce using rule 145 (funcionclaseimpl -> .) ]

    variable                       shift and go to state 225
    while                          shift and go to state 226
    expresionif                    shift and go to state 227
    claseimplementacion            shift and go to state 228
    for                            shift and go to state 229
    funcionclaseimpl               shift and go to state 230
    arraydeclaration               shift and go to state 231
    creacionobjeto                 shift and go to state 232
    asignarvalorobjeto             shift and go to state 233
    usarfuncionobjeto              shift and go to state 234
    struct                         shift and go to state 235
    imprimir                       shift and go to state 236
    stringappend                   shift and go to state 237
    tipo                           shift and go to state 16

state 276

    (142) funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .

    $end            reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    AUTO            reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    CHAR            reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    STRING          reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    BOOL            reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    WHILE           reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    IF              reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    CLASS           reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    FOR             reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    VOID            reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    IDENTIFICADOR   reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    STRUCT          reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    PRINT           reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    COUT            reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    INT             reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    FLOAT           reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    LONG            reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    LLAVER          reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)
    RETURN          reduce using rule 142 (funcionclaseimpl -> tipo IDENTIFICADOR LPAR parametrosimplementacion RPAR LLAVEL bodyblock RETURN valor PUNTOCOMA LLAVER .)


state 277

    (96) elseif -> ELSE IF LPAR condicionif RPAR conllaves . else
    (99) else -> . ELSE conllaves
    (100) else -> . ELSE sinllaves

    ELSE            shift and go to state 280

    else                           shift and go to state 281

state 278

    (97) elseif -> ELSE IF LPAR condicionif RPAR sinllaves . else
    (99) else -> . ELSE conllaves
    (100) else -> . ELSE sinllaves

    ELSE            shift and go to state 280

    else                           shift and go to state 282

state 279

    (130) for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    STRING          reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    BOOL            reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    IF              reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    CLASS           reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    FOR             reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    VOID            reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    IDENTIFICADOR   reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    STRUCT          reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    PRINT           reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    COUT            reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)
    RETURN          reduce using rule 130 (for -> FOR LPAR initfor PUNTOCOMA condfor PUNTOCOMA loopfor RPAR LLAVEL bodyblock LLAVER .)


state 280

    (99) else -> ELSE . conllaves
    (100) else -> ELSE . sinllaves
    (103) conllaves -> . LLAVEL bodyblock LLAVER
    (101) sinllaves -> . while
    (102) sinllaves -> . variable
    (88) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (65) variable -> . tipo id IGUAL numero PUNTOCOMA
    (66) variable -> . tipo id PUNTOCOMA
    (67) variable -> . AUTO id IGUAL valor PUNTOCOMA
    (68) variable -> . AUTO id PUNTOCOMA
    (69) variable -> . CHAR id IGUAL CHARACTER PUNTOCOMA
    (70) variable -> . STRING id IGUAL CADENA PUNTOCOMA
    (71) variable -> . STRING id IGUAL stringappend PUNTOCOMA
    (72) variable -> . STRING id IGUAL concat PUNTOCOMA
    (73) variable -> . STRING id IGUAL booleanstring PUNTOCOMA
    (74) variable -> . BOOL id IGUAL operacionbool PUNTOCOMA
    (17) tipo -> . INT
    (18) tipo -> . FLOAT
    (19) tipo -> . LONG
    (20) tipo -> . AUTO
    (21) tipo -> . STRING
    (22) tipo -> . CHAR

    LLAVEL          shift and go to state 160
    WHILE           shift and go to state 21
    AUTO            shift and go to state 17
    CHAR            shift and go to state 18
    STRING          shift and go to state 19
    BOOL            shift and go to state 20
    INT             shift and go to state 30
    FLOAT           shift and go to state 31
    LONG            shift and go to state 32

    conllaves                      shift and go to state 238
    sinllaves                      shift and go to state 239
    while                          shift and go to state 161
    variable                       shift and go to state 162
    tipo                           shift and go to state 118

state 281

    (96) elseif -> ELSE IF LPAR condicionif RPAR conllaves else .

    $end            reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    AUTO            reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    CHAR            reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    STRING          reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    BOOL            reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    WHILE           reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    IF              reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    CLASS           reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FOR             reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    VOID            reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    IDENTIFICADOR   reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    STRUCT          reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    PRINT           reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    COUT            reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    INT             reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FLOAT           reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LONG            reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LLAVER          reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    RETURN          reduce using rule 96 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)


state 282

    (97) elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .

    $end            reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    AUTO            reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    CHAR            reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    STRING          reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    BOOL            reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    WHILE           reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    IF              reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    CLASS           reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    FOR             reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    VOID            reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    IDENTIFICADOR   reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    STRUCT          reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    PRINT           reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    COUT            reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    INT             reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    FLOAT           reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LONG            reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LLAVER          reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    RETURN          reduce using rule 97 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for AUTO in state 2 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 2 resolved as shift
WARNING: shift/reduce conflict for STRING in state 2 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 2 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 2 resolved as shift
WARNING: shift/reduce conflict for IF in state 2 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 2 resolved as shift
WARNING: shift/reduce conflict for FOR in state 2 resolved as shift
WARNING: shift/reduce conflict for VOID in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 2 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 2 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 2 resolved as shift
WARNING: shift/reduce conflict for COUT in state 2 resolved as shift
WARNING: shift/reduce conflict for INT in state 2 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 2 resolved as shift
WARNING: shift/reduce conflict for LONG in state 2 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 17 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 18 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 19 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 41 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 41 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 41 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 41 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 41 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 41 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 41 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 41 resolved as shift
WARNING: shift/reduce conflict for PUNTOCOMA in state 96 resolved as shift
WARNING: shift/reduce conflict for MAS in state 96 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 119 resolved as shift
WARNING: shift/reduce conflict for VOID in state 119 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 119 resolved as shift
WARNING: shift/reduce conflict for VOID in state 119 resolved as shift
WARNING: shift/reduce conflict for INT in state 119 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 119 resolved as shift
WARNING: shift/reduce conflict for LONG in state 119 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 119 resolved as shift
WARNING: shift/reduce conflict for STRING in state 119 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 119 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 152 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 152 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 152 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 152 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 169 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 196 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 196 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 196 resolved as shift
WARNING: shift/reduce conflict for STRING in state 196 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 196 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 196 resolved as shift
WARNING: shift/reduce conflict for IF in state 196 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 196 resolved as shift
WARNING: shift/reduce conflict for FOR in state 196 resolved as shift
WARNING: shift/reduce conflict for VOID in state 196 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 196 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 196 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 196 resolved as shift
WARNING: shift/reduce conflict for COUT in state 196 resolved as shift
WARNING: shift/reduce conflict for INT in state 196 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 196 resolved as shift
WARNING: shift/reduce conflict for LONG in state 196 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 203 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 203 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 203 resolved as shift
WARNING: shift/reduce conflict for STRING in state 203 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 203 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 203 resolved as shift
WARNING: shift/reduce conflict for IF in state 203 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 203 resolved as shift
WARNING: shift/reduce conflict for FOR in state 203 resolved as shift
WARNING: shift/reduce conflict for VOID in state 203 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 203 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 203 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 203 resolved as shift
WARNING: shift/reduce conflict for COUT in state 203 resolved as shift
WARNING: shift/reduce conflict for INT in state 203 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 203 resolved as shift
WARNING: shift/reduce conflict for LONG in state 203 resolved as shift
WARNING: shift/reduce conflict for RETURN in state 223 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 223 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 223 resolved as shift
WARNING: shift/reduce conflict for STRING in state 223 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 223 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 223 resolved as shift
WARNING: shift/reduce conflict for IF in state 223 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 223 resolved as shift
WARNING: shift/reduce conflict for FOR in state 223 resolved as shift
WARNING: shift/reduce conflict for VOID in state 223 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 223 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 223 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 223 resolved as shift
WARNING: shift/reduce conflict for COUT in state 223 resolved as shift
WARNING: shift/reduce conflict for INT in state 223 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 223 resolved as shift
WARNING: shift/reduce conflict for LONG in state 223 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 250 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 250 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 250 resolved as shift
WARNING: shift/reduce conflict for STRING in state 250 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 250 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 250 resolved as shift
WARNING: shift/reduce conflict for IF in state 250 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 250 resolved as shift
WARNING: shift/reduce conflict for FOR in state 250 resolved as shift
WARNING: shift/reduce conflict for VOID in state 250 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 250 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 250 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 250 resolved as shift
WARNING: shift/reduce conflict for COUT in state 250 resolved as shift
WARNING: shift/reduce conflict for INT in state 250 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 250 resolved as shift
WARNING: shift/reduce conflict for LONG in state 250 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 256 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 256 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 256 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 256 resolved as shift
WARNING: shift/reduce conflict for CADENA in state 256 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 256 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 256 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 256 resolved as shift
WARNING: shift/reduce conflict for LLAVER in state 275 resolved as shift
WARNING: shift/reduce conflict for AUTO in state 275 resolved as shift
WARNING: shift/reduce conflict for CHAR in state 275 resolved as shift
WARNING: shift/reduce conflict for STRING in state 275 resolved as shift
WARNING: shift/reduce conflict for BOOL in state 275 resolved as shift
WARNING: shift/reduce conflict for WHILE in state 275 resolved as shift
WARNING: shift/reduce conflict for IF in state 275 resolved as shift
WARNING: shift/reduce conflict for CLASS in state 275 resolved as shift
WARNING: shift/reduce conflict for FOR in state 275 resolved as shift
WARNING: shift/reduce conflict for VOID in state 275 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 275 resolved as shift
WARNING: shift/reduce conflict for STRUCT in state 275 resolved as shift
WARNING: shift/reduce conflict for PRINT in state 275 resolved as shift
WARNING: shift/reduce conflict for COUT in state 275 resolved as shift
WARNING: shift/reduce conflict for INT in state 275 resolved as shift
WARNING: shift/reduce conflict for FLOAT in state 275 resolved as shift
WARNING: shift/reduce conflict for LONG in state 275 resolved as shift
WARNING: reduce/reduce conflict in state 0 resolved using rule (body -> <empty>)
WARNING: rejected rule (bodyblock -> <empty>) in state 0
WARNING: reduce/reduce conflict in state 3 resolved using rule (body -> bodyblock variable)
WARNING: rejected rule (bodyblock -> bodyblock variable) in state 3
WARNING: reduce/reduce conflict in state 4 resolved using rule (body -> bodyblock while)
WARNING: rejected rule (bodyblock -> bodyblock while) in state 4
WARNING: reduce/reduce conflict in state 5 resolved using rule (body -> bodyblock expresionif)
WARNING: rejected rule (bodyblock -> bodyblock expresionif) in state 5
WARNING: reduce/reduce conflict in state 6 resolved using rule (body -> bodyblock claseimplementacion)
WARNING: rejected rule (bodyblock -> bodyblock claseimplementacion) in state 6
WARNING: reduce/reduce conflict in state 7 resolved using rule (body -> bodyblock for)
WARNING: rejected rule (bodyblock -> bodyblock for) in state 7
WARNING: reduce/reduce conflict in state 8 resolved using rule (body -> bodyblock funcionclaseimpl)
WARNING: rejected rule (bodyblock -> bodyblock funcionclaseimpl) in state 8
WARNING: reduce/reduce conflict in state 9 resolved using rule (body -> bodyblock arraydeclaration)
WARNING: rejected rule (bodyblock -> bodyblock arraydeclaration) in state 9
WARNING: reduce/reduce conflict in state 10 resolved using rule (body -> bodyblock creacionobjeto)
WARNING: rejected rule (bodyblock -> bodyblock creacionobjeto) in state 10
WARNING: reduce/reduce conflict in state 11 resolved using rule (body -> bodyblock asignarvalorobjeto)
WARNING: rejected rule (bodyblock -> bodyblock asignarvalorobjeto) in state 11
WARNING: reduce/reduce conflict in state 12 resolved using rule (body -> bodyblock usarfuncionobjeto)
WARNING: rejected rule (bodyblock -> bodyblock usarfuncionobjeto) in state 12
WARNING: reduce/reduce conflict in state 13 resolved using rule (body -> bodyblock struct)
WARNING: rejected rule (bodyblock -> bodyblock struct) in state 13
WARNING: reduce/reduce conflict in state 14 resolved using rule (body -> bodyblock imprimir)
WARNING: rejected rule (bodyblock -> bodyblock imprimir) in state 14
WARNING: reduce/reduce conflict in state 15 resolved using rule (body -> bodyblock stringappend)
WARNING: rejected rule (bodyblock -> bodyblock stringappend) in state 15
WARNING: reduce/reduce conflict in state 51 resolved using rule (variable -> tipo id PUNTOCOMA)
WARNING: rejected rule (arraydeclaration -> tipo id PUNTOCOMA) in state 51
WARNING: reduce/reduce conflict in state 119 resolved using rule (definicion -> <empty>)
WARNING: rejected rule (funcionclaseimpl -> <empty>) in state 119
WARNING: reduce/reduce conflict in state 158 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 158
WARNING: reduce/reduce conflict in state 159 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 159
WARNING: reduce/reduce conflict in state 169 resolved using rule (valor -> IDENTIFICADOR)
WARNING: rejected rule (masparametrosfuncion -> <empty>) in state 169
WARNING: Rule (arraydeclaration -> tipo id PUNTOCOMA) is never reduced
WARNING: Rule (elseif -> <empty>) is never reduced
