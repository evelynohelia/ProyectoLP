Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Unused terminals:

    AND
    ASTERISCO
    BACKSLASH
    BOOL
    CIRCUNFLEJO
    CLASS
    COMADOBLE
    COMASIMPLE
    COMENTARIO
    COMMA
    CORCHETEL
    CORCHETER
    DOBLEPUNTO
    FOR
    INTERROGACION
    MAS
    MENOS
    NEW
    NULLPOINTER
    NUMERAL
    PIPE
    PORCENTAJE
    PRIVATE
    PROTECTED
    PUBLIC
    PUNTERO
    PUNTO
    RETURN
    SLASH
    STATIC
    STRUCT
    THEN
    VIRGUILA

Grammar

Rule 0     S' -> body
Rule 1     body -> variable
Rule 2     body -> while
Rule 3     body -> expresionif
Rule 4     body -> imprimir
Rule 5     body -> <empty>
Rule 6     imprimir -> PRINT LPAR valor RPAR
Rule 7     bodyblock -> bodyblock variable
Rule 8     bodyblock -> bodyblock while
Rule 9     bodyblock -> expresionif
Rule 10    bodyblock -> <empty>
Rule 11    varblock -> varblock variable
Rule 12    varblock -> <empty>
Rule 13    variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
Rule 14    variable -> AUTO IDENTIFICADOR PUNTOCOMA
Rule 15    variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
Rule 16    variable -> numerotipo IDENTIFICADOR PUNTOCOMA
Rule 17    variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
Rule 18    numerotipo -> INT
Rule 19    numerotipo -> FLOAT
Rule 20    numerotipo -> LONG
Rule 21    numero -> ENTERO
Rule 22    numero -> FLOTANTE
Rule 23    tipo -> INT
Rule 24    tipo -> FLOAT
Rule 25    tipo -> LONG
Rule 26    tipo -> AUTO
Rule 27    tipo -> CHAR
Rule 28    tipo -> VOID
Rule 29    valor -> ENTERO
Rule 30    valor -> FLOTANTE
Rule 31    valor -> CHARACTER
Rule 32    valor -> STRING
Rule 33    valor -> TRUE
Rule 34    valor -> FALSE
Rule 35    valor -> IDENTIFICADOR
Rule 36    while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
Rule 37    expresion -> expresion comparador expresion
Rule 38    expresionif -> IF LPAR condicionif RPAR conllaves expresionpos
Rule 39    expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos
Rule 40    expresionpos -> else
Rule 41    expresionpos -> elseif
Rule 42    expresionpos -> <empty>
Rule 43    elseif -> ELSE IF LPAR condicionif RPAR conllaves else
Rule 44    elseif -> ELSE IF LPAR condicionif RPAR sinllaves else
Rule 45    elseif -> <empty>
Rule 46    else -> ELSE conllaves
Rule 47    else -> ELSE sinllaves
Rule 48    sinllaves -> while
Rule 49    sinllaves -> variable
Rule 50    conllaves -> LLAVEL bodyblock LLAVER
Rule 51    condicionif -> initcondicion
Rule 52    condicionif -> statement
Rule 53    initcondicion -> varblock statement
Rule 54    statement -> expresion
Rule 55    statement -> EXCLAMACION boolean
Rule 56    statement -> EXCLAMACION LPAR expresion RPAR
Rule 57    statement -> EXCLAMACION IDENTIFICADOR
Rule 58    boolean -> TRUE
Rule 59    boolean -> FALSE
Rule 60    expresion -> valor
Rule 61    comparador -> IGUAL IGUAL
Rule 62    comparador -> MENOR
Rule 63    comparador -> MAYOR
Rule 64    comparador -> MENOR IGUAL
Rule 65    comparador -> MAYOR IGUAL
Rule 66    comparador -> EXCLAMACION IGUAL

Terminals, with rules where they appear

AND                  : 
ASTERISCO            : 
AUTO                 : 13 14 26
BACKSLASH            : 
BOOL                 : 
CHAR                 : 17 27
CHARACTER            : 17 31
CIRCUNFLEJO          : 
CLASS                : 
COMADOBLE            : 
COMASIMPLE           : 
COMENTARIO           : 
COMMA                : 
CORCHETEL            : 
CORCHETER            : 
DOBLEPUNTO           : 
ELSE                 : 43 44 46 47
ENTERO               : 21 29
EXCLAMACION          : 55 56 57 66
FALSE                : 34 59
FLOAT                : 19 24
FLOTANTE             : 22 30
FOR                  : 
IDENTIFICADOR        : 13 14 15 16 17 35 57
IF                   : 38 39 43 44
IGUAL                : 13 15 17 61 61 64 65 66
INT                  : 18 23
INTERROGACION        : 
LLAVEL               : 36 50
LLAVER               : 36 50
LONG                 : 20 25
LPAR                 : 6 36 38 39 43 44 56
MAS                  : 
MAYOR                : 63 65
MENOR                : 62 64
MENOS                : 
NEW                  : 
NULLPOINTER          : 
NUMERAL              : 
PIPE                 : 
PORCENTAJE           : 
PRINT                : 6
PRIVATE              : 
PROTECTED            : 
PUBLIC               : 
PUNTERO              : 
PUNTO                : 
PUNTOCOMA            : 13 14 15 16 17
RETURN               : 
RPAR                 : 6 36 38 39 43 44 56
SLASH                : 
STATIC               : 
STRING               : 32
STRUCT               : 
THEN                 : 
TRUE                 : 33 58
VIRGUILA             : 
VOID                 : 28
WHILE                : 36
error                : 

Nonterminals, with rules where they appear

body                 : 0
bodyblock            : 7 8 36 50
boolean              : 55
comparador           : 37
condicionif          : 38 39 43 44
conllaves            : 38 43 46
else                 : 40 43 44
elseif               : 41
expresion            : 37 37 54 56
expresionif          : 3 9
expresionpos         : 38 39
imprimir             : 4
initcondicion        : 51
numero               : 15
numerotipo           : 15 16
sinllaves            : 39 44 47
statement            : 36 52 53
tipo                 : 
valor                : 6 13 60
varblock             : 11 53
variable             : 1 7 11 49
while                : 2 8 48

Parsing method: LALR

state 0

    (0) S' -> . body
    (1) body -> . variable
    (2) body -> . while
    (3) body -> . expresionif
    (4) body -> . imprimir
    (5) body -> .
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (36) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (38) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (39) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos
    (6) imprimir -> . PRINT LPAR valor RPAR
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG

    $end            reduce using rule 5 (body -> .)
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    WHILE           shift and go to state 9
    IF              shift and go to state 10
    PRINT           shift and go to state 11
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14

    body                           shift and go to state 1
    variable                       shift and go to state 2
    while                          shift and go to state 3
    expresionif                    shift and go to state 4
    imprimir                       shift and go to state 5
    numerotipo                     shift and go to state 7

state 1

    (0) S' -> body .



state 2

    (1) body -> variable .

    $end            reduce using rule 1 (body -> variable .)


state 3

    (2) body -> while .

    $end            reduce using rule 2 (body -> while .)


state 4

    (3) body -> expresionif .

    $end            reduce using rule 3 (body -> expresionif .)


state 5

    (4) body -> imprimir .

    $end            reduce using rule 4 (body -> imprimir .)


state 6

    (13) variable -> AUTO . IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> AUTO . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 15


state 7

    (15) variable -> numerotipo . IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> numerotipo . IDENTIFICADOR PUNTOCOMA

    IDENTIFICADOR   shift and go to state 16


state 8

    (17) variable -> CHAR . IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA

    IDENTIFICADOR   shift and go to state 17


state 9

    (36) while -> WHILE . LPAR statement RPAR LLAVEL bodyblock LLAVER

    LPAR            shift and go to state 18


state 10

    (38) expresionif -> IF . LPAR condicionif RPAR conllaves expresionpos
    (39) expresionif -> IF . LPAR condicionif RPAR sinllaves expresionpos

    LPAR            shift and go to state 19


state 11

    (6) imprimir -> PRINT . LPAR valor RPAR

    LPAR            shift and go to state 20


state 12

    (18) numerotipo -> INT .

    IDENTIFICADOR   reduce using rule 18 (numerotipo -> INT .)


state 13

    (19) numerotipo -> FLOAT .

    IDENTIFICADOR   reduce using rule 19 (numerotipo -> FLOAT .)


state 14

    (20) numerotipo -> LONG .

    IDENTIFICADOR   reduce using rule 20 (numerotipo -> LONG .)


state 15

    (13) variable -> AUTO IDENTIFICADOR . IGUAL valor PUNTOCOMA
    (14) variable -> AUTO IDENTIFICADOR . PUNTOCOMA

    IGUAL           shift and go to state 21
    PUNTOCOMA       shift and go to state 22


state 16

    (15) variable -> numerotipo IDENTIFICADOR . IGUAL numero PUNTOCOMA
    (16) variable -> numerotipo IDENTIFICADOR . PUNTOCOMA

    IGUAL           shift and go to state 23
    PUNTOCOMA       shift and go to state 24


state 17

    (17) variable -> CHAR IDENTIFICADOR . IGUAL CHARACTER PUNTOCOMA

    IGUAL           shift and go to state 25


state 18

    (36) while -> WHILE LPAR . statement RPAR LLAVEL bodyblock LLAVER
    (54) statement -> . expresion
    (55) statement -> . EXCLAMACION boolean
    (56) statement -> . EXCLAMACION LPAR expresion RPAR
    (57) statement -> . EXCLAMACION IDENTIFICADOR
    (37) expresion -> . expresion comparador expresion
    (60) expresion -> . valor
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 28
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

    statement                      shift and go to state 26
    expresion                      shift and go to state 27
    valor                          shift and go to state 30

state 19

    (38) expresionif -> IF LPAR . condicionif RPAR conllaves expresionpos
    (39) expresionif -> IF LPAR . condicionif RPAR sinllaves expresionpos
    (51) condicionif -> . initcondicion
    (52) condicionif -> . statement
    (53) initcondicion -> . varblock statement
    (54) statement -> . expresion
    (55) statement -> . EXCLAMACION boolean
    (56) statement -> . EXCLAMACION LPAR expresion RPAR
    (57) statement -> . EXCLAMACION IDENTIFICADOR
    (11) varblock -> . varblock variable
    (12) varblock -> .
    (37) expresion -> . expresion comparador expresion
    (60) expresion -> . valor
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 28
    AUTO            reduce using rule 12 (varblock -> .)
    CHAR            reduce using rule 12 (varblock -> .)
    INT             reduce using rule 12 (varblock -> .)
    FLOAT           reduce using rule 12 (varblock -> .)
    LONG            reduce using rule 12 (varblock -> .)
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

  ! EXCLAMACION     [ reduce using rule 12 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 12 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 12 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 12 (varblock -> .) ]
  ! STRING          [ reduce using rule 12 (varblock -> .) ]
  ! TRUE            [ reduce using rule 12 (varblock -> .) ]
  ! FALSE           [ reduce using rule 12 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 12 (varblock -> .) ]

    condicionif                    shift and go to state 37
    initcondicion                  shift and go to state 38
    statement                      shift and go to state 39
    varblock                       shift and go to state 40
    expresion                      shift and go to state 27
    valor                          shift and go to state 30

state 20

    (6) imprimir -> PRINT LPAR . valor RPAR
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

    valor                          shift and go to state 41

state 21

    (13) variable -> AUTO IDENTIFICADOR IGUAL . valor PUNTOCOMA
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

    valor                          shift and go to state 42

state 22

    (14) variable -> AUTO IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    EXCLAMACION     reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    CHARACTER       reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 14 (variable -> AUTO IDENTIFICADOR PUNTOCOMA .)


state 23

    (15) variable -> numerotipo IDENTIFICADOR IGUAL . numero PUNTOCOMA
    (21) numero -> . ENTERO
    (22) numero -> . FLOTANTE

    ENTERO          shift and go to state 44
    FLOTANTE        shift and go to state 45

    numero                         shift and go to state 43

state 24

    (16) variable -> numerotipo IDENTIFICADOR PUNTOCOMA .

    $end            reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    EXCLAMACION     reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    AUTO            reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    CHAR            reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    INT             reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    FLOAT           reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    LONG            reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    ENTERO          reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    FLOTANTE        reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    CHARACTER       reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    STRING          reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    TRUE            reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    FALSE           reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    ELSE            reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    LLAVER          reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)
    WHILE           reduce using rule 16 (variable -> numerotipo IDENTIFICADOR PUNTOCOMA .)


state 25

    (17) variable -> CHAR IDENTIFICADOR IGUAL . CHARACTER PUNTOCOMA

    CHARACTER       shift and go to state 46


state 26

    (36) while -> WHILE LPAR statement . RPAR LLAVEL bodyblock LLAVER

    RPAR            shift and go to state 47


state 27

    (54) statement -> expresion .
    (37) expresion -> expresion . comparador expresion
    (61) comparador -> . IGUAL IGUAL
    (62) comparador -> . MENOR
    (63) comparador -> . MAYOR
    (64) comparador -> . MENOR IGUAL
    (65) comparador -> . MAYOR IGUAL
    (66) comparador -> . EXCLAMACION IGUAL

    RPAR            reduce using rule 54 (statement -> expresion .)
    IGUAL           shift and go to state 49
    MENOR           shift and go to state 50
    MAYOR           shift and go to state 51
    EXCLAMACION     shift and go to state 52

    comparador                     shift and go to state 48

state 28

    (55) statement -> EXCLAMACION . boolean
    (56) statement -> EXCLAMACION . LPAR expresion RPAR
    (57) statement -> EXCLAMACION . IDENTIFICADOR
    (58) boolean -> . TRUE
    (59) boolean -> . FALSE

    LPAR            shift and go to state 54
    IDENTIFICADOR   shift and go to state 55
    TRUE            shift and go to state 56
    FALSE           shift and go to state 57

    boolean                        shift and go to state 53

state 29

    (35) valor -> IDENTIFICADOR .

    IGUAL           reduce using rule 35 (valor -> IDENTIFICADOR .)
    MENOR           reduce using rule 35 (valor -> IDENTIFICADOR .)
    MAYOR           reduce using rule 35 (valor -> IDENTIFICADOR .)
    EXCLAMACION     reduce using rule 35 (valor -> IDENTIFICADOR .)
    RPAR            reduce using rule 35 (valor -> IDENTIFICADOR .)
    PUNTOCOMA       reduce using rule 35 (valor -> IDENTIFICADOR .)


state 30

    (60) expresion -> valor .

    IGUAL           reduce using rule 60 (expresion -> valor .)
    MENOR           reduce using rule 60 (expresion -> valor .)
    MAYOR           reduce using rule 60 (expresion -> valor .)
    EXCLAMACION     reduce using rule 60 (expresion -> valor .)
    RPAR            reduce using rule 60 (expresion -> valor .)


state 31

    (29) valor -> ENTERO .

    IGUAL           reduce using rule 29 (valor -> ENTERO .)
    MENOR           reduce using rule 29 (valor -> ENTERO .)
    MAYOR           reduce using rule 29 (valor -> ENTERO .)
    EXCLAMACION     reduce using rule 29 (valor -> ENTERO .)
    RPAR            reduce using rule 29 (valor -> ENTERO .)
    PUNTOCOMA       reduce using rule 29 (valor -> ENTERO .)


state 32

    (30) valor -> FLOTANTE .

    IGUAL           reduce using rule 30 (valor -> FLOTANTE .)
    MENOR           reduce using rule 30 (valor -> FLOTANTE .)
    MAYOR           reduce using rule 30 (valor -> FLOTANTE .)
    EXCLAMACION     reduce using rule 30 (valor -> FLOTANTE .)
    RPAR            reduce using rule 30 (valor -> FLOTANTE .)
    PUNTOCOMA       reduce using rule 30 (valor -> FLOTANTE .)


state 33

    (31) valor -> CHARACTER .

    IGUAL           reduce using rule 31 (valor -> CHARACTER .)
    MENOR           reduce using rule 31 (valor -> CHARACTER .)
    MAYOR           reduce using rule 31 (valor -> CHARACTER .)
    EXCLAMACION     reduce using rule 31 (valor -> CHARACTER .)
    RPAR            reduce using rule 31 (valor -> CHARACTER .)
    PUNTOCOMA       reduce using rule 31 (valor -> CHARACTER .)


state 34

    (32) valor -> STRING .

    IGUAL           reduce using rule 32 (valor -> STRING .)
    MENOR           reduce using rule 32 (valor -> STRING .)
    MAYOR           reduce using rule 32 (valor -> STRING .)
    EXCLAMACION     reduce using rule 32 (valor -> STRING .)
    RPAR            reduce using rule 32 (valor -> STRING .)
    PUNTOCOMA       reduce using rule 32 (valor -> STRING .)


state 35

    (33) valor -> TRUE .

    IGUAL           reduce using rule 33 (valor -> TRUE .)
    MENOR           reduce using rule 33 (valor -> TRUE .)
    MAYOR           reduce using rule 33 (valor -> TRUE .)
    EXCLAMACION     reduce using rule 33 (valor -> TRUE .)
    RPAR            reduce using rule 33 (valor -> TRUE .)
    PUNTOCOMA       reduce using rule 33 (valor -> TRUE .)


state 36

    (34) valor -> FALSE .

    IGUAL           reduce using rule 34 (valor -> FALSE .)
    MENOR           reduce using rule 34 (valor -> FALSE .)
    MAYOR           reduce using rule 34 (valor -> FALSE .)
    EXCLAMACION     reduce using rule 34 (valor -> FALSE .)
    RPAR            reduce using rule 34 (valor -> FALSE .)
    PUNTOCOMA       reduce using rule 34 (valor -> FALSE .)


state 37

    (38) expresionif -> IF LPAR condicionif . RPAR conllaves expresionpos
    (39) expresionif -> IF LPAR condicionif . RPAR sinllaves expresionpos

    RPAR            shift and go to state 58


state 38

    (51) condicionif -> initcondicion .

    RPAR            reduce using rule 51 (condicionif -> initcondicion .)


state 39

    (52) condicionif -> statement .

    RPAR            reduce using rule 52 (condicionif -> statement .)


state 40

    (53) initcondicion -> varblock . statement
    (11) varblock -> varblock . variable
    (54) statement -> . expresion
    (55) statement -> . EXCLAMACION boolean
    (56) statement -> . EXCLAMACION LPAR expresion RPAR
    (57) statement -> . EXCLAMACION IDENTIFICADOR
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (37) expresion -> . expresion comparador expresion
    (60) expresion -> . valor
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

    EXCLAMACION     shift and go to state 28
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

    statement                      shift and go to state 59
    variable                       shift and go to state 60
    expresion                      shift and go to state 27
    valor                          shift and go to state 30
    numerotipo                     shift and go to state 7

state 41

    (6) imprimir -> PRINT LPAR valor . RPAR

    RPAR            shift and go to state 61


state 42

    (13) variable -> AUTO IDENTIFICADOR IGUAL valor . PUNTOCOMA

    PUNTOCOMA       shift and go to state 62


state 43

    (15) variable -> numerotipo IDENTIFICADOR IGUAL numero . PUNTOCOMA

    PUNTOCOMA       shift and go to state 63


state 44

    (21) numero -> ENTERO .

    PUNTOCOMA       reduce using rule 21 (numero -> ENTERO .)


state 45

    (22) numero -> FLOTANTE .

    PUNTOCOMA       reduce using rule 22 (numero -> FLOTANTE .)


state 46

    (17) variable -> CHAR IDENTIFICADOR IGUAL CHARACTER . PUNTOCOMA

    PUNTOCOMA       shift and go to state 64


state 47

    (36) while -> WHILE LPAR statement RPAR . LLAVEL bodyblock LLAVER

    LLAVEL          shift and go to state 65


state 48

    (37) expresion -> expresion comparador . expresion
    (37) expresion -> . expresion comparador expresion
    (60) expresion -> . valor
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

    expresion                      shift and go to state 66
    valor                          shift and go to state 30

state 49

    (61) comparador -> IGUAL . IGUAL

    IGUAL           shift and go to state 67


state 50

    (62) comparador -> MENOR .
    (64) comparador -> MENOR . IGUAL

    ENTERO          reduce using rule 62 (comparador -> MENOR .)
    FLOTANTE        reduce using rule 62 (comparador -> MENOR .)
    CHARACTER       reduce using rule 62 (comparador -> MENOR .)
    STRING          reduce using rule 62 (comparador -> MENOR .)
    TRUE            reduce using rule 62 (comparador -> MENOR .)
    FALSE           reduce using rule 62 (comparador -> MENOR .)
    IDENTIFICADOR   reduce using rule 62 (comparador -> MENOR .)
    IGUAL           shift and go to state 68


state 51

    (63) comparador -> MAYOR .
    (65) comparador -> MAYOR . IGUAL

    ENTERO          reduce using rule 63 (comparador -> MAYOR .)
    FLOTANTE        reduce using rule 63 (comparador -> MAYOR .)
    CHARACTER       reduce using rule 63 (comparador -> MAYOR .)
    STRING          reduce using rule 63 (comparador -> MAYOR .)
    TRUE            reduce using rule 63 (comparador -> MAYOR .)
    FALSE           reduce using rule 63 (comparador -> MAYOR .)
    IDENTIFICADOR   reduce using rule 63 (comparador -> MAYOR .)
    IGUAL           shift and go to state 69


state 52

    (66) comparador -> EXCLAMACION . IGUAL

    IGUAL           shift and go to state 70


state 53

    (55) statement -> EXCLAMACION boolean .

    RPAR            reduce using rule 55 (statement -> EXCLAMACION boolean .)


state 54

    (56) statement -> EXCLAMACION LPAR . expresion RPAR
    (37) expresion -> . expresion comparador expresion
    (60) expresion -> . valor
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

    expresion                      shift and go to state 71
    valor                          shift and go to state 30

state 55

    (57) statement -> EXCLAMACION IDENTIFICADOR .

    RPAR            reduce using rule 57 (statement -> EXCLAMACION IDENTIFICADOR .)


state 56

    (58) boolean -> TRUE .

    RPAR            reduce using rule 58 (boolean -> TRUE .)


state 57

    (59) boolean -> FALSE .

    RPAR            reduce using rule 59 (boolean -> FALSE .)


state 58

    (38) expresionif -> IF LPAR condicionif RPAR . conllaves expresionpos
    (39) expresionif -> IF LPAR condicionif RPAR . sinllaves expresionpos
    (50) conllaves -> . LLAVEL bodyblock LLAVER
    (48) sinllaves -> . while
    (49) sinllaves -> . variable
    (36) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG

    LLAVEL          shift and go to state 74
    WHILE           shift and go to state 9
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14

    conllaves                      shift and go to state 72
    sinllaves                      shift and go to state 73
    while                          shift and go to state 75
    variable                       shift and go to state 76
    numerotipo                     shift and go to state 7

state 59

    (53) initcondicion -> varblock statement .

    RPAR            reduce using rule 53 (initcondicion -> varblock statement .)


state 60

    (11) varblock -> varblock variable .

    EXCLAMACION     reduce using rule 11 (varblock -> varblock variable .)
    AUTO            reduce using rule 11 (varblock -> varblock variable .)
    CHAR            reduce using rule 11 (varblock -> varblock variable .)
    INT             reduce using rule 11 (varblock -> varblock variable .)
    FLOAT           reduce using rule 11 (varblock -> varblock variable .)
    LONG            reduce using rule 11 (varblock -> varblock variable .)
    ENTERO          reduce using rule 11 (varblock -> varblock variable .)
    FLOTANTE        reduce using rule 11 (varblock -> varblock variable .)
    CHARACTER       reduce using rule 11 (varblock -> varblock variable .)
    STRING          reduce using rule 11 (varblock -> varblock variable .)
    TRUE            reduce using rule 11 (varblock -> varblock variable .)
    FALSE           reduce using rule 11 (varblock -> varblock variable .)
    IDENTIFICADOR   reduce using rule 11 (varblock -> varblock variable .)


state 61

    (6) imprimir -> PRINT LPAR valor RPAR .

    $end            reduce using rule 6 (imprimir -> PRINT LPAR valor RPAR .)


state 62

    (13) variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .

    $end            reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    EXCLAMACION     reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    AUTO            reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    CHAR            reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    INT             reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FLOAT           reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    LONG            reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    ENTERO          reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FLOTANTE        reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    CHARACTER       reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    STRING          reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    TRUE            reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    FALSE           reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    ELSE            reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    LLAVER          reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)
    WHILE           reduce using rule 13 (variable -> AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA .)


state 63

    (15) variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .

    $end            reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    EXCLAMACION     reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    AUTO            reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    CHAR            reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    INT             reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    FLOAT           reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    LONG            reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    ENTERO          reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    FLOTANTE        reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    CHARACTER       reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    STRING          reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    TRUE            reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    FALSE           reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    ELSE            reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    LLAVER          reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)
    WHILE           reduce using rule 15 (variable -> numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA .)


state 64

    (17) variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .

    $end            reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    EXCLAMACION     reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    AUTO            reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    CHAR            reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    INT             reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    FLOAT           reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    LONG            reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    ENTERO          reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    FLOTANTE        reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    CHARACTER       reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    STRING          reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    TRUE            reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    FALSE           reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    IDENTIFICADOR   reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    ELSE            reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    LLAVER          reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)
    WHILE           reduce using rule 17 (variable -> CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA .)


state 65

    (36) while -> WHILE LPAR statement RPAR LLAVEL . bodyblock LLAVER
    (7) bodyblock -> . bodyblock variable
    (8) bodyblock -> . bodyblock while
    (9) bodyblock -> . expresionif
    (10) bodyblock -> .
    (38) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (39) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos

    LLAVER          reduce using rule 10 (bodyblock -> .)
    AUTO            reduce using rule 10 (bodyblock -> .)
    CHAR            reduce using rule 10 (bodyblock -> .)
    WHILE           reduce using rule 10 (bodyblock -> .)
    INT             reduce using rule 10 (bodyblock -> .)
    FLOAT           reduce using rule 10 (bodyblock -> .)
    LONG            reduce using rule 10 (bodyblock -> .)
    IF              shift and go to state 10

    bodyblock                      shift and go to state 77
    expresionif                    shift and go to state 78

state 66

    (37) expresion -> expresion comparador expresion .
    (37) expresion -> expresion . comparador expresion
    (61) comparador -> . IGUAL IGUAL
    (62) comparador -> . MENOR
    (63) comparador -> . MAYOR
    (64) comparador -> . MENOR IGUAL
    (65) comparador -> . MAYOR IGUAL
    (66) comparador -> . EXCLAMACION IGUAL

  ! shift/reduce conflict for IGUAL resolved as shift
  ! shift/reduce conflict for MENOR resolved as shift
  ! shift/reduce conflict for MAYOR resolved as shift
  ! shift/reduce conflict for EXCLAMACION resolved as shift
    RPAR            reduce using rule 37 (expresion -> expresion comparador expresion .)
    IGUAL           shift and go to state 49
    MENOR           shift and go to state 50
    MAYOR           shift and go to state 51
    EXCLAMACION     shift and go to state 52

  ! IGUAL           [ reduce using rule 37 (expresion -> expresion comparador expresion .) ]
  ! MENOR           [ reduce using rule 37 (expresion -> expresion comparador expresion .) ]
  ! MAYOR           [ reduce using rule 37 (expresion -> expresion comparador expresion .) ]
  ! EXCLAMACION     [ reduce using rule 37 (expresion -> expresion comparador expresion .) ]

    comparador                     shift and go to state 48

state 67

    (61) comparador -> IGUAL IGUAL .

    ENTERO          reduce using rule 61 (comparador -> IGUAL IGUAL .)
    FLOTANTE        reduce using rule 61 (comparador -> IGUAL IGUAL .)
    CHARACTER       reduce using rule 61 (comparador -> IGUAL IGUAL .)
    STRING          reduce using rule 61 (comparador -> IGUAL IGUAL .)
    TRUE            reduce using rule 61 (comparador -> IGUAL IGUAL .)
    FALSE           reduce using rule 61 (comparador -> IGUAL IGUAL .)
    IDENTIFICADOR   reduce using rule 61 (comparador -> IGUAL IGUAL .)


state 68

    (64) comparador -> MENOR IGUAL .

    ENTERO          reduce using rule 64 (comparador -> MENOR IGUAL .)
    FLOTANTE        reduce using rule 64 (comparador -> MENOR IGUAL .)
    CHARACTER       reduce using rule 64 (comparador -> MENOR IGUAL .)
    STRING          reduce using rule 64 (comparador -> MENOR IGUAL .)
    TRUE            reduce using rule 64 (comparador -> MENOR IGUAL .)
    FALSE           reduce using rule 64 (comparador -> MENOR IGUAL .)
    IDENTIFICADOR   reduce using rule 64 (comparador -> MENOR IGUAL .)


state 69

    (65) comparador -> MAYOR IGUAL .

    ENTERO          reduce using rule 65 (comparador -> MAYOR IGUAL .)
    FLOTANTE        reduce using rule 65 (comparador -> MAYOR IGUAL .)
    CHARACTER       reduce using rule 65 (comparador -> MAYOR IGUAL .)
    STRING          reduce using rule 65 (comparador -> MAYOR IGUAL .)
    TRUE            reduce using rule 65 (comparador -> MAYOR IGUAL .)
    FALSE           reduce using rule 65 (comparador -> MAYOR IGUAL .)
    IDENTIFICADOR   reduce using rule 65 (comparador -> MAYOR IGUAL .)


state 70

    (66) comparador -> EXCLAMACION IGUAL .

    ENTERO          reduce using rule 66 (comparador -> EXCLAMACION IGUAL .)
    FLOTANTE        reduce using rule 66 (comparador -> EXCLAMACION IGUAL .)
    CHARACTER       reduce using rule 66 (comparador -> EXCLAMACION IGUAL .)
    STRING          reduce using rule 66 (comparador -> EXCLAMACION IGUAL .)
    TRUE            reduce using rule 66 (comparador -> EXCLAMACION IGUAL .)
    FALSE           reduce using rule 66 (comparador -> EXCLAMACION IGUAL .)
    IDENTIFICADOR   reduce using rule 66 (comparador -> EXCLAMACION IGUAL .)


state 71

    (56) statement -> EXCLAMACION LPAR expresion . RPAR
    (37) expresion -> expresion . comparador expresion
    (61) comparador -> . IGUAL IGUAL
    (62) comparador -> . MENOR
    (63) comparador -> . MAYOR
    (64) comparador -> . MENOR IGUAL
    (65) comparador -> . MAYOR IGUAL
    (66) comparador -> . EXCLAMACION IGUAL

    RPAR            shift and go to state 79
    IGUAL           shift and go to state 49
    MENOR           shift and go to state 50
    MAYOR           shift and go to state 51
    EXCLAMACION     shift and go to state 52

    comparador                     shift and go to state 48

state 72

    (38) expresionif -> IF LPAR condicionif RPAR conllaves . expresionpos
    (40) expresionpos -> . else
    (41) expresionpos -> . elseif
    (42) expresionpos -> .
    (46) else -> . ELSE conllaves
    (47) else -> . ELSE sinllaves
    (43) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (44) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (45) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 42 (expresionpos -> .)
    $end            reduce using rule 42 (expresionpos -> .)
    LLAVER          reduce using rule 42 (expresionpos -> .)
    AUTO            reduce using rule 42 (expresionpos -> .)
    CHAR            reduce using rule 42 (expresionpos -> .)
    WHILE           reduce using rule 42 (expresionpos -> .)
    INT             reduce using rule 42 (expresionpos -> .)
    FLOAT           reduce using rule 42 (expresionpos -> .)
    LONG            reduce using rule 42 (expresionpos -> .)
    ELSE            shift and go to state 83

  ! $end            [ reduce using rule 45 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 45 (elseif -> .) ]
  ! AUTO            [ reduce using rule 45 (elseif -> .) ]
  ! CHAR            [ reduce using rule 45 (elseif -> .) ]
  ! WHILE           [ reduce using rule 45 (elseif -> .) ]
  ! INT             [ reduce using rule 45 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 45 (elseif -> .) ]
  ! LONG            [ reduce using rule 45 (elseif -> .) ]

    expresionpos                   shift and go to state 80
    else                           shift and go to state 81
    elseif                         shift and go to state 82

state 73

    (39) expresionif -> IF LPAR condicionif RPAR sinllaves . expresionpos
    (40) expresionpos -> . else
    (41) expresionpos -> . elseif
    (42) expresionpos -> .
    (46) else -> . ELSE conllaves
    (47) else -> . ELSE sinllaves
    (43) elseif -> . ELSE IF LPAR condicionif RPAR conllaves else
    (44) elseif -> . ELSE IF LPAR condicionif RPAR sinllaves else
    (45) elseif -> .

  ! reduce/reduce conflict for $end resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for LLAVER resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for AUTO resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for CHAR resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for WHILE resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for INT resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for FLOAT resolved using rule 42 (expresionpos -> .)
  ! reduce/reduce conflict for LONG resolved using rule 42 (expresionpos -> .)
    $end            reduce using rule 42 (expresionpos -> .)
    LLAVER          reduce using rule 42 (expresionpos -> .)
    AUTO            reduce using rule 42 (expresionpos -> .)
    CHAR            reduce using rule 42 (expresionpos -> .)
    WHILE           reduce using rule 42 (expresionpos -> .)
    INT             reduce using rule 42 (expresionpos -> .)
    FLOAT           reduce using rule 42 (expresionpos -> .)
    LONG            reduce using rule 42 (expresionpos -> .)
    ELSE            shift and go to state 83

  ! $end            [ reduce using rule 45 (elseif -> .) ]
  ! LLAVER          [ reduce using rule 45 (elseif -> .) ]
  ! AUTO            [ reduce using rule 45 (elseif -> .) ]
  ! CHAR            [ reduce using rule 45 (elseif -> .) ]
  ! WHILE           [ reduce using rule 45 (elseif -> .) ]
  ! INT             [ reduce using rule 45 (elseif -> .) ]
  ! FLOAT           [ reduce using rule 45 (elseif -> .) ]
  ! LONG            [ reduce using rule 45 (elseif -> .) ]

    expresionpos                   shift and go to state 84
    else                           shift and go to state 81
    elseif                         shift and go to state 82

state 74

    (50) conllaves -> LLAVEL . bodyblock LLAVER
    (7) bodyblock -> . bodyblock variable
    (8) bodyblock -> . bodyblock while
    (9) bodyblock -> . expresionif
    (10) bodyblock -> .
    (38) expresionif -> . IF LPAR condicionif RPAR conllaves expresionpos
    (39) expresionif -> . IF LPAR condicionif RPAR sinllaves expresionpos

    LLAVER          reduce using rule 10 (bodyblock -> .)
    AUTO            reduce using rule 10 (bodyblock -> .)
    CHAR            reduce using rule 10 (bodyblock -> .)
    WHILE           reduce using rule 10 (bodyblock -> .)
    INT             reduce using rule 10 (bodyblock -> .)
    FLOAT           reduce using rule 10 (bodyblock -> .)
    LONG            reduce using rule 10 (bodyblock -> .)
    IF              shift and go to state 10

    bodyblock                      shift and go to state 85
    expresionif                    shift and go to state 78

state 75

    (48) sinllaves -> while .

    ELSE            reduce using rule 48 (sinllaves -> while .)
    $end            reduce using rule 48 (sinllaves -> while .)
    LLAVER          reduce using rule 48 (sinllaves -> while .)
    AUTO            reduce using rule 48 (sinllaves -> while .)
    CHAR            reduce using rule 48 (sinllaves -> while .)
    WHILE           reduce using rule 48 (sinllaves -> while .)
    INT             reduce using rule 48 (sinllaves -> while .)
    FLOAT           reduce using rule 48 (sinllaves -> while .)
    LONG            reduce using rule 48 (sinllaves -> while .)


state 76

    (49) sinllaves -> variable .

    ELSE            reduce using rule 49 (sinllaves -> variable .)
    $end            reduce using rule 49 (sinllaves -> variable .)
    LLAVER          reduce using rule 49 (sinllaves -> variable .)
    AUTO            reduce using rule 49 (sinllaves -> variable .)
    CHAR            reduce using rule 49 (sinllaves -> variable .)
    WHILE           reduce using rule 49 (sinllaves -> variable .)
    INT             reduce using rule 49 (sinllaves -> variable .)
    FLOAT           reduce using rule 49 (sinllaves -> variable .)
    LONG            reduce using rule 49 (sinllaves -> variable .)


state 77

    (36) while -> WHILE LPAR statement RPAR LLAVEL bodyblock . LLAVER
    (7) bodyblock -> bodyblock . variable
    (8) bodyblock -> bodyblock . while
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (36) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG

    LLAVER          shift and go to state 86
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14

    variable                       shift and go to state 87
    while                          shift and go to state 88
    numerotipo                     shift and go to state 7

state 78

    (9) bodyblock -> expresionif .

    LLAVER          reduce using rule 9 (bodyblock -> expresionif .)
    AUTO            reduce using rule 9 (bodyblock -> expresionif .)
    CHAR            reduce using rule 9 (bodyblock -> expresionif .)
    WHILE           reduce using rule 9 (bodyblock -> expresionif .)
    INT             reduce using rule 9 (bodyblock -> expresionif .)
    FLOAT           reduce using rule 9 (bodyblock -> expresionif .)
    LONG            reduce using rule 9 (bodyblock -> expresionif .)


state 79

    (56) statement -> EXCLAMACION LPAR expresion RPAR .

    RPAR            reduce using rule 56 (statement -> EXCLAMACION LPAR expresion RPAR .)


state 80

    (38) expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .

    $end            reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LLAVER          reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    AUTO            reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    CHAR            reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    WHILE           reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    INT             reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    FLOAT           reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)
    LONG            reduce using rule 38 (expresionif -> IF LPAR condicionif RPAR conllaves expresionpos .)


state 81

    (40) expresionpos -> else .

    $end            reduce using rule 40 (expresionpos -> else .)
    LLAVER          reduce using rule 40 (expresionpos -> else .)
    AUTO            reduce using rule 40 (expresionpos -> else .)
    CHAR            reduce using rule 40 (expresionpos -> else .)
    WHILE           reduce using rule 40 (expresionpos -> else .)
    INT             reduce using rule 40 (expresionpos -> else .)
    FLOAT           reduce using rule 40 (expresionpos -> else .)
    LONG            reduce using rule 40 (expresionpos -> else .)


state 82

    (41) expresionpos -> elseif .

    $end            reduce using rule 41 (expresionpos -> elseif .)
    LLAVER          reduce using rule 41 (expresionpos -> elseif .)
    AUTO            reduce using rule 41 (expresionpos -> elseif .)
    CHAR            reduce using rule 41 (expresionpos -> elseif .)
    WHILE           reduce using rule 41 (expresionpos -> elseif .)
    INT             reduce using rule 41 (expresionpos -> elseif .)
    FLOAT           reduce using rule 41 (expresionpos -> elseif .)
    LONG            reduce using rule 41 (expresionpos -> elseif .)


state 83

    (46) else -> ELSE . conllaves
    (47) else -> ELSE . sinllaves
    (43) elseif -> ELSE . IF LPAR condicionif RPAR conllaves else
    (44) elseif -> ELSE . IF LPAR condicionif RPAR sinllaves else
    (50) conllaves -> . LLAVEL bodyblock LLAVER
    (48) sinllaves -> . while
    (49) sinllaves -> . variable
    (36) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG

    IF              shift and go to state 91
    LLAVEL          shift and go to state 74
    WHILE           shift and go to state 9
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14

    conllaves                      shift and go to state 89
    sinllaves                      shift and go to state 90
    while                          shift and go to state 75
    variable                       shift and go to state 76
    numerotipo                     shift and go to state 7

state 84

    (39) expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .

    $end            reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LLAVER          reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    AUTO            reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    CHAR            reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    WHILE           reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    INT             reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    FLOAT           reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)
    LONG            reduce using rule 39 (expresionif -> IF LPAR condicionif RPAR sinllaves expresionpos .)


state 85

    (50) conllaves -> LLAVEL bodyblock . LLAVER
    (7) bodyblock -> bodyblock . variable
    (8) bodyblock -> bodyblock . while
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (36) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG

    LLAVER          shift and go to state 92
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    WHILE           shift and go to state 9
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14

    variable                       shift and go to state 87
    while                          shift and go to state 88
    numerotipo                     shift and go to state 7

state 86

    (36) while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .

    $end            reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    ELSE            reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 36 (while -> WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER .)


state 87

    (7) bodyblock -> bodyblock variable .

    LLAVER          reduce using rule 7 (bodyblock -> bodyblock variable .)
    AUTO            reduce using rule 7 (bodyblock -> bodyblock variable .)
    CHAR            reduce using rule 7 (bodyblock -> bodyblock variable .)
    WHILE           reduce using rule 7 (bodyblock -> bodyblock variable .)
    INT             reduce using rule 7 (bodyblock -> bodyblock variable .)
    FLOAT           reduce using rule 7 (bodyblock -> bodyblock variable .)
    LONG            reduce using rule 7 (bodyblock -> bodyblock variable .)


state 88

    (8) bodyblock -> bodyblock while .

    LLAVER          reduce using rule 8 (bodyblock -> bodyblock while .)
    AUTO            reduce using rule 8 (bodyblock -> bodyblock while .)
    CHAR            reduce using rule 8 (bodyblock -> bodyblock while .)
    WHILE           reduce using rule 8 (bodyblock -> bodyblock while .)
    INT             reduce using rule 8 (bodyblock -> bodyblock while .)
    FLOAT           reduce using rule 8 (bodyblock -> bodyblock while .)
    LONG            reduce using rule 8 (bodyblock -> bodyblock while .)


state 89

    (46) else -> ELSE conllaves .

    $end            reduce using rule 46 (else -> ELSE conllaves .)
    LLAVER          reduce using rule 46 (else -> ELSE conllaves .)
    AUTO            reduce using rule 46 (else -> ELSE conllaves .)
    CHAR            reduce using rule 46 (else -> ELSE conllaves .)
    WHILE           reduce using rule 46 (else -> ELSE conllaves .)
    INT             reduce using rule 46 (else -> ELSE conllaves .)
    FLOAT           reduce using rule 46 (else -> ELSE conllaves .)
    LONG            reduce using rule 46 (else -> ELSE conllaves .)


state 90

    (47) else -> ELSE sinllaves .

    $end            reduce using rule 47 (else -> ELSE sinllaves .)
    LLAVER          reduce using rule 47 (else -> ELSE sinllaves .)
    AUTO            reduce using rule 47 (else -> ELSE sinllaves .)
    CHAR            reduce using rule 47 (else -> ELSE sinllaves .)
    WHILE           reduce using rule 47 (else -> ELSE sinllaves .)
    INT             reduce using rule 47 (else -> ELSE sinllaves .)
    FLOAT           reduce using rule 47 (else -> ELSE sinllaves .)
    LONG            reduce using rule 47 (else -> ELSE sinllaves .)


state 91

    (43) elseif -> ELSE IF . LPAR condicionif RPAR conllaves else
    (44) elseif -> ELSE IF . LPAR condicionif RPAR sinllaves else

    LPAR            shift and go to state 93


state 92

    (50) conllaves -> LLAVEL bodyblock LLAVER .

    ELSE            reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    $end            reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    LLAVER          reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    AUTO            reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    CHAR            reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    WHILE           reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    INT             reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    FLOAT           reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)
    LONG            reduce using rule 50 (conllaves -> LLAVEL bodyblock LLAVER .)


state 93

    (43) elseif -> ELSE IF LPAR . condicionif RPAR conllaves else
    (44) elseif -> ELSE IF LPAR . condicionif RPAR sinllaves else
    (51) condicionif -> . initcondicion
    (52) condicionif -> . statement
    (53) initcondicion -> . varblock statement
    (54) statement -> . expresion
    (55) statement -> . EXCLAMACION boolean
    (56) statement -> . EXCLAMACION LPAR expresion RPAR
    (57) statement -> . EXCLAMACION IDENTIFICADOR
    (11) varblock -> . varblock variable
    (12) varblock -> .
    (37) expresion -> . expresion comparador expresion
    (60) expresion -> . valor
    (29) valor -> . ENTERO
    (30) valor -> . FLOTANTE
    (31) valor -> . CHARACTER
    (32) valor -> . STRING
    (33) valor -> . TRUE
    (34) valor -> . FALSE
    (35) valor -> . IDENTIFICADOR

  ! shift/reduce conflict for EXCLAMACION resolved as shift
  ! shift/reduce conflict for ENTERO resolved as shift
  ! shift/reduce conflict for FLOTANTE resolved as shift
  ! shift/reduce conflict for CHARACTER resolved as shift
  ! shift/reduce conflict for STRING resolved as shift
  ! shift/reduce conflict for TRUE resolved as shift
  ! shift/reduce conflict for FALSE resolved as shift
  ! shift/reduce conflict for IDENTIFICADOR resolved as shift
    EXCLAMACION     shift and go to state 28
    AUTO            reduce using rule 12 (varblock -> .)
    CHAR            reduce using rule 12 (varblock -> .)
    INT             reduce using rule 12 (varblock -> .)
    FLOAT           reduce using rule 12 (varblock -> .)
    LONG            reduce using rule 12 (varblock -> .)
    ENTERO          shift and go to state 31
    FLOTANTE        shift and go to state 32
    CHARACTER       shift and go to state 33
    STRING          shift and go to state 34
    TRUE            shift and go to state 35
    FALSE           shift and go to state 36
    IDENTIFICADOR   shift and go to state 29

  ! EXCLAMACION     [ reduce using rule 12 (varblock -> .) ]
  ! ENTERO          [ reduce using rule 12 (varblock -> .) ]
  ! FLOTANTE        [ reduce using rule 12 (varblock -> .) ]
  ! CHARACTER       [ reduce using rule 12 (varblock -> .) ]
  ! STRING          [ reduce using rule 12 (varblock -> .) ]
  ! TRUE            [ reduce using rule 12 (varblock -> .) ]
  ! FALSE           [ reduce using rule 12 (varblock -> .) ]
  ! IDENTIFICADOR   [ reduce using rule 12 (varblock -> .) ]

    condicionif                    shift and go to state 94
    initcondicion                  shift and go to state 38
    statement                      shift and go to state 39
    varblock                       shift and go to state 40
    expresion                      shift and go to state 27
    valor                          shift and go to state 30

state 94

    (43) elseif -> ELSE IF LPAR condicionif . RPAR conllaves else
    (44) elseif -> ELSE IF LPAR condicionif . RPAR sinllaves else

    RPAR            shift and go to state 95


state 95

    (43) elseif -> ELSE IF LPAR condicionif RPAR . conllaves else
    (44) elseif -> ELSE IF LPAR condicionif RPAR . sinllaves else
    (50) conllaves -> . LLAVEL bodyblock LLAVER
    (48) sinllaves -> . while
    (49) sinllaves -> . variable
    (36) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG

    LLAVEL          shift and go to state 74
    WHILE           shift and go to state 9
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14

    conllaves                      shift and go to state 96
    sinllaves                      shift and go to state 97
    while                          shift and go to state 75
    variable                       shift and go to state 76
    numerotipo                     shift and go to state 7

state 96

    (43) elseif -> ELSE IF LPAR condicionif RPAR conllaves . else
    (46) else -> . ELSE conllaves
    (47) else -> . ELSE sinllaves

    ELSE            shift and go to state 98

    else                           shift and go to state 99

state 97

    (44) elseif -> ELSE IF LPAR condicionif RPAR sinllaves . else
    (46) else -> . ELSE conllaves
    (47) else -> . ELSE sinllaves

    ELSE            shift and go to state 98

    else                           shift and go to state 100

state 98

    (46) else -> ELSE . conllaves
    (47) else -> ELSE . sinllaves
    (50) conllaves -> . LLAVEL bodyblock LLAVER
    (48) sinllaves -> . while
    (49) sinllaves -> . variable
    (36) while -> . WHILE LPAR statement RPAR LLAVEL bodyblock LLAVER
    (13) variable -> . AUTO IDENTIFICADOR IGUAL valor PUNTOCOMA
    (14) variable -> . AUTO IDENTIFICADOR PUNTOCOMA
    (15) variable -> . numerotipo IDENTIFICADOR IGUAL numero PUNTOCOMA
    (16) variable -> . numerotipo IDENTIFICADOR PUNTOCOMA
    (17) variable -> . CHAR IDENTIFICADOR IGUAL CHARACTER PUNTOCOMA
    (18) numerotipo -> . INT
    (19) numerotipo -> . FLOAT
    (20) numerotipo -> . LONG

    LLAVEL          shift and go to state 74
    WHILE           shift and go to state 9
    AUTO            shift and go to state 6
    CHAR            shift and go to state 8
    INT             shift and go to state 12
    FLOAT           shift and go to state 13
    LONG            shift and go to state 14

    conllaves                      shift and go to state 89
    sinllaves                      shift and go to state 90
    while                          shift and go to state 75
    variable                       shift and go to state 76
    numerotipo                     shift and go to state 7

state 99

    (43) elseif -> ELSE IF LPAR condicionif RPAR conllaves else .

    $end            reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LLAVER          reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    AUTO            reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    CHAR            reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    WHILE           reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    INT             reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    FLOAT           reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)
    LONG            reduce using rule 43 (elseif -> ELSE IF LPAR condicionif RPAR conllaves else .)


state 100

    (44) elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .

    $end            reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LLAVER          reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    AUTO            reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    CHAR            reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    WHILE           reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    INT             reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    FLOAT           reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)
    LONG            reduce using rule 44 (elseif -> ELSE IF LPAR condicionif RPAR sinllaves else .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for EXCLAMACION in state 19 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 19 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 19 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 19 resolved as shift
WARNING: shift/reduce conflict for STRING in state 19 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 19 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 19 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 19 resolved as shift
WARNING: shift/reduce conflict for IGUAL in state 66 resolved as shift
WARNING: shift/reduce conflict for MENOR in state 66 resolved as shift
WARNING: shift/reduce conflict for MAYOR in state 66 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 66 resolved as shift
WARNING: shift/reduce conflict for EXCLAMACION in state 93 resolved as shift
WARNING: shift/reduce conflict for ENTERO in state 93 resolved as shift
WARNING: shift/reduce conflict for FLOTANTE in state 93 resolved as shift
WARNING: shift/reduce conflict for CHARACTER in state 93 resolved as shift
WARNING: shift/reduce conflict for STRING in state 93 resolved as shift
WARNING: shift/reduce conflict for TRUE in state 93 resolved as shift
WARNING: shift/reduce conflict for FALSE in state 93 resolved as shift
WARNING: shift/reduce conflict for IDENTIFICADOR in state 93 resolved as shift
WARNING: reduce/reduce conflict in state 72 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 72
WARNING: reduce/reduce conflict in state 73 resolved using rule (expresionpos -> <empty>)
WARNING: rejected rule (elseif -> <empty>) in state 73
WARNING: Rule (elseif -> <empty>) is never reduced
